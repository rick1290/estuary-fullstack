# Generated by Django 5.1.3 on 2025-06-10 04:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0007_initial'),
        ('rooms', '0003_initial'),
        ('services', '0001_initial'),
        ('utils', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='serviceresourceaccess',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicesession',
            name='address',
            field=models.ForeignKey(blank=True, help_text='Address where this session takes place (for in-person sessions)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='utils.address'),
        ),
        migrations.AddField(
            model_name='servicesession',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_sessions', to='rooms.room'),
        ),
        migrations.AddField(
            model_name='servicesession',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='services.service'),
        ),
        migrations.AddField(
            model_name='serviceresource',
            name='service_session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='services.servicesession'),
        ),
        migrations.AddField(
            model_name='servicebenefit',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='services.servicesession'),
        ),
        migrations.AddField(
            model_name='servicetype',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_types', to='services.servicecategory'),
        ),
        migrations.AddField(
            model_name='service',
            name='service_type',
            field=models.ForeignKey(help_text='Type of service', on_delete=django.db.models.deletion.PROTECT, to='services.servicetype'),
        ),
        migrations.AddField(
            model_name='sessionagendaitem',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agenda_items', to='services.service'),
        ),
        migrations.AddField(
            model_name='sessionagendaitem',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agenda_items', to='services.servicesession'),
        ),
        migrations.AddField(
            model_name='sessionparticipant',
            name='booking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.booking'),
        ),
        migrations.AddField(
            model_name='sessionparticipant',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='services.servicesession'),
        ),
        migrations.AddField(
            model_name='sessionparticipant',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='waitlist',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waitlist_entries', to='services.service'),
        ),
        migrations.AddField(
            model_name='waitlist',
            name='service_session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waitlist_entries', to='services.servicesession'),
        ),
        migrations.AddField(
            model_name='waitlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist_entries', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='servicepractitioner',
            unique_together={('service', 'practitioner')},
        ),
        migrations.AlterUniqueTogether(
            name='servicerelationship',
            unique_together={('parent_service', 'child_service')},
        ),
        migrations.AddIndex(
            model_name='serviceresourceaccess',
            index=models.Index(fields=['resource', 'user'], name='services_se_resourc_c4adcf_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceresourceaccess',
            index=models.Index(fields=['accessed_at'], name='services_se_accesse_15c7ce_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='servicesession',
            unique_together={('service', 'start_time')},
        ),
        migrations.AddIndex(
            model_name='serviceresource',
            index=models.Index(fields=['attachment_level', 'resource_type'], name='services_se_attachm_c0f742_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceresource',
            index=models.Index(fields=['service', 'access_level'], name='services_se_service_8d23b0_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceresource',
            index=models.Index(fields=['service_session'], name='services_se_service_b60c80_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceresource',
            index=models.Index(fields=['booking'], name='services_se_booking_2a5f37_idx'),
        ),
        migrations.AddConstraint(
            model_name='serviceresource',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('attachment_level', 'service'), ('booking__isnull', True), ('service__isnull', False), ('service_session__isnull', True)), models.Q(('attachment_level', 'session'), ('booking__isnull', True), ('service__isnull', True), ('service_session__isnull', False)), models.Q(('attachment_level', 'booking'), ('booking__isnull', False), ('service__isnull', True), ('service_session__isnull', True)), _connector='OR'), name='resource_parent_matches_level'),
        ),
        migrations.AddConstraint(
            model_name='servicebenefit',
            constraint=models.CheckConstraint(condition=models.Q(('service__isnull', False), ('session__isnull', False), _connector='OR'), name='service_or_session_required'),
        ),
        migrations.AddConstraint(
            model_name='servicebenefit',
            constraint=models.UniqueConstraint(condition=models.Q(('service__isnull', False)), fields=('service', 'order'), name='unique_service_benefit_order'),
        ),
        migrations.AddConstraint(
            model_name='servicebenefit',
            constraint=models.UniqueConstraint(condition=models.Q(('session__isnull', False)), fields=('session', 'order'), name='unique_session_benefit_order'),
        ),
        migrations.AddIndex(
            model_name='servicetype',
            index=models.Index(fields=['code'], name='services_se_code_09efd4_idx'),
        ),
        migrations.AddIndex(
            model_name='servicetype',
            index=models.Index(fields=['is_active', 'order'], name='services_se_is_acti_9607ae_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['service_type'], name='services_se_service_57f6a4_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['category'], name='services_se_categor_7ca2f8_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['is_active'], name='services_se_is_acti_91b7ea_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['is_featured'], name='services_se_is_feat_35b40d_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['experience_level'], name='services_se_experie_b45ddc_idx'),
        ),
        migrations.AddConstraint(
            model_name='sessionagendaitem',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('service__isnull', False), ('session__isnull', True)), models.Q(('service__isnull', True), ('session__isnull', False)), _connector='OR'), name='agenda_item_exactly_one_parent'),
        ),
        migrations.AddConstraint(
            model_name='sessionagendaitem',
            constraint=models.UniqueConstraint(condition=models.Q(('service__isnull', False)), fields=('service', 'order'), name='unique_service_agenda_item_order'),
        ),
        migrations.AddConstraint(
            model_name='sessionagendaitem',
            constraint=models.UniqueConstraint(condition=models.Q(('session__isnull', False)), fields=('session', 'order'), name='unique_session_agenda_item_order'),
        ),
        migrations.AlterUniqueTogether(
            name='sessionparticipant',
            unique_together={('session', 'user')},
        ),
        migrations.AddIndex(
            model_name='waitlist',
            index=models.Index(fields=['service'], name='waitlists_service_86d078_idx'),
        ),
        migrations.AddIndex(
            model_name='waitlist',
            index=models.Index(fields=['service_session'], name='waitlists_service_b45b98_idx'),
        ),
        migrations.AddIndex(
            model_name='waitlist',
            index=models.Index(fields=['user'], name='waitlists_user_id_906ab3_idx'),
        ),
        migrations.AddIndex(
            model_name='waitlist',
            index=models.Index(fields=['status'], name='waitlists_status_2edb70_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='waitlist',
            unique_together={('service', 'user'), ('service_session', 'user')},
        ),
    ]
