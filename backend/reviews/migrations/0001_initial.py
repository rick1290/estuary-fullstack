# Generated by Django 5.1.7 on 2025-03-24 06:13

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("bookings", "0002_initial"),
        ("practitioners", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ReviewAnswer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("rating_answer", models.IntegerField(blank=True, null=True)),
                ("text_answer", models.TextField(blank=True, null=True)),
                ("boolean_answer", models.BooleanField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "review_answers",
            },
        ),
        migrations.CreateModel(
            name="ReviewQuestion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("question", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_required", models.BooleanField(default=True)),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("rating", "Rating"),
                            ("text", "Text"),
                            ("boolean", "Yes/No"),
                        ],
                        max_length=20,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "applies_to",
                    models.CharField(
                        choices=[
                            ("service", "Service"),
                            ("practitioner", "Practitioner"),
                            ("both", "Both"),
                        ],
                        default="both",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "review_questions",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ReviewReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("inappropriate", "Inappropriate Content"),
                            ("spam", "Spam"),
                            ("off_topic", "Off Topic"),
                            ("fake", "Fake Review"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("details", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "review_reports",
            },
        ),
        migrations.CreateModel(
            name="ReviewVote",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("is_helpful", models.BooleanField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "review_votes",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "rating",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("is_anonymous", models.BooleanField(default=False)),
                ("is_verified", models.BooleanField(default=True)),
                ("is_published", models.BooleanField(default=True)),
                ("helpful_votes", models.PositiveIntegerField(default=0)),
                ("unhelpful_votes", models.PositiveIntegerField(default=0)),
                ("reported_count", models.PositiveIntegerField(default=0)),
                (
                    "booking",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviews",
                        to="bookings.booking",
                    ),
                ),
                (
                    "practitioner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="practitioners.practitioner",
                    ),
                ),
            ],
            options={
                "db_table": "reviews",
            },
        ),
    ]
