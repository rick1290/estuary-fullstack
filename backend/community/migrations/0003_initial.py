# Generated by Django 5.1.3 on 2025-06-04 16:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('community', '0002_initial'),
        ('practitioners', '0001_initial'),
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='communityfollow',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_follows', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='communitytopic',
            index=models.Index(fields=['slug'], name='community_c_slug_1fbf42_idx'),
        ),
        migrations.AddIndex(
            model_name='communitytopic',
            index=models.Index(fields=['is_featured'], name='community_c_is_feat_bd1f02_idx'),
        ),
        migrations.AddIndex(
            model_name='communitytopic',
            index=models.Index(fields=['name'], name='community_c_name_0cb5c2_idx'),
        ),
        migrations.AddField(
            model_name='post',
            name='practitioner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='practitioners.practitioner'),
        ),
        migrations.AddField(
            model_name='post',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='posts', to='community.communitytopic'),
        ),
        migrations.AddField(
            model_name='postcomment',
            name='parent_comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='community.postcomment'),
        ),
        migrations.AddField(
            model_name='postcomment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='community.post'),
        ),
        migrations.AddField(
            model_name='postcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postpurchasevisibility',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_visibility', to='community.post'),
        ),
        migrations.AddField(
            model_name='postpurchasevisibility',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visible_posts', to='services.service'),
        ),
        migrations.AddField(
            model_name='postreaction',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='community.post'),
        ),
        migrations.AddField(
            model_name='postreaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_reactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='communityfollow',
            index=models.Index(fields=['user'], name='community_c_user_id_179ad6_idx'),
        ),
        migrations.AddIndex(
            model_name='communityfollow',
            index=models.Index(fields=['practitioner'], name='community_c_practit_d1fdb9_idx'),
        ),
        migrations.AddConstraint(
            model_name='communityfollow',
            constraint=models.UniqueConstraint(fields=('user', 'practitioner'), name='unique_user_practitioner_follow'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['practitioner', 'visibility'], name='community_p_practit_04b839_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['created_at', 'is_pinned'], name='community_p_created_3f2180_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['is_featured', 'visibility'], name='community_p_is_feat_eb75df_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['is_archived'], name='community_p_is_arch_69604c_idx'),
        ),
        migrations.AddIndex(
            model_name='postcomment',
            index=models.Index(fields=['post', 'created_at'], name='community_p_post_id_c9828b_idx'),
        ),
        migrations.AddIndex(
            model_name='postcomment',
            index=models.Index(fields=['user'], name='community_p_user_id_d0d9ca_idx'),
        ),
        migrations.AddIndex(
            model_name='postcomment',
            index=models.Index(fields=['parent_comment'], name='community_p_parent__1428bf_idx'),
        ),
        migrations.AddIndex(
            model_name='postcomment',
            index=models.Index(fields=['is_hidden'], name='community_p_is_hidd_880e81_idx'),
        ),
        migrations.AddIndex(
            model_name='postpurchasevisibility',
            index=models.Index(fields=['post'], name='community_p_post_id_292065_idx'),
        ),
        migrations.AddIndex(
            model_name='postpurchasevisibility',
            index=models.Index(fields=['service'], name='community_p_service_faac46_idx'),
        ),
        migrations.AddConstraint(
            model_name='postpurchasevisibility',
            constraint=models.UniqueConstraint(fields=('post', 'service'), name='unique_post_service_visibility'),
        ),
        migrations.AddIndex(
            model_name='postreaction',
            index=models.Index(fields=['post', 'reaction_type'], name='community_p_post_id_f86415_idx'),
        ),
        migrations.AddIndex(
            model_name='postreaction',
            index=models.Index(fields=['user'], name='community_p_user_id_5e6e25_idx'),
        ),
        migrations.AddConstraint(
            model_name='postreaction',
            constraint=models.UniqueConstraint(fields=('post', 'user', 'reaction_type'), name='unique_user_reaction_per_post'),
        ),
    ]
