# Generated by Django 5.1.7 on 2025-03-24 06:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CommunityFollow",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Community Follow",
                "verbose_name_plural": "Community Follows",
                "db_table": "community_follows",
            },
        ),
        migrations.CreateModel(
            name="CommunityTopic",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Feature this topic in the community highlights",
                    ),
                ),
                ("post_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Topic",
                "verbose_name_plural": "Topics",
                "db_table": "community_topics",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("content", models.TextField()),
                (
                    "media_url",
                    models.URLField(
                        blank=True, help_text="URL to image or video", null=True
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("private", "Private"),
                            ("followers", "Followers"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_pinned",
                    models.BooleanField(
                        default=False, help_text="Pin this post to the top of the feed"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Feature this post in the community highlights",
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(
                        default=False,
                        help_text="Archive this post (hidden but not deleted)",
                    ),
                ),
                ("like_count", models.PositiveIntegerField(default=0)),
                ("heart_count", models.PositiveIntegerField(default=0)),
                ("comment_count", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Post",
                "verbose_name_plural": "Posts",
                "db_table": "community_posts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PostComment",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_hidden",
                    models.BooleanField(
                        default=False,
                        help_text="Hide this comment (e.g., for moderation)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
                "db_table": "community_post_comments",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="PostPurchaseVisibility",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Post Purchase Visibility",
                "verbose_name_plural": "Post Purchase Visibilities",
                "db_table": "community_post_purchase_visibility",
            },
        ),
        migrations.CreateModel(
            name="PostReaction",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "reaction_type",
                    models.CharField(
                        choices=[("like", "Like"), ("heart", "Heart")], max_length=20
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Reaction",
                "verbose_name_plural": "Reactions",
                "db_table": "community_post_reactions",
            },
        ),
    ]
