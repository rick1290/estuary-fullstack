# Generated by Django 5.1.3 on 2025-06-04 16:07

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('utils', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('is_private', models.BooleanField(default=False, help_text='Whether note is visible only to practitioners')),
            ],
            options={
                'verbose_name': 'Booking Note',
                'verbose_name_plural': 'Booking Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reminder_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('webhook', 'Webhook')], max_length=20)),
                ('scheduled_time', models.DateTimeField(help_text='When to send the reminder')),
                ('sent_at', models.DateTimeField(blank=True, help_text='When reminder was actually sent', null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('send_attempts', models.PositiveIntegerField(default=0)),
                ('last_attempt_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Booking Reminder',
                'verbose_name_plural': 'Booking Reminders',
                'ordering': ['scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('public_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Public UUID for API exposure', unique=True)),
                ('start_time', models.DateTimeField(help_text='Scheduled start time')),
                ('end_time', models.DateTimeField(help_text='Scheduled end time')),
                ('actual_start_time', models.DateTimeField(blank=True, help_text='Actual start time', null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, help_text='Actual end time', null=True)),
                ('timezone', models.CharField(default='UTC', help_text='Timezone for this booking', max_length=50)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('canceled', 'Canceled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('partially_paid', 'Partially Paid'), ('refunded', 'Refunded'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('title', models.CharField(blank=True, help_text='Custom booking title', max_length=255, null=True)),
                ('description', models.TextField(blank=True, help_text='Booking description or notes', null=True)),
                ('client_notes', models.TextField(blank=True, help_text='Notes from the client', null=True)),
                ('practitioner_notes', models.TextField(blank=True, help_text='Private notes from practitioner', null=True)),
                ('meeting_url', models.URLField(blank=True, help_text='Virtual meeting link', null=True)),
                ('meeting_id', models.CharField(blank=True, help_text='Meeting ID or room number', max_length=100, null=True)),
                ('price_charged', models.DecimalField(decimal_places=2, help_text='Amount charged for this booking', max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Discount applied', max_digits=10)),
                ('final_amount', models.DecimalField(decimal_places=2, help_text='Final amount after discounts', max_digits=10)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('no_show_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('canceled_by', models.CharField(blank=True, choices=[('client', 'Client'), ('practitioner', 'Practitioner'), ('system', 'System'), ('admin', 'Admin')], max_length=20, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('max_participants', models.PositiveIntegerField(default=1, help_text='Max participants for this booking')),
                ('location', models.ForeignKey(blank=True, help_text='Physical location if in-person', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='utils.location')),
                ('parent_booking', models.ForeignKey(blank=True, help_text='Parent booking for packages/bundles', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_bookings', to='bookings.booking')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-start_time'],
            },
        ),
    ]
