# Generated by Django 5.1.7 on 2025-03-24 06:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("bookings", "0002_initial"),
        ("practitioners", "0001_initial"),
        ("rooms", "0001_initial"),
        ("services", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="booking",
            name="parent_service",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="booking_parent_service_set",
                to="services.service",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="practitioner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="practitioners.practitioner",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="room",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="rooms.room",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="service",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="services.service",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="service_session",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="services.servicesession",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="topics",
            field=models.ManyToManyField(
                blank=True, related_name="bookings", to="practitioners.topic"
            ),
        ),
    ]
