# Generated by Django 5.1.3 on 2025-06-10 04:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('population', models.IntegerField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('metro_area', models.CharField(blank=True, help_text="e.g., 'San Francisco Bay Area', 'Greater NYC'", max_length=100, null=True)),
                ('is_major', models.BooleanField(default=False, help_text='Flag for SEO-focused cities')),
                ('is_active', models.BooleanField(default=True)),
                ('service_count', models.PositiveIntegerField(default=0, help_text='Number of active services')),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Cities',
                'ordering': ['-is_major', '-population', 'name'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(help_text="State/province code (e.g., 'CA', 'ON', 'NSW')", max_length=10)),
                ('slug', models.SlugField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['country', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ZipCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
            options={
                'verbose_name': 'Postal Code',
                'verbose_name_plural': 'Postal Codes',
                'ordering': ['country', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Full country name', max_length=100, unique=True)),
                ('code', models.CharField(help_text='ISO 3166-1 alpha-2 country code', max_length=2, unique=True)),
                ('code_3', models.CharField(help_text='ISO 3166-1 alpha-3 country code', max_length=3, unique=True)),
                ('numeric_code', models.CharField(blank=True, help_text='ISO 3166-1 numeric code', max_length=3, null=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('phone_code', models.CharField(blank=True, help_text='International dialing code', max_length=10, null=True)),
                ('currency_code', models.CharField(blank=True, help_text='ISO 4217 currency code', max_length=3, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['code'], name='locations_c_code_9c92f4_idx'), models.Index(fields=['is_active'], name='locations_c_is_acti_a5aef5_idx')],
            },
        ),
        migrations.CreateModel(
            name='PractitionerLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, help_text="Optional name for this location (e.g., 'Downtown Office')", max_length=255, null=True)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_virtual', models.BooleanField(default=False, help_text='Whether this practitioner offers virtual services from this location')),
                ('is_in_person', models.BooleanField(default=True, help_text='Whether this practitioner offers in-person services at this location')),
                ('service_radius_miles', models.DecimalField(blank=True, decimal_places=1, help_text='Service area radius in miles (for mobile services)', max_digits=5, null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='practitioner_locations', to='locations.city')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.country')),
            ],
            options={
                'ordering': ['-is_primary', 'created_at'],
            },
        ),
    ]
