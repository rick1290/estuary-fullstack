# Generated by Django 5.1.3 on 2025-06-11 00:03

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Media',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('public_uuid', models.UUIDField(db_index=True, default=uuid.uuid4, help_text='Public UUID for API exposure', unique=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(help_text='URL to the file in CloudFlare R2', max_length=500)),
                ('thumbnail_url', models.URLField(blank=True, help_text='URL to the thumbnail version', max_length=500, null=True)),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveBigIntegerField(help_text='File size in bytes')),
                ('content_type', models.CharField(max_length=100)),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('document', 'Document'), ('audio', 'Audio')], max_length=20)),
                ('entity_type', models.CharField(choices=[('service', 'Service'), ('practitioner', 'Practitioner'), ('review', 'Review'), ('user', 'User'), ('stream_post', 'Stream Post'), ('room_recording', 'Room Recording')], max_length=50)),
                ('entity_id', models.UUIDField()),
                ('storage_key', models.CharField(help_text='Key/path in storage backend', max_length=500)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('alt_text', models.CharField(blank=True, help_text='Alternative text for accessibility', max_length=500, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('ready', 'Ready'), ('failed', 'Failed'), ('deleted', 'Deleted')], default='pending', max_length=20)),
                ('processing_metadata', models.JSONField(blank=True, help_text='Processing metadata and results', null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, help_text='Duration in seconds for audio/video', null=True)),
                ('is_primary', models.BooleanField(default=False, help_text='Primary media for the entity')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Display order within entity')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_media', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Media',
                'verbose_name_plural': 'Media',
                'ordering': ['display_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MediaProcessingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('operations', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), help_text='List of operations to perform', size=None)),
                ('options', models.JSONField(default=dict, help_text='Processing options and parameters')),
                ('progress', models.FloatField(default=0.0, help_text='Progress percentage (0-100)')),
                ('current_operation', models.CharField(blank=True, max_length=100, null=True)),
                ('completed_operations', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_jobs', to='media.media')),
            ],
            options={
                'verbose_name': 'Media Processing Job',
                'verbose_name_plural': 'Media Processing Jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MediaVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_type', models.CharField(help_text="e.g., 'thumbnail', 'small', 'medium', 'large', 'hd'", max_length=50)),
                ('url', models.URLField(max_length=500)),
                ('storage_key', models.CharField(help_text='Key/path in storage backend', max_length=500)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('file_size', models.PositiveBigIntegerField()),
                ('format', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='media.media')),
            ],
            options={
                'verbose_name': 'Media Version',
                'verbose_name_plural': 'Media Versions',
                'ordering': ['version_type'],
            },
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['entity_type', 'entity_id'], name='media_media_entity__0a7035_idx'),
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['media_type'], name='media_media_media_t_90cd6a_idx'),
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['status'], name='media_media_status_47c227_idx'),
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['is_primary'], name='media_media_is_prim_cf8af3_idx'),
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['uploaded_by'], name='media_media_uploade_dc9a80_idx'),
        ),
        migrations.AddConstraint(
            model_name='media',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('entity_type', 'entity_id'), name='unique_primary_media_per_entity'),
        ),
        migrations.AddIndex(
            model_name='mediaprocessingjob',
            index=models.Index(fields=['job_id'], name='media_media_job_id_f1898d_idx'),
        ),
        migrations.AddIndex(
            model_name='mediaprocessingjob',
            index=models.Index(fields=['status'], name='media_media_status_f37bc8_idx'),
        ),
        migrations.AddIndex(
            model_name='mediaprocessingjob',
            index=models.Index(fields=['created_at'], name='media_media_created_802087_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='mediaversion',
            unique_together={('media', 'version_type')},
        ),
    ]
