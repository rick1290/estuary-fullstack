openapi: 3.0.3
info:
  title: Estuary API
  version: 1.0.0
  description: "\n    # Estuary Wellness Marketplace API\n    \n    ## Overview\n\
    \    The Estuary API provides a comprehensive platform for wellness services,\
    \ connecting practitioners with clients through an intuitive marketplace. Our\
    \ API supports various service types including sessions, workshops, and courses.\n\
    \    \n    ## Key Features\n    - **Practitioner Management**: Complete profile\
    \ and service management for wellness professionals\n    - **Booking System**:\
    \ Flexible booking for sessions, workshops, and courses\n    - **Payment Processing**:\
    \ Secure payment handling with credit-based system\n    - **Real-time Communications**:\
    \ Video streaming and messaging capabilities\n    - **Content Platform**: Support\
    \ for streaming content and media management\n    \n    ## Authentication\n  \
    \  All API endpoints require authentication using JWT tokens. Include the token\
    \ in the Authorization header:\n    ```\n    Authorization: Bearer <your-token>\n\
    \    ```\n    \n    ## Rate Limiting\n    - Anonymous users: 100 requests per\
    \ hour\n    - Authenticated users: 1000 requests per hour\n    \n    ## API Versioning\n\
    \    The API uses URL-based versioning. Current version: v1\n    \n    ## Response\
    \ Format\n    All responses are in JSON format with consistent error handling.\n\
    \    "
  contact:
    name: Estuary API Support
    email: api@estuary.com
  license:
    name: Proprietary
paths:
  /api/v1/auth/change-password/:
    post:
      operationId: auth_change_password
      description: Change current user password
      summary: Change password
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Password changed successfully
        '400':
          description: Validation error
        '401':
          description: Not authenticated
  /api/v1/auth/login/:
    post:
      operationId: auth_login
      description: Authenticate user with email and password
      summary: User login
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      security:
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: Login successful
        '401':
          description: Invalid credentials
        '403':
          description: Account disabled
  /api/v1/auth/logout/:
    post:
      operationId: auth_logout
      description: Blacklist refresh token to logout user
      summary: User logout
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Logout successful
        '400':
          description: Invalid refresh token
  /api/v1/auth/logout/simple/:
    post:
      operationId: auth_logout_simple
      description: Simple logout endpoint (client should discard tokens)
      summary: Simple logout
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Logout successful
  /api/v1/auth/me/:
    get:
      operationId: auth_me
      description: Get current authenticated user profile
      summary: Get current user
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: User profile
        '401':
          description: Not authenticated
    put:
      operationId: auth_me_update
      description: Current user profile endpoint
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: auth_update_profile
      description: Update current user profile information
      summary: Update user profile
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: Profile updated
        '400':
          description: Validation error
        '401':
          description: Not authenticated
  /api/v1/auth/register/:
    post:
      operationId: auth_register_create
      description: User registration endpoint
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/v1/auth/token/refresh/:
    post:
      operationId: auth_refresh
      description: Get new access token using refresh token
      summary: Refresh access token
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Token refreshed successfully
        '401':
          description: Invalid refresh token
  /api/v1/availability/check/:
    get:
      operationId: availability_check_retrieve
      description: |-
        Check practitioner availability for a date range.
        Returns available time slots based on schedules and existing bookings.
      tags:
      - Availability
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/availability/out_of_office/:
    get:
      operationId: availability_out_of_office_retrieve
      description: Manage out-of-office periods
      tags:
      - Availability
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: availability_out_of_office_create
      description: Manage out-of-office periods
      tags:
      - Availability
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/availability/preferences/:
    get:
      operationId: availability_preferences_retrieve
      description: Get or update schedule preferences
      tags:
      - Availability
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: availability_preferences_update
      description: Get or update schedule preferences
      tags:
      - Availability
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/availability/update_next_available/:
    post:
      operationId: availability_update_next_available_create
      description: Update practitioner's next available date
      tags:
      - Availability
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/bookings/:
    get:
      operationId: bookings_list
      description: |-
        ViewSet for managing bookings.

        Endpoints:
        - GET /bookings/ - List bookings (filtered by user role)
        - POST /bookings/ - Create a new booking
        - GET /bookings/{id}/ - Get booking details
        - PATCH /bookings/{id}/ - Update booking details
        - DELETE /bookings/{id}/ - Cancel booking
        - POST /bookings/{id}/confirm/ - Confirm booking (after payment)
        - POST /bookings/{id}/cancel/ - Cancel booking with reason
        - POST /bookings/{id}/complete/ - Mark booking as completed
        - POST /bookings/{id}/no-show/ - Mark as no-show
        - POST /bookings/{id}/reschedule/ - Reschedule booking
        - POST /bookings/{id}/notes/ - Add note to booking
        - POST /bookings/check-availability/ - Check practitioner availability
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Bookings
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookingListList'
          description: ''
    post:
      operationId: bookings_create
      description: |-
        ViewSet for managing bookings.

        Endpoints:
        - GET /bookings/ - List bookings (filtered by user role)
        - POST /bookings/ - Create a new booking
        - GET /bookings/{id}/ - Get booking details
        - PATCH /bookings/{id}/ - Update booking details
        - DELETE /bookings/{id}/ - Cancel booking
        - POST /bookings/{id}/confirm/ - Confirm booking (after payment)
        - POST /bookings/{id}/cancel/ - Cancel booking with reason
        - POST /bookings/{id}/complete/ - Mark booking as completed
        - POST /bookings/{id}/no-show/ - Mark as no-show
        - POST /bookings/{id}/reschedule/ - Reschedule booking
        - POST /bookings/{id}/notes/ - Add note to booking
        - POST /bookings/check-availability/ - Check practitioner availability
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingCreate'
          description: ''
  /api/v1/bookings/{id}/:
    get:
      operationId: bookings_retrieve
      description: |-
        ViewSet for managing bookings.

        Endpoints:
        - GET /bookings/ - List bookings (filtered by user role)
        - POST /bookings/ - Create a new booking
        - GET /bookings/{id}/ - Get booking details
        - PATCH /bookings/{id}/ - Update booking details
        - DELETE /bookings/{id}/ - Cancel booking
        - POST /bookings/{id}/confirm/ - Confirm booking (after payment)
        - POST /bookings/{id}/cancel/ - Cancel booking with reason
        - POST /bookings/{id}/complete/ - Mark booking as completed
        - POST /bookings/{id}/no-show/ - Mark as no-show
        - POST /bookings/{id}/reschedule/ - Reschedule booking
        - POST /bookings/{id}/notes/ - Add note to booking
        - POST /bookings/check-availability/ - Check practitioner availability
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
    put:
      operationId: bookings_update
      description: |-
        ViewSet for managing bookings.

        Endpoints:
        - GET /bookings/ - List bookings (filtered by user role)
        - POST /bookings/ - Create a new booking
        - GET /bookings/{id}/ - Get booking details
        - PATCH /bookings/{id}/ - Update booking details
        - DELETE /bookings/{id}/ - Cancel booking
        - POST /bookings/{id}/confirm/ - Confirm booking (after payment)
        - POST /bookings/{id}/cancel/ - Cancel booking with reason
        - POST /bookings/{id}/complete/ - Mark booking as completed
        - POST /bookings/{id}/no-show/ - Mark as no-show
        - POST /bookings/{id}/reschedule/ - Reschedule booking
        - POST /bookings/{id}/notes/ - Add note to booking
        - POST /bookings/check-availability/ - Check practitioner availability
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingUpdateRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingUpdate'
          description: ''
    patch:
      operationId: bookings_partial_update
      description: |-
        ViewSet for managing bookings.

        Endpoints:
        - GET /bookings/ - List bookings (filtered by user role)
        - POST /bookings/ - Create a new booking
        - GET /bookings/{id}/ - Get booking details
        - PATCH /bookings/{id}/ - Update booking details
        - DELETE /bookings/{id}/ - Cancel booking
        - POST /bookings/{id}/confirm/ - Confirm booking (after payment)
        - POST /bookings/{id}/cancel/ - Cancel booking with reason
        - POST /bookings/{id}/complete/ - Mark booking as completed
        - POST /bookings/{id}/no-show/ - Mark as no-show
        - POST /bookings/{id}/reschedule/ - Reschedule booking
        - POST /bookings/{id}/notes/ - Add note to booking
        - POST /bookings/check-availability/ - Check practitioner availability
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBookingUpdateRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingUpdate'
          description: ''
    delete:
      operationId: bookings_destroy
      description: Override destroy to cancel booking instead of deleting
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/bookings/{id}/cancel/:
    post:
      operationId: bookings_cancel_create
      description: Cancel booking with reason
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /api/v1/bookings/{id}/complete/:
    post:
      operationId: bookings_complete_create
      description: Mark booking as completed (practitioner only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /api/v1/bookings/{id}/confirm/:
    post:
      operationId: bookings_confirm_create
      description: Confirm booking after payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /api/v1/bookings/{id}/no_show/:
    post:
      operationId: bookings_no_show_create
      description: Mark booking as no-show (practitioner only)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /api/v1/bookings/{id}/notes/:
    get:
      operationId: bookings_notes_retrieve
      description: Get or add notes to booking
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
    post:
      operationId: bookings_notes_create
      description: Get or add notes to booking
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /api/v1/bookings/{id}/reschedule/:
    post:
      operationId: bookings_reschedule_create
      description: Reschedule booking to new time
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRescheduleRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingReschedule'
          description: ''
  /api/v1/bookings/check_availability/:
    post:
      operationId: bookings_check_availability_create
      description: Check practitioner availability for a service
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityCheckRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityCheck'
          description: ''
  /api/v1/bookings/create_bundle/:
    post:
      operationId: bookings_create_bundle_create
      description: Create a bundle booking
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /api/v1/bookings/create_course/:
    post:
      operationId: bookings_create_course_create
      description: Create a course booking
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /api/v1/bookings/create_package/:
    post:
      operationId: bookings_create_package_create
      description: Create a package booking
      tags:
      - Bookings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingDetail'
          description: ''
  /api/v1/bundles/:
    get:
      operationId: bundles_list
      description: ViewSet specifically for service bundles.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBundleList'
          description: ''
    post:
      operationId: bundles_create
      description: ViewSet specifically for service bundles.
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BundleRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
          description: ''
  /api/v1/bundles/{id}/:
    get:
      operationId: bundles_retrieve
      description: ViewSet specifically for service bundles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
          description: ''
    put:
      operationId: bundles_update
      description: ViewSet specifically for service bundles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BundleRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
          description: ''
    patch:
      operationId: bundles_partial_update
      description: ViewSet specifically for service bundles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBundleRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
          description: ''
    delete:
      operationId: bundles_destroy
      description: ViewSet specifically for service bundles.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/certifications/:
    get:
      operationId: certifications_list
      description: ViewSet for managing certifications
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - certifications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCertificationList'
          description: ''
    post:
      operationId: certifications_create
      description: ViewSet for managing certifications
      tags:
      - certifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificationRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
          description: ''
  /api/v1/certifications/{id}/:
    get:
      operationId: certifications_retrieve
      description: ViewSet for managing certifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this certification.
        required: true
      tags:
      - certifications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
          description: ''
    put:
      operationId: certifications_update
      description: ViewSet for managing certifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this certification.
        required: true
      tags:
      - certifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificationRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
          description: ''
    patch:
      operationId: certifications_partial_update
      description: ViewSet for managing certifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this certification.
        required: true
      tags:
      - certifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCertificationRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certification'
          description: ''
    delete:
      operationId: certifications_destroy
      description: ViewSet for managing certifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this certification.
        required: true
      tags:
      - certifications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/checkout/create_session/:
    post:
      operationId: checkout_create_session_create
      description: Create a Stripe checkout session
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutSessionRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'
          description: ''
  /api/v1/cities/:
    get:
      operationId: cities_list
      description: |-
        ViewSet for cities.
        Provides read-only access to city data with advanced filtering.
      parameters:
      - in: query
        name: country
        schema:
          type: integer
      - in: query
        name: is_major
        schema:
          type: boolean
      - in: query
        name: metro_area
        schema:
          type: string
      - in: query
        name: min_population
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - cities
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCityList'
          description: ''
  /api/v1/cities/{id}/:
    get:
      operationId: cities_retrieve
      description: |-
        ViewSet for cities.
        Provides read-only access to city data with advanced filtering.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this city.
        required: true
      tags:
      - cities
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api/v1/cities/by_metro/:
    get:
      operationId: cities_by_metro_retrieve
      description: Get cities grouped by metro area.
      tags:
      - cities
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api/v1/cities/major_cities/:
    get:
      operationId: cities_major_cities_retrieve
      description: Get major cities for SEO/discovery.
      tags:
      - cities
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api/v1/commissions/calculate/:
    post:
      operationId: commissions_calculate_create
      description: Calculate commission for a hypothetical transaction
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/commissions/rates/:
    get:
      operationId: commissions_rates_retrieve
      description: Get commission rates for current practitioner
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/countries/:
    get:
      operationId: countries_list
      description: |-
        ViewSet for countries.
        Provides read-only access to country data.
      parameters:
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: currency_code
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - countries
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
  /api/v1/countries/{id}/:
    get:
      operationId: countries_retrieve
      description: |-
        ViewSet for countries.
        Provides read-only access to country data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Country.
        required: true
      tags:
      - countries
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/v1/credits/balance/:
    get:
      operationId: credits_balance_retrieve
      description: Get current credit balance
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/credits/purchase/:
    post:
      operationId: credits_purchase_create
      description: Purchase credits
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/credits/transactions/:
    get:
      operationId: credits_transactions_retrieve
      description: List credit transactions
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/credits/transfer/:
    post:
      operationId: credits_transfer_create
      description: Transfer credits to another user
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/education/:
    get:
      operationId: education_list
      description: ViewSet for managing education entries
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - education
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEducationList'
          description: ''
    post:
      operationId: education_create
      description: ViewSet for managing education entries
      tags:
      - education
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
  /api/v1/education/{id}/:
    get:
      operationId: education_retrieve
      description: ViewSet for managing education entries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this education.
        required: true
      tags:
      - education
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    put:
      operationId: education_update
      description: ViewSet for managing education entries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this education.
        required: true
      tags:
      - education
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    patch:
      operationId: education_partial_update
      description: ViewSet for managing education entries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this education.
        required: true
      tags:
      - education
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEducationRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    delete:
      operationId: education_destroy
      description: ViewSet for managing education entries
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this education.
        required: true
      tags:
      - education
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/errors/:
    get:
      operationId: errors_retrieve
      description: Common error codes and their meanings
      tags:
      - errors
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/examples/:
    get:
      operationId: examples_retrieve
      description: Common usage examples
      tags:
      - examples
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/health/:
    get:
      operationId: health_retrieve
      description: Health check endpoint for monitoring
      tags:
      - health
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/info/:
    get:
      operationId: info_retrieve
      description: General API information
      tags:
      - info
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/live-streams/:
    get:
      operationId: live_streams_list
      description: ViewSet for managing live streaming sessions.
      parameters:
      - in: query
        name: is_public
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: practitioner
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - ended
          - live
          - scheduled
        description: |-
          * `scheduled` - Scheduled
          * `live` - Live
          * `ended` - Ended
          * `cancelled` - Cancelled
      - in: query
        name: stream
        schema:
          type: integer
      - in: query
        name: tier_level
        schema:
          type: string
          enum:
          - entry
          - free
          - premium
        description: |-
          Minimum tier required to view this live stream

          * `free` - Free
          * `entry` - Entry
          * `premium` - Premium
      tags:
      - live-streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLiveStreamList'
          description: ''
    post:
      operationId: live_streams_create
      description: ViewSet for managing live streaming sessions.
      tags:
      - live-streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStreamCreate'
          description: ''
  /api/v1/live-streams/{id}/:
    get:
      operationId: live_streams_retrieve
      description: ViewSet for managing live streaming sessions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
    put:
      operationId: live_streams_update
      description: ViewSet for managing live streaming sessions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
    patch:
      operationId: live_streams_partial_update
      description: ViewSet for managing live streaming sessions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLiveStreamRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
    delete:
      operationId: live_streams_destroy
      description: ViewSet for managing live streaming sessions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/live-streams/{id}/analytics/:
    get:
      operationId: live_streams_analytics_retrieve
      description: Get analytics for a live stream.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
  /api/v1/live-streams/{id}/end_stream/:
    post:
      operationId: live_streams_end_stream_create
      description: End a live stream.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
  /api/v1/live-streams/{id}/go_live/:
    post:
      operationId: live_streams_go_live_create
      description: Start a live stream.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
  /api/v1/live-streams/{id}/join/:
    post:
      operationId: live_streams_join_create
      description: Join a live stream as a viewer.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
  /api/v1/live-streams/{id}/leave/:
    post:
      operationId: live_streams_leave_create
      description: Leave a live stream.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveStreamRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
  /api/v1/live-streams/{id}/recordings/:
    get:
      operationId: live_streams_recordings_retrieve
      description: Get recordings for a live stream.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
  /api/v1/live-streams/{id}/viewers/:
    get:
      operationId: live_streams_viewers_retrieve
      description: Get current viewers of a live stream.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this live stream.
        required: true
      tags:
      - live-streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveStream'
          description: ''
  /api/v1/media/:
    get:
      operationId: media_list
      description: |-
        ViewSet for managing media objects.

        Provides CRUD operations plus specialized media handling:
        - Direct file uploads
        - Presigned URL generation for client-side uploads
        - Batch operations
        - Processing requests
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - media
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMediaList'
          description: ''
    post:
      operationId: media_create
      description: |-
        ViewSet for managing media objects.

        Provides CRUD operations plus specialized media handling:
        - Direct file uploads
        - Presigned URL generation for client-side uploads
        - Batch operations
        - Processing requests
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/{id}/:
    get:
      operationId: media_retrieve
      description: |-
        ViewSet for managing media objects.

        Provides CRUD operations plus specialized media handling:
        - Direct file uploads
        - Presigned URL generation for client-side uploads
        - Batch operations
        - Processing requests
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - media
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
    put:
      operationId: media_update
      description: |-
        ViewSet for managing media objects.

        Provides CRUD operations plus specialized media handling:
        - Direct file uploads
        - Presigned URL generation for client-side uploads
        - Batch operations
        - Processing requests
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
    patch:
      operationId: media_partial_update
      description: |-
        ViewSet for managing media objects.

        Provides CRUD operations plus specialized media handling:
        - Direct file uploads
        - Presigned URL generation for client-side uploads
        - Batch operations
        - Processing requests
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMediaRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
    delete:
      operationId: media_destroy
      description: |-
        ViewSet for managing media objects.

        Provides CRUD operations plus specialized media handling:
        - Direct file uploads
        - Presigned URL generation for client-side uploads
        - Batch operations
        - Processing requests
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - media
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/media/{id}/confirm_upload/:
    post:
      operationId: media_confirm_upload_create
      description: |-
        Confirm that a presigned upload was completed.

        Updates the media record with the public URL and triggers processing.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/{id}/increment_download/:
    post:
      operationId: media_increment_download_create
      description: Increment download count for a media item.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/{id}/increment_view/:
    post:
      operationId: media_increment_view_create
      description: Increment view count for a media item.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/{id}/process/:
    post:
      operationId: media_process_create
      description: Request processing operations for a media item.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/{id}/set_primary/:
    post:
      operationId: media_set_primary_create
      description: Set a media item as primary for its entity.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/batch_upload/:
    post:
      operationId: media_batch_upload_create
      description: |-
        Batch file upload endpoint.

        Handles multiple file uploads in a single request.
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/bulk_delete/:
    post:
      operationId: media_bulk_delete_create
      description: Delete multiple media items at once.
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/bulk_update/:
    post:
      operationId: media_bulk_update_create
      description: Update multiple media items at once.
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/presigned_upload/:
    post:
      operationId: media_presigned_upload_create
      description: |-
        Generate presigned upload URL for client-side uploads.

        Returns a presigned URL that clients can use to upload directly to R2.
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/media/upload/:
    post:
      operationId: media_upload_create
      description: |-
        Direct file upload endpoint.

        Handles file upload to cloud storage and creates media record.
      tags:
      - media
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
          description: ''
  /api/v1/notification-settings/:
    get:
      operationId: notification_settings_list
      description: |-
        ViewSet for managing user notification preferences.

        Users can enable/disable notification channels for each notification type.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - notification-settings
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationSettingList'
          description: ''
    post:
      operationId: notification_settings_create
      description: |-
        ViewSet for managing user notification preferences.

        Users can enable/disable notification channels for each notification type.
      tags:
      - notification-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: ''
  /api/v1/notification-settings/{id}/:
    get:
      operationId: notification_settings_retrieve
      description: |-
        ViewSet for managing user notification preferences.

        Users can enable/disable notification channels for each notification type.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notification-settings
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: ''
    put:
      operationId: notification_settings_update
      description: |-
        ViewSet for managing user notification preferences.

        Users can enable/disable notification channels for each notification type.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notification-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: ''
    patch:
      operationId: notification_settings_partial_update
      description: |-
        ViewSet for managing user notification preferences.

        Users can enable/disable notification channels for each notification type.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notification-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationSettingRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: ''
    delete:
      operationId: notification_settings_destroy
      description: |-
        ViewSet for managing user notification preferences.

        Users can enable/disable notification channels for each notification type.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notification-settings
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/notification-settings/bulk_update/:
    post:
      operationId: notification_settings_bulk_update_create
      description: Bulk update notification preferences.
      tags:
      - notification-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: ''
  /api/v1/notification-settings/reset_to_defaults/:
    post:
      operationId: notification_settings_reset_to_defaults_create
      description: Reset all notification preferences to defaults.
      tags:
      - notification-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSetting'
          description: ''
  /api/v1/notification-templates/:
    get:
      operationId: notification_templates_list
      description: |-
        ViewSet for viewing notification templates.
        Read-only access for regular users.
      parameters:
      - in: query
        name: delivery_channel
        schema:
          type: string
          enum:
          - email
          - in_app
          - push
          - sms
        description: |-
          * `email` - Email
          * `sms` - SMS
          * `in_app` - In-App
          * `push` - Push Notification
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: notification_type
        schema:
          type: string
          enum:
          - booking
          - message
          - payment
          - reminder
          - review
          - session
          - system
        description: |-
          * `booking` - Booking
          * `payment` - Payment
          * `session` - Session
          * `review` - Review
          * `system` - System
          * `message` - Message
          * `reminder` - Reminder
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - notification-templates
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationTemplateList'
          description: ''
  /api/v1/notification-templates/{id}/:
    get:
      operationId: notification_templates_retrieve
      description: |-
        ViewSet for viewing notification templates.
        Read-only access for regular users.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification template.
        required: true
      tags:
      - notification-templates
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplate'
          description: ''
  /api/v1/notifications/:
    get:
      operationId: notifications_list
      description: |-
        ViewSet for managing user notifications.

        Provides endpoints for:
        - Listing notifications (with filtering)
        - Marking notifications as read/unread
        - Deleting notifications
        - Getting notification statistics
        - Grouping notifications
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - notifications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationListList'
          description: ''
    post:
      operationId: notifications_create
      description: |-
        ViewSet for managing user notifications.

        Provides endpoints for:
        - Listing notifications (with filtering)
        - Marking notifications as read/unread
        - Deleting notifications
        - Getting notification statistics
        - Grouping notifications
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/{id}/:
    get:
      operationId: notifications_retrieve
      description: |-
        ViewSet for managing user notifications.

        Provides endpoints for:
        - Listing notifications (with filtering)
        - Marking notifications as read/unread
        - Deleting notifications
        - Getting notification statistics
        - Grouping notifications
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    put:
      operationId: notifications_update
      description: |-
        ViewSet for managing user notifications.

        Provides endpoints for:
        - Listing notifications (with filtering)
        - Marking notifications as read/unread
        - Deleting notifications
        - Getting notification statistics
        - Grouping notifications
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    patch:
      operationId: notifications_partial_update
      description: |-
        ViewSet for managing user notifications.

        Provides endpoints for:
        - Listing notifications (with filtering)
        - Marking notifications as read/unread
        - Deleting notifications
        - Getting notification statistics
        - Grouping notifications
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    delete:
      operationId: notifications_destroy
      description: |-
        ViewSet for managing user notifications.

        Provides endpoints for:
        - Listing notifications (with filtering)
        - Marking notifications as read/unread
        - Deleting notifications
        - Getting notification statistics
        - Grouping notifications
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/notifications/{id}/mark_as_read/:
    post:
      operationId: notifications_mark_as_read_create
      description: Mark a single notification as read.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/{id}/mark_as_unread/:
    post:
      operationId: notifications_mark_as_unread_create
      description: Mark a single notification as unread.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/bulk_delete/:
    post:
      operationId: notifications_bulk_delete_create
      description: Delete multiple notifications.
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/grouped/:
    get:
      operationId: notifications_grouped_retrieve
      description: |-
        Get notifications grouped by type and date.
        Useful for notification centers with grouped display.
      tags:
      - notifications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/mark_read/:
    post:
      operationId: notifications_mark_read_create
      description: Mark notifications as read/unread.
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/stats/:
    get:
      operationId: notifications_stats_retrieve
      description: Get notification statistics for the user.
      tags:
      - notifications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/notifications/unread_count/:
    get:
      operationId: notifications_unread_count_retrieve
      description: Get count of unread notifications.
      tags:
      - notifications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/packages/:
    get:
      operationId: packages_list
      description: ViewSet specifically for service packages.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPackageList'
          description: ''
    post:
      operationId: packages_create
      description: ViewSet specifically for service packages.
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
          description: ''
  /api/v1/packages/{id}/:
    get:
      operationId: packages_retrieve
      description: ViewSet specifically for service packages.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
          description: ''
    put:
      operationId: packages_update
      description: ViewSet specifically for service packages.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
          description: ''
    patch:
      operationId: packages_partial_update
      description: ViewSet specifically for service packages.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPackageRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
          description: ''
    delete:
      operationId: packages_destroy
      description: ViewSet specifically for service packages.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/payment-methods/:
    get:
      operationId: payment_methods_list
      description: ViewSet for managing payment methods
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentMethodList'
          description: ''
    post:
      operationId: payment_methods_create
      description: ViewSet for managing payment methods
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodCreate'
          description: ''
  /api/v1/payment-methods/{id}/:
    get:
      operationId: payment_methods_retrieve
      description: ViewSet for managing payment methods
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    put:
      operationId: payment_methods_update
      description: ViewSet for managing payment methods
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    patch:
      operationId: payment_methods_partial_update
      description: ViewSet for managing payment methods
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMethodRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    delete:
      operationId: payment_methods_destroy
      description: ViewSet for managing payment methods
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/payment-methods/{id}/set_default/:
    post:
      operationId: payment_methods_set_default_create
      description: Set payment method as default
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
  /api/v1/payments/:
    get:
      operationId: payments_list
      description: ViewSet for viewing payment transactions (orders)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
  /api/v1/payments/{id}/:
    get:
      operationId: payments_retrieve
      description: ViewSet for viewing payment transactions (orders)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/payouts/:
    get:
      operationId: payouts_list
      description: ViewSet for practitioner payouts
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: payment_method
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - canceled
          - completed
          - failed
          - pending
          - processing
        description: |-
          * `pending` - Pending
          * `processing` - Processing
          * `completed` - Completed
          * `failed` - Failed
          * `canceled` - Canceled
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPractitionerPayoutList'
          description: ''
    post:
      operationId: payouts_create
      description: ViewSet for practitioner payouts
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerPayoutRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerPayout'
          description: ''
  /api/v1/payouts/{id}/:
    get:
      operationId: payouts_retrieve
      description: ViewSet for practitioner payouts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner payout.
        required: true
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerPayout'
          description: ''
    put:
      operationId: payouts_update
      description: ViewSet for practitioner payouts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner payout.
        required: true
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerPayoutRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerPayout'
          description: ''
    patch:
      operationId: payouts_partial_update
      description: ViewSet for practitioner payouts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner payout.
        required: true
      tags:
      - Payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPractitionerPayoutRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerPayout'
          description: ''
    delete:
      operationId: payouts_destroy
      description: ViewSet for practitioner payouts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner payout.
        required: true
      tags:
      - Payments
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/payouts/earnings_balance/:
    get:
      operationId: payouts_earnings_balance_retrieve
      description: Get practitioner's earnings balance
      tags:
      - payouts
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerPayout'
          description: ''
  /api/v1/payouts/earnings_transactions/:
    get:
      operationId: payouts_earnings_transactions_retrieve
      description: List earnings transactions
      tags:
      - payouts
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerPayout'
          description: ''
  /api/v1/payouts/request_payout/:
    post:
      operationId: payouts_request_payout_create
      description: Request a payout
      tags:
      - payouts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerPayoutRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerPayout'
          description: ''
  /api/v1/practitioner-applications/complete_step/:
    post:
      operationId: practitioner_applications_complete_step_create
      description: Mark an onboarding step as complete
      tags:
      - practitioner-applications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/practitioner-applications/start/:
    post:
      operationId: practitioner_applications_start_create
      description: Start practitioner application
      tags:
      - practitioner-applications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/practitioner-applications/status/:
    get:
      operationId: practitioner_applications_status_retrieve
      description: Get application status
      tags:
      - practitioner-applications
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/practitioner-categories/:
    get:
      operationId: practitioner_categories_list
      description: |-
        ViewSet for practitioner-specific service categories.
        Practitioners can manage their own categories.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPractitionerServiceCategoryList'
          description: ''
    post:
      operationId: practitioner_categories_create
      description: |-
        ViewSet for practitioner-specific service categories.
        Practitioners can manage their own categories.
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerServiceCategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerServiceCategory'
          description: ''
  /api/v1/practitioner-categories/{id}/:
    get:
      operationId: practitioner_categories_retrieve
      description: |-
        ViewSet for practitioner-specific service categories.
        Practitioners can manage their own categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner Service
          Category.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerServiceCategory'
          description: ''
    put:
      operationId: practitioner_categories_update
      description: |-
        ViewSet for practitioner-specific service categories.
        Practitioners can manage their own categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner Service
          Category.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerServiceCategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerServiceCategory'
          description: ''
    patch:
      operationId: practitioner_categories_partial_update
      description: |-
        ViewSet for practitioner-specific service categories.
        Practitioners can manage their own categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner Service
          Category.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPractitionerServiceCategoryRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerServiceCategory'
          description: ''
    delete:
      operationId: practitioner_categories_destroy
      description: |-
        ViewSet for practitioner-specific service categories.
        Practitioners can manage their own categories.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner Service
          Category.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/practitioner-categories/reorder/:
    post:
      operationId: practitioner_categories_reorder_create
      description: Reorder categories
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerServiceCategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerServiceCategory'
          description: ''
  /api/v1/practitioner-locations/:
    get:
      operationId: practitioner_locations_list
      description: |-
        ViewSet for practitioner locations.
        Practitioners can manage their own locations.
      parameters:
      - in: query
        name: city
        schema:
          type: integer
      - in: query
        name: is_in_person
        schema:
          type: boolean
      - in: query
        name: is_primary
        schema:
          type: boolean
      - in: query
        name: is_virtual
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - practitioner-locations
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPractitionerLocationList'
          description: ''
    post:
      operationId: practitioner_locations_create
      description: |-
        ViewSet for practitioner locations.
        Practitioners can manage their own locations.
      tags:
      - practitioner-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerLocationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerLocation'
          description: ''
  /api/v1/practitioner-locations/{id}/:
    get:
      operationId: practitioner_locations_retrieve
      description: |-
        ViewSet for practitioner locations.
        Practitioners can manage their own locations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner location.
        required: true
      tags:
      - practitioner-locations
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerLocation'
          description: ''
    put:
      operationId: practitioner_locations_update
      description: |-
        ViewSet for practitioner locations.
        Practitioners can manage their own locations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner location.
        required: true
      tags:
      - practitioner-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerLocationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerLocation'
          description: ''
    patch:
      operationId: practitioner_locations_partial_update
      description: |-
        ViewSet for practitioner locations.
        Practitioners can manage their own locations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner location.
        required: true
      tags:
      - practitioner-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPractitionerLocationRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerLocation'
          description: ''
    delete:
      operationId: practitioner_locations_destroy
      description: |-
        ViewSet for practitioner locations.
        Practitioners can manage their own locations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner location.
        required: true
      tags:
      - practitioner-locations
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/practitioner-locations/{id}/set_primary/:
    post:
      operationId: practitioner_locations_set_primary_create
      description: Set a location as primary.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner location.
        required: true
      tags:
      - practitioner-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerLocationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerLocation'
          description: ''
  /api/v1/practitioner-locations/nearby/:
    get:
      operationId: practitioner_locations_nearby_retrieve
      description: |-
        Get nearby locations based on user's IP or provided coordinates.
        This is a simplified version of search for quick lookups.
      tags:
      - practitioner-locations
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerLocation'
          description: ''
  /api/v1/practitioner-locations/search/:
    post:
      operationId: practitioner_locations_search_create
      description: |-
        Search for nearby practitioner locations.
        Supports searching by coordinates, address, or city.
      tags:
      - practitioner-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerLocationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerLocation'
          description: ''
  /api/v1/practitioner-locations/validate_address/:
    post:
      operationId: practitioner_locations_validate_address_create
      description: Validate and geocode an address.
      tags:
      - practitioner-locations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerLocationRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerLocation'
          description: ''
  /api/v1/practitioners/:
    get:
      operationId: practitioners_list
      description: |-
        ViewSet for practitioner profiles.

        Supports:
        - Public listing with search/filters
        - Public profile viewing
        - Private profile management for practitioners
        - Application process for new practitioners
        - Verification status tracking
      parameters:
      - in: query
        name: available_now
        schema:
          type: boolean
        description: Available Now
      - in: query
        name: city
        schema:
          type: string
        description: City
      - in: query
        name: country
        schema:
          type: string
        description: Country
      - in: query
        name: featured
        schema:
          type: boolean
        description: Featured Only
      - in: query
        name: is_verified
        schema:
          type: boolean
        description: Is Verified
      - in: query
        name: language
        schema:
          type: string
        description: Language Code
      - in: query
        name: location_type
        schema:
          type: string
          enum:
          - hybrid
          - in_person
          - virtual
        description: |-
          Service Location Type

          * `virtual` - Virtual
          * `in_person` - In Person
          * `hybrid` - Hybrid
      - in: query
        name: max_experience
        schema:
          type: integer
        description: Maximum Years of Experience
      - in: query
        name: max_price
        schema:
          type: number
        description: Maximum Price
      - in: query
        name: min_experience
        schema:
          type: integer
        description: Minimum Years of Experience
      - in: query
        name: min_price
        schema:
          type: number
        description: Minimum Price
      - in: query
        name: modality
        schema:
          type: integer
        description: Modality ID
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: practitioner_status
        schema:
          type: string
          enum:
          - active
          - inactive
          - pending
          - rejected
          - suspended
          - vacation
        description: |-
          Practitioner Status

          * `active` - Active
          * `inactive` - Inactive
          * `vacation` - On Vacation
          * `pending` - Pending Approval
          * `suspended` - Suspended
          * `rejected` - Rejected
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: service_category
        schema:
          type: array
          items:
            type: integer
        description: Service Category
        explode: true
        style: form
      - in: query
        name: service_type
        schema:
          type: array
          items:
            type: integer
        description: Service Type
        explode: true
        style: form
      - in: query
        name: specialization
        schema:
          type: integer
        description: Specialization ID
      - in: query
        name: state
        schema:
          type: string
        description: State
      - in: query
        name: style
        schema:
          type: integer
        description: Style ID
      - in: query
        name: topic
        schema:
          type: integer
        description: Topic ID
      tags:
      - Practitioners
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPractitionerListList'
          description: ''
    post:
      operationId: practitioners_create
      description: |-
        ViewSet for practitioner profiles.

        Supports:
        - Public listing with search/filters
        - Public profile viewing
        - Private profile management for practitioners
        - Application process for new practitioners
        - Verification status tracking
      tags:
      - Practitioners
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerDetail'
          description: ''
  /api/v1/practitioners/{id}/:
    get:
      operationId: practitioners_retrieve
      description: |-
        ViewSet for practitioner profiles.

        Supports:
        - Public listing with search/filters
        - Public profile viewing
        - Private profile management for practitioners
        - Application process for new practitioners
        - Verification status tracking
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner.
        required: true
      tags:
      - Practitioners
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerDetail'
          description: ''
    put:
      operationId: practitioners_update
      description: |-
        ViewSet for practitioner profiles.

        Supports:
        - Public listing with search/filters
        - Public profile viewing
        - Private profile management for practitioners
        - Application process for new practitioners
        - Verification status tracking
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner.
        required: true
      tags:
      - Practitioners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerUpdateRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerUpdate'
          description: ''
    patch:
      operationId: practitioners_partial_update
      description: |-
        ViewSet for practitioner profiles.

        Supports:
        - Public listing with search/filters
        - Public profile viewing
        - Private profile management for practitioners
        - Application process for new practitioners
        - Verification status tracking
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner.
        required: true
      tags:
      - Practitioners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPractitionerUpdateRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerUpdate'
          description: ''
    delete:
      operationId: practitioners_destroy
      description: |-
        ViewSet for practitioner profiles.

        Supports:
        - Public listing with search/filters
        - Public profile viewing
        - Private profile management for practitioners
        - Application process for new practitioners
        - Verification status tracking
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner.
        required: true
      tags:
      - Practitioners
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/practitioners/{id}/onboarding_progress/:
    get:
      operationId: practitioners_onboarding_progress_retrieve
      description: Get onboarding progress
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner.
        required: true
      tags:
      - practitioners
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerDetail'
          description: ''
  /api/v1/practitioners/{id}/upload_document/:
    post:
      operationId: practitioners_upload_document_create
      description: Upload verification document
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner.
        required: true
      tags:
      - Practitioners
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerDetail'
          description: ''
  /api/v1/practitioners/{id}/verify_email/:
    post:
      operationId: practitioners_verify_email_create
      description: Send email verification for practitioner
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Practitioner.
        required: true
      tags:
      - Practitioners
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerDetail'
          description: ''
  /api/v1/practitioners/apply/:
    post:
      operationId: practitioners_apply_create
      description: Apply to become a practitioner
      tags:
      - Practitioners
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerApplicationRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerApplication'
          description: ''
  /api/v1/practitioners/my_profile/:
    get:
      operationId: practitioners_my_profile_retrieve
      description: Get authenticated practitioner's own profile
      tags:
      - Practitioners
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerPrivate'
          description: ''
  /api/v1/practitioners/search/:
    get:
      operationId: practitioners_search_retrieve
      description: |-
        Advanced search endpoint with multiple filters.
        Supports location-based search, service filters, availability, and more.
      tags:
      - Practitioners
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerDetail'
          description: ''
  /api/v1/resources/:
    get:
      operationId: resources_retrieve
      description: List of available API resources
      tags:
      - resources
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/review-questions/:
    get:
      operationId: review_questions_list
      description: ViewSet for review questions (read-only for non-staff)
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewQuestionList'
          description: ''
  /api/v1/review-questions/{id}/:
    get:
      operationId: review_questions_retrieve
      description: ViewSet for review questions (read-only for non-staff)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review question.
        required: true
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewQuestion'
          description: ''
  /api/v1/reviews/:
    get:
      operationId: reviews_list
      description: |-
        ViewSet for Review CRUD operations

        list: Get all published reviews (filterable)
        create: Create a new review (requires completed booking)
        retrieve: Get a specific review
        update: Update own review (limited fields, within 24 hours)
        destroy: Soft delete own review (within 24 hours)

        Custom actions:
        - vote: Vote helpful/unhelpful on a review
        - report: Report a review for moderation
        - respond: Practitioner response to review
        - statistics: Get aggregate statistics
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date-time
      - in: query
        name: created_before
        schema:
          type: string
          format: date-time
      - in: query
        name: has_response
        schema:
          type: boolean
      - in: query
        name: is_anonymous
        schema:
          type: boolean
      - in: query
        name: is_published
        schema:
          type: boolean
      - in: query
        name: is_verified
        schema:
          type: boolean
      - in: query
        name: max_rating
        schema:
          type: number
      - in: query
        name: min_rating
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: practitioner
        schema:
          type: string
          format: uuid
      - in: query
        name: rating
        schema:
          type: number
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: service
        schema:
          type: string
          format: uuid
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewListList'
          description: ''
    post:
      operationId: reviews_create
      description: |-
        ViewSet for Review CRUD operations

        list: Get all published reviews (filterable)
        create: Create a new review (requires completed booking)
        retrieve: Get a specific review
        update: Update own review (limited fields, within 24 hours)
        destroy: Soft delete own review (within 24 hours)

        Custom actions:
        - vote: Vote helpful/unhelpful on a review
        - report: Report a review for moderation
        - respond: Practitioner response to review
        - statistics: Get aggregate statistics
      tags:
      - Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewCreate'
          description: ''
  /api/v1/reviews/{public_uuid}/:
    get:
      operationId: reviews_retrieve
      description: |-
        ViewSet for Review CRUD operations

        list: Get all published reviews (filterable)
        create: Create a new review (requires completed booking)
        retrieve: Get a specific review
        update: Update own review (limited fields, within 24 hours)
        destroy: Soft delete own review (within 24 hours)

        Custom actions:
        - vote: Vote helpful/unhelpful on a review
        - report: Report a review for moderation
        - respond: Practitioner response to review
        - statistics: Get aggregate statistics
      parameters:
      - in: path
        name: public_uuid
        schema:
          type: string
          format: uuid
          description: Public UUID for API exposure
        required: true
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
    put:
      operationId: reviews_update
      description: |-
        ViewSet for Review CRUD operations

        list: Get all published reviews (filterable)
        create: Create a new review (requires completed booking)
        retrieve: Get a specific review
        update: Update own review (limited fields, within 24 hours)
        destroy: Soft delete own review (within 24 hours)

        Custom actions:
        - vote: Vote helpful/unhelpful on a review
        - report: Report a review for moderation
        - respond: Practitioner response to review
        - statistics: Get aggregate statistics
      parameters:
      - in: path
        name: public_uuid
        schema:
          type: string
          format: uuid
          description: Public UUID for API exposure
        required: true
      tags:
      - Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdateRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewUpdate'
          description: ''
    patch:
      operationId: reviews_partial_update
      description: |-
        ViewSet for Review CRUD operations

        list: Get all published reviews (filterable)
        create: Create a new review (requires completed booking)
        retrieve: Get a specific review
        update: Update own review (limited fields, within 24 hours)
        destroy: Soft delete own review (within 24 hours)

        Custom actions:
        - vote: Vote helpful/unhelpful on a review
        - report: Report a review for moderation
        - respond: Practitioner response to review
        - statistics: Get aggregate statistics
      parameters:
      - in: path
        name: public_uuid
        schema:
          type: string
          format: uuid
          description: Public UUID for API exposure
        required: true
      tags:
      - Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewUpdateRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewUpdate'
          description: ''
    delete:
      operationId: reviews_destroy
      description: |-
        ViewSet for Review CRUD operations

        list: Get all published reviews (filterable)
        create: Create a new review (requires completed booking)
        retrieve: Get a specific review
        update: Update own review (limited fields, within 24 hours)
        destroy: Soft delete own review (within 24 hours)

        Custom actions:
        - vote: Vote helpful/unhelpful on a review
        - report: Report a review for moderation
        - respond: Practitioner response to review
        - statistics: Get aggregate statistics
      parameters:
      - in: path
        name: public_uuid
        schema:
          type: string
          format: uuid
          description: Public UUID for API exposure
        required: true
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/reviews/{public_uuid}/report/:
    post:
      operationId: reviews_report_create
      description: Report a review for moderation
      parameters:
      - in: path
        name: public_uuid
        schema:
          type: string
          format: uuid
          description: Public UUID for API exposure
        required: true
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
  /api/v1/reviews/{public_uuid}/respond/:
    post:
      operationId: reviews_respond_create
      description: Practitioner response to a review
      parameters:
      - in: path
        name: public_uuid
        schema:
          type: string
          format: uuid
          description: Public UUID for API exposure
        required: true
      tags:
      - Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewResponseRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
          description: ''
  /api/v1/reviews/{public_uuid}/unvote/:
    delete:
      operationId: reviews_unvote_destroy
      description: Remove vote from a review
      parameters:
      - in: path
        name: public_uuid
        schema:
          type: string
          format: uuid
          description: Public UUID for API exposure
        required: true
      tags:
      - reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/reviews/{public_uuid}/vote/:
    post:
      operationId: reviews_vote_create
      description: Vote helpful or unhelpful on a review
      parameters:
      - in: path
        name: public_uuid
        schema:
          type: string
          format: uuid
          description: Public UUID for API exposure
        required: true
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
  /api/v1/reviews/can_review/:
    get:
      operationId: reviews_can_review_retrieve
      description: Check if user can review a practitioner/service
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
  /api/v1/reviews/my_reviews/:
    get:
      operationId: reviews_my_reviews_retrieve
      description: Get reviews written by the current user
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetail'
          description: ''
  /api/v1/reviews/statistics/:
    get:
      operationId: reviews_statistics_retrieve
      description: Get review statistics for a practitioner or service
      tags:
      - Reviews
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewStatistics'
          description: ''
  /api/v1/schedules/:
    get:
      operationId: schedules_list
      description: |-
        ViewSet for managing practitioner schedules.
        Practitioners can create multiple named schedules.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - schedules
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduleList'
          description: ''
    post:
      operationId: schedules_create
      description: |-
        ViewSet for managing practitioner schedules.
        Practitioners can create multiple named schedules.
      tags:
      - schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleCreate'
          description: ''
  /api/v1/schedules/{id}/:
    get:
      operationId: schedules_retrieve
      description: |-
        ViewSet for managing practitioner schedules.
        Practitioners can create multiple named schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    put:
      operationId: schedules_update
      description: |-
        ViewSet for managing practitioner schedules.
        Practitioners can create multiple named schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    patch:
      operationId: schedules_partial_update
      description: |-
        ViewSet for managing practitioner schedules.
        Practitioners can create multiple named schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScheduleRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    delete:
      operationId: schedules_destroy
      description: |-
        ViewSet for managing practitioner schedules.
        Practitioners can create multiple named schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/schedules/{id}/add_time_slot/:
    post:
      operationId: schedules_add_time_slot_create
      description: Add a time slot to a schedule
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/v1/schedules/{id}/remove_time_slot/:
    delete:
      operationId: schedules_remove_time_slot_destroy
      description: Remove a time slot from a schedule
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/schedules/{id}/set_default/:
    post:
      operationId: schedules_set_default_create
      description: Set a schedule as default
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this schedule.
        required: true
      tags:
      - schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/v1/service-categories/:
    get:
      operationId: service_categories_list
      description: |-
        ViewSet for service categories.
        Read-only for regular users, full CRUD for admins.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceCategoryList'
          description: ''
    post:
      operationId: service_categories_create
      description: |-
        ViewSet for service categories.
        Read-only for regular users, full CRUD for admins.
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCategory'
          description: ''
  /api/v1/service-categories/{slug}/:
    get:
      operationId: service_categories_retrieve
      description: |-
        ViewSet for service categories.
        Read-only for regular users, full CRUD for admins.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          description: URL-friendly version of name
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCategory'
          description: ''
    put:
      operationId: service_categories_update
      description: |-
        ViewSet for service categories.
        Read-only for regular users, full CRUD for admins.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          description: URL-friendly version of name
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCategoryRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCategory'
          description: ''
    patch:
      operationId: service_categories_partial_update
      description: |-
        ViewSet for service categories.
        Read-only for regular users, full CRUD for admins.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          description: URL-friendly version of name
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceCategoryRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCategory'
          description: ''
    delete:
      operationId: service_categories_destroy
      description: |-
        ViewSet for service categories.
        Read-only for regular users, full CRUD for admins.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          description: URL-friendly version of name
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/service-categories/featured/:
    get:
      operationId: service_categories_featured_retrieve
      description: Get featured categories
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCategory'
          description: ''
  /api/v1/service-resources/:
    get:
      operationId: service_resources_list
      description: ViewSet for service resources.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceResourceList'
          description: ''
    post:
      operationId: service_resources_create
      description: ViewSet for service resources.
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceResourceRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
          description: ''
  /api/v1/service-resources/{id}/:
    get:
      operationId: service_resources_retrieve
      description: ViewSet for service resources.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service resource.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
          description: ''
    put:
      operationId: service_resources_update
      description: ViewSet for service resources.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service resource.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceResourceRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
          description: ''
    patch:
      operationId: service_resources_partial_update
      description: ViewSet for service resources.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service resource.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceResourceRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
          description: ''
    delete:
      operationId: service_resources_destroy
      description: ViewSet for service resources.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service resource.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/service-sessions/:
    get:
      operationId: service_sessions_list
      description: ViewSet for service sessions (workshops/courses).
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceSessionList'
          description: ''
    post:
      operationId: service_sessions_create
      description: ViewSet for service sessions (workshops/courses).
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSessionRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSession'
          description: ''
  /api/v1/service-sessions/{id}/:
    get:
      operationId: service_sessions_retrieve
      description: ViewSet for service sessions (workshops/courses).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service session.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSession'
          description: ''
    put:
      operationId: service_sessions_update
      description: ViewSet for service sessions (workshops/courses).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service session.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSessionRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSession'
          description: ''
    patch:
      operationId: service_sessions_partial_update
      description: ViewSet for service sessions (workshops/courses).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service session.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceSessionRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSession'
          description: ''
    delete:
      operationId: service_sessions_destroy
      description: ViewSet for service sessions (workshops/courses).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service session.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/services/:
    get:
      operationId: services_list
      description: |-
        ViewSet for services.
        Includes filtering, search, and special endpoints.
      parameters:
      - in: query
        name: age
        schema:
          type: number
      - in: query
        name: available_now
        schema:
          type: boolean
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: category_id
        schema:
          type: integer
      - in: query
        name: experience_level
        schema:
          type: string
          enum:
          - advanced
          - all_levels
          - beginner
          - intermediate
        description: |-
          * `beginner` - Beginner
          * `intermediate` - Intermediate
          * `advanced` - Advanced
          * `all_levels` - All Levels
      - in: query
        name: has_bonus
        schema:
          type: boolean
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_bundle
        schema:
          type: boolean
      - in: query
        name: is_featured
        schema:
          type: boolean
      - in: query
        name: is_package
        schema:
          type: boolean
      - in: query
        name: is_public
        schema:
          type: boolean
      - in: query
        name: location_type
        schema:
          type: string
          enum:
          - hybrid
          - in_person
          - virtual
        description: |-
          * `virtual` - Virtual
          * `in_person` - In Person
          * `hybrid` - Hybrid
      - in: query
        name: max_duration
        schema:
          type: integer
      - in: query
        name: max_participants
        schema:
          type: integer
      - in: query
        name: max_price
        schema:
          type: number
      - in: query
        name: min_duration
        schema:
          type: integer
      - in: query
        name: min_participants
        schema:
          type: integer
      - in: query
        name: min_price
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: practitioner
        schema:
          type: integer
      - in: query
        name: practitioner_slug
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: service_type
        schema:
          type: string
      - in: query
        name: service_type_id
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - discontinued
          - draft
          - paused
          - published
        description: |-
          Service publication status

          * `draft` - Draft
          * `published` - Published
          * `paused` - Paused
          * `discontinued` - Discontinued
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceListList'
          description: ''
    post:
      operationId: services_create
      description: |-
        ViewSet for services.
        Includes filtering, search, and special endpoints.
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCreateUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCreateUpdate'
          description: ''
  /api/v1/services/{id}/:
    get:
      operationId: services_retrieve
      description: |-
        ViewSet for services.
        Includes filtering, search, and special endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
          description: ''
    put:
      operationId: services_update
      description: |-
        ViewSet for services.
        Includes filtering, search, and special endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCreateUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCreateUpdate'
          description: ''
    patch:
      operationId: services_partial_update
      description: |-
        ViewSet for services.
        Includes filtering, search, and special endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceCreateUpdateRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCreateUpdate'
          description: ''
    delete:
      operationId: services_destroy
      description: |-
        ViewSet for services.
        Includes filtering, search, and special endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/services/{id}/duplicate/:
    post:
      operationId: services_duplicate_create
      description: Duplicate a service
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
          description: ''
  /api/v1/services/{id}/media/:
    get:
      operationId: services_media_retrieve
      description: Get media attachments for a service
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
          description: ''
  /api/v1/services/{id}/resources/:
    get:
      operationId: services_resources_retrieve
      description: Get resources for a service
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
          description: ''
  /api/v1/services/{id}/waitlist/:
    get:
      operationId: services_waitlist_retrieve
      description: Manage waitlist for a service
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
          description: ''
    post:
      operationId: services_waitlist_create
      description: Manage waitlist for a service
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Service.
        required: true
      tags:
      - services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
          description: ''
  /api/v1/services/featured/:
    get:
      operationId: services_featured_retrieve
      description: Get featured services
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
          description: ''
  /api/v1/services/popular/:
    get:
      operationId: services_popular_retrieve
      description: Get popular services based on bookings and ratings
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
          description: ''
  /api/v1/services/search/:
    get:
      operationId: services_search_retrieve
      description: Advanced search endpoint
      tags:
      - Services
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetail'
          description: ''
  /api/v1/states/:
    get:
      operationId: states_list
      description: |-
        ViewSet for states/provinces.
        Provides read-only access to state data with filtering by country.
      parameters:
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - states
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStateList'
          description: ''
  /api/v1/states/{id}/:
    get:
      operationId: states_retrieve
      description: |-
        ViewSet for states/provinces.
        Provides read-only access to state data with filtering by country.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this state.
        required: true
      tags:
      - states
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
  /api/v1/stream-categories/:
    get:
      operationId: stream_categories_list
      description: ViewSet for stream categories (read-only).
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - stream-categories
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStreamCategoryList'
          description: ''
  /api/v1/stream-categories/{id}/:
    get:
      operationId: stream_categories_retrieve
      description: ViewSet for stream categories (read-only).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stream Category.
        required: true
      tags:
      - stream-categories
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamCategory'
          description: ''
  /api/v1/stream-categories/{id}/streams/:
    get:
      operationId: stream_categories_streams_retrieve
      description: Get streams in this category.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stream Category.
        required: true
      tags:
      - stream-categories
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamCategory'
          description: ''
  /api/v1/stream-schedules/:
    get:
      operationId: stream_schedules_list
      description: ViewSet for managing stream schedules.
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: stream
        schema:
          type: integer
      - in: query
        name: tier_level
        schema:
          type: string
          enum:
          - entry
          - free
          - premium
        description: |-
          * `free` - Free
          * `entry` - Entry
          * `premium` - Premium
      tags:
      - stream-schedules
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStreamScheduleList'
          description: ''
    post:
      operationId: stream_schedules_create
      description: ViewSet for managing stream schedules.
      tags:
      - stream-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamScheduleRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSchedule'
          description: ''
  /api/v1/stream-schedules/{id}/:
    get:
      operationId: stream_schedules_retrieve
      description: ViewSet for managing stream schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stream schedule.
        required: true
      tags:
      - stream-schedules
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSchedule'
          description: ''
    put:
      operationId: stream_schedules_update
      description: ViewSet for managing stream schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stream schedule.
        required: true
      tags:
      - stream-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamScheduleRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSchedule'
          description: ''
    patch:
      operationId: stream_schedules_partial_update
      description: ViewSet for managing stream schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stream schedule.
        required: true
      tags:
      - stream-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStreamScheduleRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSchedule'
          description: ''
    delete:
      operationId: stream_schedules_destroy
      description: ViewSet for managing stream schedules.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stream schedule.
        required: true
      tags:
      - stream-schedules
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/stream-schedules/{id}/generate_streams/:
    post:
      operationId: stream_schedules_generate_streams_create
      description: Generate scheduled live streams from this schedule.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stream schedule.
        required: true
      tags:
      - stream-schedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamScheduleRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamSchedule'
          description: ''
  /api/v1/streams/:
    get:
      operationId: streams_list
      description: ViewSet for managing content streams.
      parameters:
      - in: query
        name: categories
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_featured
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: practitioner
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStreamList'
          description: ''
    post:
      operationId: streams_create
      description: ViewSet for managing content streams.
      tags:
      - streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
          description: ''
  /api/v1/streams/{id}/:
    get:
      operationId: streams_retrieve
      description: ViewSet for managing content streams.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stream.
        required: true
      tags:
      - streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
          description: ''
    put:
      operationId: streams_update
      description: ViewSet for managing content streams.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stream.
        required: true
      tags:
      - streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
          description: ''
    patch:
      operationId: streams_partial_update
      description: ViewSet for managing content streams.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stream.
        required: true
      tags:
      - streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStreamRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
          description: ''
    delete:
      operationId: streams_destroy
      description: ViewSet for managing content streams.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stream.
        required: true
      tags:
      - streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/streams/{id}/analytics/:
    get:
      operationId: streams_analytics_retrieve
      description: Get analytics for a stream.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stream.
        required: true
      tags:
      - streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
          description: ''
  /api/v1/streams/{id}/launch/:
    post:
      operationId: streams_launch_create
      description: Launch a stream, making it publicly visible.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stream.
        required: true
      tags:
      - streams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
          description: ''
  /api/v1/streams/{id}/live_streams/:
    get:
      operationId: streams_live_streams_retrieve
      description: Get live streams for a content stream.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Stream.
        required: true
      tags:
      - streams
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stream'
          description: ''
  /api/v1/subscriptions/:
    get:
      operationId: subscriptions_list
      description: ViewSet for practitioner subscriptions
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Subscriptions
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPractitionerSubscriptionList'
          description: ''
    post:
      operationId: subscriptions_create
      description: Create a new subscription
      tags:
      - Subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionCreate'
          description: ''
  /api/v1/subscriptions/{id}/:
    get:
      operationId: subscriptions_retrieve
      description: ViewSet for practitioner subscriptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner subscription.
        required: true
      tags:
      - Subscriptions
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerSubscription'
          description: ''
    put:
      operationId: subscriptions_update
      description: ViewSet for practitioner subscriptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner subscription.
        required: true
      tags:
      - Subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerSubscriptionRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerSubscription'
          description: ''
    patch:
      operationId: subscriptions_partial_update
      description: ViewSet for practitioner subscriptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner subscription.
        required: true
      tags:
      - Subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPractitionerSubscriptionRequest'
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerSubscription'
          description: ''
    delete:
      operationId: subscriptions_destroy
      description: ViewSet for practitioner subscriptions
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner subscription.
        required: true
      tags:
      - Subscriptions
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/subscriptions/{id}/cancel/:
    post:
      operationId: subscriptions_cancel_create
      description: Cancel a subscription
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this practitioner subscription.
        required: true
      tags:
      - Subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PractitionerSubscriptionRequest'
        required: true
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerSubscription'
          description: ''
  /api/v1/subscriptions/tiers/:
    get:
      operationId: subscriptions_tiers_retrieve
      description: List available subscription tiers
      tags:
      - Subscriptions
      security:
      - cookieAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerSubscription'
          description: ''
  /api/v1/zipcodes/:
    get:
      operationId: zipcodes_list
      description: |-
        ViewSet for postal codes.
        Provides read-only access to postal code data.
      parameters:
      - in: query
        name: city
        schema:
          type: integer
      - in: query
        name: country
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - zipcodes
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedZipCodeList'
          description: ''
  /api/v1/zipcodes/{id}/:
    get:
      operationId: zipcodes_retrieve
      description: |-
        ViewSet for postal codes.
        Provides read-only access to postal code data.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Postal Code.
        required: true
      tags:
      - zipcodes
      security:
      - cookieAuth: []
      - bearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZipCode'
          description: ''
components:
  schemas:
    AccessLevelEnum:
      enum:
      - public
      - registered
      - enrolled
      - completed
      - private
      type: string
      description: |-
        * `public` - Public
        * `registered` - Registered Users
        * `enrolled` - Enrolled Only
        * `completed` - Post-Completion
        * `private` - Private
    AccountStatusEnum:
      enum:
      - active
      - inactive
      - suspended
      - pending
      - deleted
      type: string
      description: |-
        * `active` - Active
        * `inactive` - Inactive
        * `suspended` - Suspended
        * `pending` - Pending Verification
        * `deleted` - Deleted
    Address:
      type: object
      description: Serializer for address components used in location forms.
      properties:
        address_line1:
          type: string
          maxLength: 255
        address_line2:
          type: string
          maxLength: 255
        city:
          type: integer
        state:
          type: integer
        postal_code:
          type: string
          maxLength: 20
        country:
          type: integer
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
      required:
      - address_line1
      - city
      - country
      - postal_code
      - state
    AddressRequest:
      type: object
      description: Serializer for address components used in location forms.
      properties:
        address_line1:
          type: string
          minLength: 1
          maxLength: 255
        address_line2:
          type: string
          maxLength: 255
        city:
          type: integer
        state:
          type: integer
        postal_code:
          type: string
          minLength: 1
          maxLength: 20
        country:
          type: integer
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
      required:
      - address_line1
      - city
      - country
      - postal_code
      - state
    AppliesToEnum:
      enum:
      - service
      - practitioner
      - both
      type: string
      description: |-
        * `service` - Service
        * `practitioner` - Practitioner
        * `both` - Both
    AttachmentLevelEnum:
      enum:
      - service
      - session
      - booking
      type: string
      description: |-
        * `service` - Service Default
        * `session` - Session Specific
        * `booking` - Booking Specific
    AvailabilityCheck:
      type: object
      description: Serializer for checking availability
      properties:
        practitioner_id:
          type: integer
        service_id:
          type: integer
        date:
          type: string
          format: date
        timezone:
          type: string
          default: UTC
      required:
      - date
      - practitioner_id
      - service_id
    AvailabilityCheckRequest:
      type: object
      description: Serializer for checking availability
      properties:
        practitioner_id:
          type: integer
        service_id:
          type: integer
        date:
          type: string
          format: date
        timezone:
          type: string
          minLength: 1
          default: UTC
      required:
      - date
      - practitioner_id
      - service_id
    BookingAddress:
      type: object
      description: Address serializer for bookings
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: string
          maxLength: 100
        state_province:
          type: string
          description: State, province, or region
          maxLength: 100
        country_code:
          type: string
          description: ISO 3166-1 alpha-2 country code
          maxLength: 2
      required:
      - city
      - country_code
      - state_province
    BookingAddressRequest:
      type: object
      description: Address serializer for bookings
      properties:
        city:
          type: string
          minLength: 1
          maxLength: 100
        state_province:
          type: string
          minLength: 1
          description: State, province, or region
          maxLength: 100
        country_code:
          type: string
          minLength: 1
          description: ISO 3166-1 alpha-2 country code
          maxLength: 2
      required:
      - city
      - country_code
      - state_province
    BookingCreate:
      type: object
      description: Serializer for creating bookings
      properties:
        location_id:
          type: integer
          nullable: true
        service_session_id:
          type: integer
          nullable: true
        start_time:
          type: string
          format: date-time
          description: Scheduled start time
        end_time:
          type: string
          format: date-time
          description: Scheduled end time
        timezone:
          type: string
          description: Timezone for this booking
          maxLength: 50
        title:
          type: string
          nullable: true
          description: Custom booking title
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Booking description or notes
        client_notes:
          type: string
          nullable: true
          description: Notes from the client
        price_override_cents:
          type: integer
          nullable: true
        discount_amount_cents:
          type: integer
          default: 0
        booking:
          allOf:
          - $ref: '#/components/schemas/BookingDetail'
          readOnly: true
      required:
      - end_time
      - start_time
    BookingCreateRequest:
      type: object
      description: Serializer for creating bookings
      properties:
        practitioner_id:
          type: integer
          writeOnly: true
        service_id:
          type: integer
          writeOnly: true
        location_id:
          type: integer
          nullable: true
        service_session_id:
          type: integer
          nullable: true
        start_time:
          type: string
          format: date-time
          description: Scheduled start time
        end_time:
          type: string
          format: date-time
          description: Scheduled end time
        timezone:
          type: string
          minLength: 1
          description: Timezone for this booking
          maxLength: 50
        title:
          type: string
          nullable: true
          description: Custom booking title
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Booking description or notes
        client_notes:
          type: string
          nullable: true
          description: Notes from the client
        price_override_cents:
          type: integer
          nullable: true
        discount_amount_cents:
          type: integer
          default: 0
      required:
      - end_time
      - practitioner_id
      - service_id
      - start_time
    BookingDetail:
      type: object
      description: Detailed booking serializer
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        practitioner:
          allOf:
          - $ref: '#/components/schemas/BookingPractitioner'
          readOnly: true
        service:
          allOf:
          - $ref: '#/components/schemas/BookingService'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/BookingRoom'
          readOnly: true
        location:
          allOf:
          - $ref: '#/components/schemas/BookingAddress'
          readOnly: true
        start_time:
          type: string
          format: date-time
          description: Scheduled start time
        end_time:
          type: string
          format: date-time
          description: Scheduled end time
        actual_start_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Actual start time
        actual_end_time:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Actual end time
        timezone:
          type: string
          description: Timezone for this booking
          maxLength: 50
        status:
          $ref: '#/components/schemas/Status8faEnum'
        status_display:
          type: string
          readOnly: true
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_status_display:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          description: Custom booking title
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Booking description or notes
        client_notes:
          type: string
          nullable: true
          description: Notes from the client
        practitioner_notes:
          type: string
          nullable: true
          description: Private notes from practitioner
        meeting_url:
          type: string
          format: uri
          nullable: true
          description: Virtual meeting link
          maxLength: 200
        meeting_id:
          type: string
          nullable: true
          description: Meeting ID or room number
          maxLength: 100
        price_charged:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        discount_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        final_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        price_charged_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Amount charged for this booking in cents
        discount_amount_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Discount applied in cents
        final_amount_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Final amount after discounts in cents
        service_name_snapshot:
          type: string
          readOnly: true
          description: Service name at time of booking
        service_description_snapshot:
          type: string
          readOnly: true
          description: Service description at time of booking
        practitioner_name_snapshot:
          type: string
          readOnly: true
          description: Practitioner name at time of booking
        service_duration_snapshot:
          type: integer
          readOnly: true
          nullable: true
          description: Duration in minutes at time of booking
        package_name_snapshot:
          type: string
          readOnly: true
          description: Package name at time of booking
        package_contents_snapshot:
          readOnly: true
          nullable: true
          description: What was included in package at time of booking
        bundle_name_snapshot:
          type: string
          readOnly: true
          description: Bundle name at time of booking
        bundle_sessions_snapshot:
          type: integer
          readOnly: true
          nullable: true
          description: Total sessions in bundle at time of booking
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        no_show_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        canceled_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        canceled_by:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CanceledByEnum'
          - $ref: '#/components/schemas/NullEnum'
        cancellation_reason:
          type: string
          nullable: true
        confirmed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When booking was confirmed
        started_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When service started
        status_changed_at:
          type: string
          format: date-time
          readOnly: true
          description: When status last changed
        duration_minutes:
          type: integer
          readOnly: true
        is_upcoming:
          type: boolean
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        can_be_canceled:
          type: boolean
          readOnly: true
        can_be_rescheduled:
          type: boolean
          readOnly: true
        is_individual_session:
          type: boolean
          readOnly: true
        is_group_session:
          type: boolean
          readOnly: true
        is_package_booking:
          type: boolean
          readOnly: true
        is_course_booking:
          type: boolean
          readOnly: true
        is_parent_booking:
          type: boolean
          readOnly: true
        child_bookings:
          type: string
          readOnly: true
        parent_booking_id:
          type: integer
          readOnly: true
        parent_booking_uuid:
          type: string
          readOnly: true
        rescheduled_from_id:
          type: integer
          readOnly: true
        rescheduled_from_uuid:
          type: string
          readOnly: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/BookingReminder'
          readOnly: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/BookingNote'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - end_time
      - final_amount_cents
      - price_charged_cents
      - start_time
    BookingDetailRequest:
      type: object
      description: Detailed booking serializer
      properties:
        start_time:
          type: string
          format: date-time
          description: Scheduled start time
        end_time:
          type: string
          format: date-time
          description: Scheduled end time
        timezone:
          type: string
          minLength: 1
          description: Timezone for this booking
          maxLength: 50
        status:
          $ref: '#/components/schemas/Status8faEnum'
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        title:
          type: string
          nullable: true
          description: Custom booking title
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Booking description or notes
        client_notes:
          type: string
          nullable: true
          description: Notes from the client
        practitioner_notes:
          type: string
          nullable: true
          description: Private notes from practitioner
        meeting_url:
          type: string
          format: uri
          nullable: true
          description: Virtual meeting link
          maxLength: 200
        meeting_id:
          type: string
          nullable: true
          description: Meeting ID or room number
          maxLength: 100
        price_charged_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Amount charged for this booking in cents
        discount_amount_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Discount applied in cents
        final_amount_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Final amount after discounts in cents
        cancellation_reason:
          type: string
          nullable: true
      required:
      - end_time
      - final_amount_cents
      - price_charged_cents
      - start_time
    BookingList:
      type: object
      description: Booking list serializer with minimal details
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          description: Public UUID for API exposure
        practitioner:
          allOf:
          - $ref: '#/components/schemas/BookingPractitioner'
          readOnly: true
        service:
          allOf:
          - $ref: '#/components/schemas/BookingService'
          readOnly: true
        start_time:
          type: string
          format: date-time
          description: Scheduled start time
        end_time:
          type: string
          format: date-time
          description: Scheduled end time
        status:
          $ref: '#/components/schemas/Status8faEnum'
        status_display:
          type: string
          readOnly: true
        payment_status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_status_display:
          type: string
          readOnly: true
        price_charged:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        final_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        duration_minutes:
          type: integer
          readOnly: true
        is_upcoming:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - end_time
      - start_time
    BookingNote:
      type: object
      description: Booking note serializer
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        is_private:
          type: boolean
          description: Whether note is visible only to practitioners
        author_name:
          type: string
          readOnly: true
        author_email:
          type: string
          format: email
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
    BookingNoteRequest:
      type: object
      description: Booking note serializer
      properties:
        content:
          type: string
          minLength: 1
        is_private:
          type: boolean
          description: Whether note is visible only to practitioners
      required:
      - content
    BookingPractitioner:
      type: object
      description: Simplified practitioner serializer for bookings
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        avatar_url:
          type: string
          readOnly: true
        bio:
          type: string
          readOnly: true
          nullable: true
          description: Professional biography and description
    BookingReminder:
      type: object
      description: Booking reminder serializer
      properties:
        id:
          type: integer
          readOnly: true
        reminder_type:
          $ref: '#/components/schemas/ReminderTypeEnum'
        scheduled_time:
          type: string
          format: date-time
          description: When to send the reminder
        sent_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When reminder was actually sent
        subject:
          type: string
          nullable: true
          maxLength: 255
        message:
          type: string
          nullable: true
        is_sent:
          type: boolean
          readOnly: true
      required:
      - reminder_type
      - scheduled_time
    BookingReminderRequest:
      type: object
      description: Booking reminder serializer
      properties:
        reminder_type:
          $ref: '#/components/schemas/ReminderTypeEnum'
        scheduled_time:
          type: string
          format: date-time
          description: When to send the reminder
        subject:
          type: string
          nullable: true
          maxLength: 255
        message:
          type: string
          nullable: true
      required:
      - reminder_type
      - scheduled_time
    BookingReschedule:
      type: object
      description: Serializer for rescheduling bookings
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        reason:
          type: string
      required:
      - end_time
      - start_time
    BookingRescheduleRequest:
      type: object
      description: Serializer for rescheduling bookings
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        reason:
          type: string
      required:
      - end_time
      - start_time
    BookingRoom:
      type: object
      description: Simplified room serializer for bookings
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        name:
          type: string
          readOnly: true
        room_name:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/BookingRoomStatusEnum'
          readOnly: true
    BookingRoomStatusEnum:
      enum:
      - pending
      - active
      - in_use
      - ended
      - error
      type: string
      description: |-
        * `pending` - Pending
        * `active` - Active
        * `in_use` - In Use
        * `ended` - Ended
        * `error` - Error
    BookingService:
      type: object
      description: Simplified service serializer for bookings
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        name:
          type: string
          readOnly: true
          description: Service name
        description:
          type: string
          readOnly: true
          nullable: true
          description: Detailed service description
        service_type:
          type: string
          readOnly: true
        duration_minutes:
          type: integer
          readOnly: true
          description: Duration in minutes
        price_cents:
          type: integer
          readOnly: true
          description: Price in cents (e.g., 10000 = $100.00)
        location_type:
          allOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          readOnly: true
        is_package:
          type: string
          readOnly: true
        is_bundle:
          type: string
          readOnly: true
        is_course:
          type: string
          readOnly: true
    BookingUpdate:
      type: object
      description: Serializer for updating booking details
      properties:
        title:
          type: string
          nullable: true
          description: Custom booking title
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Booking description or notes
        client_notes:
          type: string
          nullable: true
          description: Notes from the client
        location_id:
          type: integer
          nullable: true
        meeting_url:
          type: string
          format: uri
          nullable: true
          description: Virtual meeting link
          maxLength: 200
        meeting_id:
          type: string
          nullable: true
          description: Meeting ID or room number
          maxLength: 100
        timezone:
          type: string
          description: Timezone for this booking
          maxLength: 50
    BookingUpdateRequest:
      type: object
      description: Serializer for updating booking details
      properties:
        title:
          type: string
          nullable: true
          description: Custom booking title
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Booking description or notes
        client_notes:
          type: string
          nullable: true
          description: Notes from the client
        location_id:
          type: integer
          nullable: true
        meeting_url:
          type: string
          format: uri
          nullable: true
          description: Virtual meeting link
          maxLength: 200
        meeting_id:
          type: string
          nullable: true
          description: Meeting ID or room number
          maxLength: 100
        timezone:
          type: string
          minLength: 1
          description: Timezone for this booking
          maxLength: 50
    BrandEnum:
      enum:
      - visa
      - mastercard
      - amex
      - discover
      - diners
      - jcb
      - unionpay
      - unknown
      type: string
      description: |-
        * `visa` - Visa
        * `mastercard` - Mastercard
        * `amex` - American Express
        * `discover` - Discover
        * `diners` - Diners Club
        * `jcb` - JCB
        * `unionpay` - UnionPay
        * `unknown` - Unknown
    Bundle:
      type: object
      description: Specialized serializer for bundles
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        name:
          type: string
          description: Service name
          maxLength: 255
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in cents (e.g., 10000 = $100.00)
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        duration_display:
          type: string
          readOnly: true
        service_type:
          type: integer
          description: Type of service
        service_type_display:
          type: string
          readOnly: true
        service_type_code:
          type: string
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/ServiceCategory'
          readOnly: true
        primary_practitioner:
          allOf:
          - $ref: '#/components/schemas/SimplePractitioner'
          readOnly: true
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        schedule:
          allOf:
          - $ref: '#/components/schemas/SimpleSchedule'
          readOnly: true
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        average_rating:
          type: string
          readOnly: true
        total_reviews:
          type: string
          readOnly: true
        total_bookings:
          type: string
          readOnly: true
        primary_image:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
          description: Detailed service description
        practitioner_category:
          allOf:
          - $ref: '#/components/schemas/PractitionerServiceCategory'
          readOnly: true
        additional_practitioners:
          type: string
          readOnly: true
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        image:
          type: string
          format: uri
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        languages:
          type: array
          items:
            type: integer
        published_at:
          type: string
          format: date-time
          nullable: true
          description: When service was first published
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
        media_attachments:
          type: string
          readOnly: true
        child_services:
          type: string
          readOnly: true
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/ServiceSession'
          readOnly: true
        resources:
          type: string
          readOnly: true
        price_per_session:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        original_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        savings_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        savings_percentage:
          type: number
          format: double
          readOnly: true
        total_sessions:
          type: integer
          readOnly: true
      required:
      - duration_minutes
      - name
      - price_cents
      - service_type
    BundleRequest:
      type: object
      description: Specialized serializer for bundles
      properties:
        name:
          type: string
          minLength: 1
          description: Service name
          maxLength: 255
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in cents (e.g., 10000 = $100.00)
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        service_type:
          type: integer
          description: Type of service
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        description:
          type: string
          nullable: true
          description: Detailed service description
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        image:
          type: string
          format: binary
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        languages:
          type: array
          items:
            type: integer
        published_at:
          type: string
          format: date-time
          nullable: true
          description: When service was first published
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
      required:
      - duration_minutes
      - name
      - price_cents
      - service_type
    CanceledByEnum:
      enum:
      - client
      - practitioner
      - system
      - admin
      type: string
      description: |-
        * `client` - Client
        * `practitioner` - Practitioner
        * `system` - System
        * `admin` - Admin
    Certification:
      type: object
      description: Serializer for practitioner certifications
      properties:
        id:
          type: integer
          readOnly: true
        certificate:
          type: string
          nullable: true
        institution:
          type: string
          nullable: true
        issue_date:
          type: string
          format: date
          nullable: true
        expiry_date:
          type: string
          format: date
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    CertificationRequest:
      type: object
      description: Serializer for practitioner certifications
      properties:
        certificate:
          type: string
          nullable: true
        institution:
          type: string
          nullable: true
        issue_date:
          type: string
          format: date
          nullable: true
        expiry_date:
          type: string
          format: date
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    CheckoutSession:
      type: object
      description: Serializer for creating Stripe checkout sessions
      properties:
        order_type:
          $ref: '#/components/schemas/OrderTypeEnum'
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          default: stripe
        service_id:
          type: string
          format: uuid
        booking_id:
          type: string
          format: uuid
        credit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        subscription_tier_id:
          type: string
          format: uuid
        is_annual:
          type: boolean
          default: false
        success_url:
          type: string
          format: uri
        cancel_url:
          type: string
          format: uri
      required:
      - cancel_url
      - order_type
      - success_url
    CheckoutSessionRequest:
      type: object
      description: Serializer for creating Stripe checkout sessions
      properties:
        order_type:
          $ref: '#/components/schemas/OrderTypeEnum'
        payment_method:
          allOf:
          - $ref: '#/components/schemas/PaymentMethodEnum'
          default: stripe
        service_id:
          type: string
          format: uuid
        booking_id:
          type: string
          format: uuid
        credit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        subscription_tier_id:
          type: string
          format: uuid
        is_annual:
          type: boolean
          default: false
        success_url:
          type: string
          format: uri
          minLength: 1
        cancel_url:
          type: string
          format: uri
          minLength: 1
      required:
      - cancel_url
      - order_type
      - success_url
    City:
      type: object
      description: Serializer for City model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        state:
          type: integer
        state_name:
          type: string
          readOnly: true
        state_code:
          type: string
          readOnly: true
        country_name:
          type: string
          readOnly: true
        country_code:
          type: string
          readOnly: true
        population:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        metro_area:
          type: string
          nullable: true
          description: e.g., 'San Francisco Bay Area', 'Greater NYC'
          maxLength: 100
        is_major:
          type: boolean
          description: Flag for SEO-focused cities
        is_active:
          type: boolean
        service_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Number of active services
        meta_title:
          type: string
          nullable: true
          maxLength: 200
        meta_description:
          type: string
          nullable: true
        seo_url:
          type: string
          readOnly: true
      required:
      - name
      - state
    Country:
      type: object
      description: Serializer for Country model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Full country name
          maxLength: 100
        code:
          type: string
          description: ISO 3166-1 alpha-2 country code
          maxLength: 2
        code_3:
          type: string
          description: ISO 3166-1 alpha-3 country code
          maxLength: 3
        numeric_code:
          type: string
          nullable: true
          description: ISO 3166-1 numeric code
          maxLength: 3
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        phone_code:
          type: string
          nullable: true
          description: International dialing code
          maxLength: 10
        currency_code:
          type: string
          nullable: true
          description: ISO 4217 currency code
          maxLength: 3
        is_active:
          type: boolean
      required:
      - code
      - code_3
      - name
    DeliveryChannelEnum:
      enum:
      - email
      - sms
      - in_app
      - push
      type: string
      description: |-
        * `email` - Email
        * `sms` - SMS
        * `in_app` - In-App
        * `push` - Push Notification
    Education:
      type: object
      description: Serializer for practitioner education
      properties:
        id:
          type: integer
          readOnly: true
        degree:
          type: string
          nullable: true
        educational_institute:
          type: string
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    EducationRequest:
      type: object
      description: Serializer for practitioner education
      properties:
        degree:
          type: string
          nullable: true
        educational_institute:
          type: string
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    EntityTypeEnum:
      enum:
      - service
      - practitioner
      - review
      - user
      - stream_post
      - room_recording
      type: string
      description: |-
        * `service` - Service
        * `practitioner` - Practitioner
        * `review` - Review
        * `user` - User
        * `stream_post` - Stream Post
        * `room_recording` - Room Recording
    ExperienceLevelEnum:
      enum:
      - beginner
      - intermediate
      - advanced
      - all_levels
      type: string
      description: |-
        * `beginner` - Beginner
        * `intermediate` - Intermediate
        * `advanced` - Advanced
        * `all_levels` - All Levels
    LiveStream:
      type: object
      description: Serializer for live streaming sessions.
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        stream:
          type: integer
        stream_title:
          type: string
          readOnly: true
        room:
          type: integer
          readOnly: true
          nullable: true
        room_details:
          type: string
          readOnly: true
        practitioner:
          type: integer
        practitioner_name:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/LiveStreamStatusEnum'
        tier_level:
          allOf:
          - $ref: '#/components/schemas/TierLevelEnum'
          description: |-
            Minimum tier required to view this live stream

            * `free` - Free
            * `entry` - Entry
            * `premium` - Premium
        is_public:
          type: boolean
          description: Whether non-subscribers can view
        scheduled_start:
          type: string
          format: date-time
        scheduled_end:
          type: string
          format: date-time
        actual_start:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        actual_end:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        record_stream:
          type: boolean
        current_viewers:
          type: integer
          readOnly: true
        peak_viewers:
          type: integer
          readOnly: true
        total_viewers:
          type: integer
          readOnly: true
        unique_viewers:
          type: integer
          readOnly: true
        chat_message_count:
          type: integer
          readOnly: true
        reaction_count:
          type: integer
          readOnly: true
        thumbnail_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        tags: {}
        is_live:
          type: string
          readOnly: true
        can_start:
          type: string
          readOnly: true
        duration_minutes:
          type: string
          readOnly: true
        can_access:
          type: string
          readOnly: true
        join_url:
          type: string
          readOnly: true
        is_host:
          type: string
          readOnly: true
        viewer_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - practitioner
      - scheduled_end
      - scheduled_start
      - stream
      - title
    LiveStreamCreate:
      type: object
      description: Serializer for creating live streams.
      properties:
        stream:
          type: integer
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        tier_level:
          allOf:
          - $ref: '#/components/schemas/TierLevelEnum'
          description: |-
            Minimum tier required to view this live stream

            * `free` - Free
            * `entry` - Entry
            * `premium` - Premium
        is_public:
          type: boolean
          description: Whether non-subscribers can view
        scheduled_start:
          type: string
          format: date-time
        scheduled_end:
          type: string
          format: date-time
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        record_stream:
          type: boolean
        thumbnail_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        tags: {}
      required:
      - scheduled_end
      - scheduled_start
      - stream
      - title
    LiveStreamCreateRequest:
      type: object
      description: Serializer for creating live streams.
      properties:
        stream:
          type: integer
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        tier_level:
          allOf:
          - $ref: '#/components/schemas/TierLevelEnum'
          description: |-
            Minimum tier required to view this live stream

            * `free` - Free
            * `entry` - Entry
            * `premium` - Premium
        is_public:
          type: boolean
          description: Whether non-subscribers can view
        scheduled_start:
          type: string
          format: date-time
        scheduled_end:
          type: string
          format: date-time
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        record_stream:
          type: boolean
        thumbnail_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        tags: {}
      required:
      - scheduled_end
      - scheduled_start
      - stream
      - title
    LiveStreamRequest:
      type: object
      description: Serializer for live streaming sessions.
      properties:
        stream:
          type: integer
        practitioner:
          type: integer
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/LiveStreamStatusEnum'
        tier_level:
          allOf:
          - $ref: '#/components/schemas/TierLevelEnum'
          description: |-
            Minimum tier required to view this live stream

            * `free` - Free
            * `entry` - Entry
            * `premium` - Premium
        is_public:
          type: boolean
          description: Whether non-subscribers can view
        scheduled_start:
          type: string
          format: date-time
        scheduled_end:
          type: string
          format: date-time
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        record_stream:
          type: boolean
        thumbnail_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        tags: {}
      required:
      - practitioner
      - scheduled_end
      - scheduled_start
      - stream
      - title
    LiveStreamStatusEnum:
      enum:
      - scheduled
      - live
      - ended
      - cancelled
      type: string
      description: |-
        * `scheduled` - Scheduled
        * `live` - Live
        * `ended` - Ended
        * `cancelled` - Cancelled
    LocationTypeEnum:
      enum:
      - virtual
      - in_person
      - hybrid
      type: string
      description: |-
        * `virtual` - Virtual
        * `in_person` - In Person
        * `hybrid` - Hybrid
    Media:
      type: object
      description: Main serializer for Media objects
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
          description: URL to the file in CloudFlare R2
        thumbnail_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          description: URL to the thumbnail version
        filename:
          type: string
          maxLength: 255
        file_size:
          type: integer
          readOnly: true
          description: File size in bytes
        content_type:
          type: string
          readOnly: true
        media_type:
          allOf:
          - $ref: '#/components/schemas/MediaTypeEnum'
          readOnly: true
        entity_type:
          $ref: '#/components/schemas/EntityTypeEnum'
        entity_id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        alt_text:
          type: string
          nullable: true
          description: Alternative text for accessibility
          maxLength: 500
        status:
          allOf:
          - $ref: '#/components/schemas/MediaStatusEnum'
          readOnly: true
        processing_metadata:
          readOnly: true
          nullable: true
          description: Processing metadata and results
        error_message:
          type: string
          readOnly: true
          nullable: true
        width:
          type: integer
          readOnly: true
          nullable: true
        height:
          type: integer
          readOnly: true
          nullable: true
        duration:
          type: number
          format: double
          readOnly: true
          nullable: true
          description: Duration in seconds for audio/video
        is_primary:
          type: boolean
          description: Primary media for the entity
        display_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order within entity
        uploaded_by:
          type: integer
          readOnly: true
          nullable: true
        uploaded_by_username:
          type: string
          readOnly: true
        view_count:
          type: integer
          readOnly: true
        download_count:
          type: integer
          readOnly: true
        processed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        versions:
          type: array
          items:
            $ref: '#/components/schemas/MediaVersion'
          readOnly: true
        processing_jobs:
          type: array
          items:
            $ref: '#/components/schemas/MediaProcessingJob'
          readOnly: true
      required:
      - entity_id
      - entity_type
      - filename
    MediaProcessingJob:
      type: object
      description: Serializer for media processing jobs
      properties:
        job_id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/MediaProcessingJobStatusEnum'
        operations:
          type: array
          items:
            type: string
            maxLength: 50
          description: List of operations to perform
        options:
          description: Processing options and parameters
        progress:
          type: number
          format: double
          description: Progress percentage (0-100)
        current_operation:
          type: string
          nullable: true
          maxLength: 100
        completed_operations:
          type: array
          items:
            type: string
            maxLength: 50
        error_message:
          type: string
          nullable: true
        started_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - operations
    MediaProcessingJobRequest:
      type: object
      description: Serializer for media processing jobs
      properties:
        status:
          $ref: '#/components/schemas/MediaProcessingJobStatusEnum'
        operations:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
          description: List of operations to perform
        options:
          description: Processing options and parameters
        progress:
          type: number
          format: double
          description: Progress percentage (0-100)
        current_operation:
          type: string
          nullable: true
          maxLength: 100
        completed_operations:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 50
        error_message:
          type: string
          nullable: true
      required:
      - operations
    MediaProcessingJobStatusEnum:
      enum:
      - queued
      - processing
      - completed
      - failed
      - cancelled
      type: string
      description: |-
        * `queued` - Queued
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
        * `cancelled` - Cancelled
    MediaRequest:
      type: object
      description: Main serializer for Media objects
      properties:
        filename:
          type: string
          minLength: 1
          maxLength: 255
        entity_type:
          $ref: '#/components/schemas/EntityTypeEnum'
        entity_id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        alt_text:
          type: string
          nullable: true
          description: Alternative text for accessibility
          maxLength: 500
        is_primary:
          type: boolean
          description: Primary media for the entity
        display_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order within entity
      required:
      - entity_id
      - entity_type
      - filename
    MediaStatusEnum:
      enum:
      - pending
      - processing
      - ready
      - failed
      - deleted
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `ready` - Ready
        * `failed` - Failed
        * `deleted` - Deleted
    MediaTypeEnum:
      enum:
      - image
      - video
      - document
      - audio
      type: string
      description: |-
        * `image` - Image
        * `video` - Video
        * `document` - Document
        * `audio` - Audio
    MediaVersion:
      type: object
      description: Serializer for media versions/variants
      properties:
        id:
          type: integer
          readOnly: true
        version_type:
          type: string
          description: e.g., 'thumbnail', 'small', 'medium', 'large', 'hd'
          maxLength: 50
        url:
          type: string
          format: uri
          maxLength: 500
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        height:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        format:
          type: string
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - file_size
      - format
      - url
      - version_type
    MediaVersionRequest:
      type: object
      description: Serializer for media versions/variants
      properties:
        version_type:
          type: string
          minLength: 1
          description: e.g., 'thumbnail', 'small', 'medium', 'large', 'hd'
          maxLength: 50
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 500
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        height:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        file_size:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        format:
          type: string
          minLength: 1
          maxLength: 20
      required:
      - file_size
      - format
      - url
      - version_type
    MessageResponse:
      type: object
      description: Generic message response serializer
      properties:
        message:
          type: string
        success:
          type: boolean
          default: true
      required:
      - message
    Modality:
      type: object
      description: Serializer for modalities
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - name
    ModalityRequest:
      type: object
      description: Serializer for modalities
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - name
    Notification:
      type: object
      description: Serializer for Notification model.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        message:
          type: string
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        delivery_channel:
          $ref: '#/components/schemas/DeliveryChannelEnum'
        is_read:
          type: boolean
        scheduled_for:
          type: string
          format: date-time
          nullable: true
        sent_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/NotificationStatusEnum'
          readOnly: true
        metadata: {}
        related_object_type:
          type: string
          maxLength: 50
        related_object_id:
          type: string
          maxLength: 50
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          readOnly: true
        user_name:
          type: string
          readOnly: true
        time_since:
          type: string
          readOnly: true
      required:
      - delivery_channel
      - message
      - notification_type
      - title
    NotificationList:
      type: object
      description: Lightweight serializer for notification lists.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        message:
          type: string
          readOnly: true
        notification_type:
          allOf:
          - $ref: '#/components/schemas/NotificationTypeEnum'
          readOnly: true
        is_read:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        time_since:
          type: string
          readOnly: true
    NotificationRequest:
      type: object
      description: Serializer for Notification model.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        message:
          type: string
          minLength: 1
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        delivery_channel:
          $ref: '#/components/schemas/DeliveryChannelEnum'
        is_read:
          type: boolean
        scheduled_for:
          type: string
          format: date-time
          nullable: true
        metadata: {}
        related_object_type:
          type: string
          maxLength: 50
        related_object_id:
          type: string
          maxLength: 50
      required:
      - delivery_channel
      - message
      - notification_type
      - title
    NotificationSetting:
      type: object
      description: Serializer for NotificationSetting model (user preferences).
      properties:
        id:
          type: integer
          readOnly: true
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        notification_type_display:
          type: string
          readOnly: true
        email_enabled:
          type: boolean
        sms_enabled:
          type: boolean
        in_app_enabled:
          type: boolean
        push_enabled:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - notification_type
    NotificationSettingRequest:
      type: object
      description: Serializer for NotificationSetting model (user preferences).
      properties:
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        email_enabled:
          type: boolean
        sms_enabled:
          type: boolean
        in_app_enabled:
          type: boolean
        push_enabled:
          type: boolean
      required:
      - notification_type
    NotificationStatusEnum:
      enum:
      - pending
      - sent
      - failed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `sent` - Sent
        * `failed` - Failed
        * `cancelled` - Cancelled
    NotificationTemplate:
      type: object
      description: Serializer for NotificationTemplate model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        delivery_channel:
          $ref: '#/components/schemas/DeliveryChannelEnum'
        subject_template:
          type: string
          maxLength: 255
        body_template:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - body_template
      - delivery_channel
      - name
      - notification_type
    NotificationTypeEnum:
      enum:
      - booking
      - payment
      - session
      - review
      - system
      - message
      - reminder
      type: string
      description: |-
        * `booking` - Booking
        * `payment` - Payment
        * `session` - Session
        * `review` - Review
        * `system` - System
        * `message` - Message
        * `reminder` - Reminder
    NullEnum:
      enum:
      - null
    Order:
      type: object
      description: Serializer for orders
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        user:
          type: integer
          readOnly: true
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        stripe_payment_intent_id:
          type: string
          readOnly: true
        stripe_payment_method_id:
          type: string
          maxLength: 200
        subtotal_amount_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Subtotal in cents
        tax_amount_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Tax amount in cents
        credits_applied_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Credits applied in cents
        total_amount_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Total amount in cents
        subtotal_amount:
          type: string
          readOnly: true
        total_amount:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        order_type:
          $ref: '#/components/schemas/OrderTypeEnum'
        currency:
          type: string
          maxLength: 3
        service:
          type: integer
          nullable: true
        practitioner:
          type: integer
          nullable: true
        metadata: {}
        tax_details: {}
        is_paid:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - subtotal_amount_cents
      - total_amount_cents
    OrderStatusEnum:
      enum:
      - pending
      - processing
      - completed
      - failed
      - refunded
      - partially_refunded
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
        * `refunded` - Refunded
        * `partially_refunded` - Partially Refunded
    OrderTypeEnum:
      enum:
      - direct
      - credit
      - package
      - subscription
      type: string
      description: |-
        * `direct` - Direct Service Purchase
        * `credit` - Credit Purchase
        * `package` - Package Purchase
        * `subscription` - Subscription
    Package:
      type: object
      description: Specialized serializer for packages
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        name:
          type: string
          description: Service name
          maxLength: 255
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in cents (e.g., 10000 = $100.00)
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        duration_display:
          type: string
          readOnly: true
        service_type:
          type: integer
          description: Type of service
        service_type_display:
          type: string
          readOnly: true
        service_type_code:
          type: string
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/ServiceCategory'
          readOnly: true
        primary_practitioner:
          allOf:
          - $ref: '#/components/schemas/SimplePractitioner'
          readOnly: true
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        schedule:
          allOf:
          - $ref: '#/components/schemas/SimpleSchedule'
          readOnly: true
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        average_rating:
          type: string
          readOnly: true
        total_reviews:
          type: string
          readOnly: true
        total_bookings:
          type: string
          readOnly: true
        primary_image:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
          description: Detailed service description
        practitioner_category:
          allOf:
          - $ref: '#/components/schemas/PractitionerServiceCategory'
          readOnly: true
        additional_practitioners:
          type: string
          readOnly: true
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        image:
          type: string
          format: uri
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        languages:
          type: array
          items:
            type: integer
        published_at:
          type: string
          format: date-time
          nullable: true
          description: When service was first published
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
        media_attachments:
          type: string
          readOnly: true
        child_services:
          type: string
          readOnly: true
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/ServiceSession'
          readOnly: true
        resources:
          type: string
          readOnly: true
        price_per_session:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        original_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        savings_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        savings_percentage:
          type: number
          format: double
          readOnly: true
        total_sessions:
          type: integer
          readOnly: true
      required:
      - duration_minutes
      - name
      - price_cents
      - service_type
    PackageRequest:
      type: object
      description: Specialized serializer for packages
      properties:
        name:
          type: string
          minLength: 1
          description: Service name
          maxLength: 255
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in cents (e.g., 10000 = $100.00)
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        service_type:
          type: integer
          description: Type of service
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        description:
          type: string
          nullable: true
          description: Detailed service description
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        image:
          type: string
          format: binary
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        languages:
          type: array
          items:
            type: integer
        published_at:
          type: string
          format: date-time
          nullable: true
          description: When service was first published
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
      required:
      - duration_minutes
      - name
      - price_cents
      - service_type
    PaginatedBookingListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BookingList'
    PaginatedBundleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Bundle'
    PaginatedCertificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Certification'
    PaginatedCityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/City'
    PaginatedCountryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    PaginatedEducationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Education'
    PaginatedLiveStreamList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LiveStream'
    PaginatedMediaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    PaginatedNotificationListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationList'
    PaginatedNotificationSettingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationSetting'
    PaginatedNotificationTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplate'
    PaginatedOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedPackageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Package'
    PaginatedPaymentMethodList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
    PaginatedPractitionerListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PractitionerList'
    PaginatedPractitionerLocationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PractitionerLocation'
    PaginatedPractitionerPayoutList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PractitionerPayout'
    PaginatedPractitionerServiceCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PractitionerServiceCategory'
    PaginatedPractitionerSubscriptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PractitionerSubscription'
    PaginatedReviewListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReviewList'
    PaginatedReviewQuestionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReviewQuestion'
    PaginatedScheduleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
    PaginatedServiceCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceCategory'
    PaginatedServiceListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceList'
    PaginatedServiceResourceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceResource'
    PaginatedServiceSessionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ServiceSession'
    PaginatedStateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/State'
    PaginatedStreamCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StreamCategory'
    PaginatedStreamList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Stream'
    PaginatedStreamScheduleList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StreamSchedule'
    PaginatedZipCodeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ZipCode'
    PasswordChangeRequest:
      type: object
      description: Password change serializer
      properties:
        current_password:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 8
        new_password_confirm:
          type: string
          minLength: 1
      required:
      - current_password
      - new_password
      - new_password_confirm
    PatchedBookingUpdateRequest:
      type: object
      description: Serializer for updating booking details
      properties:
        title:
          type: string
          nullable: true
          description: Custom booking title
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Booking description or notes
        client_notes:
          type: string
          nullable: true
          description: Notes from the client
        location_id:
          type: integer
          nullable: true
        meeting_url:
          type: string
          format: uri
          nullable: true
          description: Virtual meeting link
          maxLength: 200
        meeting_id:
          type: string
          nullable: true
          description: Meeting ID or room number
          maxLength: 100
        timezone:
          type: string
          minLength: 1
          description: Timezone for this booking
          maxLength: 50
    PatchedBundleRequest:
      type: object
      description: Specialized serializer for bundles
      properties:
        name:
          type: string
          minLength: 1
          description: Service name
          maxLength: 255
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in cents (e.g., 10000 = $100.00)
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        service_type:
          type: integer
          description: Type of service
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        description:
          type: string
          nullable: true
          description: Detailed service description
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        image:
          type: string
          format: binary
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        languages:
          type: array
          items:
            type: integer
        published_at:
          type: string
          format: date-time
          nullable: true
          description: When service was first published
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
    PatchedCertificationRequest:
      type: object
      description: Serializer for practitioner certifications
      properties:
        certificate:
          type: string
          nullable: true
        institution:
          type: string
          nullable: true
        issue_date:
          type: string
          format: date
          nullable: true
        expiry_date:
          type: string
          format: date
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedEducationRequest:
      type: object
      description: Serializer for practitioner education
      properties:
        degree:
          type: string
          nullable: true
        educational_institute:
          type: string
          nullable: true
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedLiveStreamRequest:
      type: object
      description: Serializer for live streaming sessions.
      properties:
        stream:
          type: integer
        practitioner:
          type: integer
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/LiveStreamStatusEnum'
        tier_level:
          allOf:
          - $ref: '#/components/schemas/TierLevelEnum'
          description: |-
            Minimum tier required to view this live stream

            * `free` - Free
            * `entry` - Entry
            * `premium` - Premium
        is_public:
          type: boolean
          description: Whether non-subscribers can view
        scheduled_start:
          type: string
          format: date-time
        scheduled_end:
          type: string
          format: date-time
        allow_chat:
          type: boolean
        allow_reactions:
          type: boolean
        record_stream:
          type: boolean
        thumbnail_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        tags: {}
    PatchedMediaRequest:
      type: object
      description: Main serializer for Media objects
      properties:
        filename:
          type: string
          minLength: 1
          maxLength: 255
        entity_type:
          $ref: '#/components/schemas/EntityTypeEnum'
        entity_id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        alt_text:
          type: string
          nullable: true
          description: Alternative text for accessibility
          maxLength: 500
        is_primary:
          type: boolean
          description: Primary media for the entity
        display_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order within entity
    PatchedNotificationRequest:
      type: object
      description: Serializer for Notification model.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        message:
          type: string
          minLength: 1
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        delivery_channel:
          $ref: '#/components/schemas/DeliveryChannelEnum'
        is_read:
          type: boolean
        scheduled_for:
          type: string
          format: date-time
          nullable: true
        metadata: {}
        related_object_type:
          type: string
          maxLength: 50
        related_object_id:
          type: string
          maxLength: 50
    PatchedNotificationSettingRequest:
      type: object
      description: Serializer for NotificationSetting model (user preferences).
      properties:
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        email_enabled:
          type: boolean
        sms_enabled:
          type: boolean
        in_app_enabled:
          type: boolean
        push_enabled:
          type: boolean
    PatchedPackageRequest:
      type: object
      description: Specialized serializer for packages
      properties:
        name:
          type: string
          minLength: 1
          description: Service name
          maxLength: 255
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in cents (e.g., 10000 = $100.00)
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        service_type:
          type: integer
          description: Type of service
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        description:
          type: string
          nullable: true
          description: Detailed service description
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        image:
          type: string
          format: binary
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        languages:
          type: array
          items:
            type: integer
        published_at:
          type: string
          format: date-time
          nullable: true
          description: When service was first published
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
    PatchedPaymentMethodRequest:
      type: object
      description: Serializer for payment methods
      properties:
        is_default:
          type: boolean
        is_active:
          type: boolean
    PatchedPractitionerLocationRequest:
      type: object
      description: Serializer for practitioner locations.
      properties:
        name:
          type: string
          nullable: true
          description: Optional name for this location (e.g., 'Downtown Office')
          maxLength: 255
        address_line1:
          type: string
          minLength: 1
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: integer
          nullable: true
        state:
          type: integer
          nullable: true
        postal_code:
          type: string
          minLength: 1
          maxLength: 20
        country:
          type: integer
          nullable: true
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        is_primary:
          type: boolean
        is_virtual:
          type: boolean
          description: Whether this practitioner offers virtual services from this
            location
        is_in_person:
          type: boolean
          description: Whether this practitioner offers in-person services at this
            location
        service_radius_miles:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,1})?$
          nullable: true
          description: Service area radius in miles (for mobile services)
        address:
          allOf:
          - $ref: '#/components/schemas/AddressRequest'
          writeOnly: true
    PatchedPractitionerPayoutRequest:
      type: object
      description: Serializer for practitioner payouts
      properties:
        payout_date:
          type: string
          format: date-time
          nullable: true
        credits_payout_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Payout amount in cents
        cash_payout_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Cash payout in cents
        commission_collected_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Commission collected in cents
        status:
          $ref: '#/components/schemas/PractitionerPayoutStatusEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        processed_by:
          type: integer
          nullable: true
        notes:
          type: string
          nullable: true
        payment_method:
          type: string
          minLength: 1
          description: Method used for payout (e.g., stripe, manual)
          maxLength: 50
        error_message:
          type: string
          nullable: true
        transaction_fee_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Transaction fee in cents
    PatchedPractitionerServiceCategoryRequest:
      type: object
      description: Serializer for practitioner-specific service categories
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          description: Icon class or identifier
          maxLength: 50
        color:
          type: string
          nullable: true
          description: Hex color for UI display
          maxLength: 7
        is_active:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order for drag-drop sorting
    PatchedPractitionerSubscriptionRequest:
      type: object
      description: Serializer for practitioner subscriptions
      properties:
        tier_id:
          type: string
          format: uuid
          writeOnly: true
        status:
          $ref: '#/components/schemas/PractitionerSubscriptionStatusEnum'
        end_date:
          type: string
          format: date-time
          nullable: true
        is_annual:
          type: boolean
        auto_renew:
          type: boolean
    PatchedPractitionerUpdateRequest:
      type: object
      description: Serializer for updating practitioner profile
      properties:
        display_name:
          type: string
          nullable: true
          description: Professional display name shown to clients
          maxLength: 255
        professional_title:
          type: string
          nullable: true
          description: Professional title/designation
          maxLength: 255
        bio:
          type: string
          nullable: true
          description: Professional biography and description
          maxLength: 2000
        quote:
          type: string
          nullable: true
          description: Inspirational quote or motto
          maxLength: 500
        profile_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to practitioner's profile image
          maxLength: 200
        profile_video_url:
          type: string
          format: uri
          nullable: true
          description: URL to practitioner's intro video
          maxLength: 200
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Years of professional experience
        buffer_time:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Buffer time between sessions in minutes
        specialization_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        style_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        topic_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        modality_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        certification_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        education_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
    PatchedReviewUpdateRequest:
      type: object
      description: Serializer for updating reviews (limited fields)
      properties:
        comment:
          type: string
        is_anonymous:
          type: boolean
    PatchedScheduleRequest:
      type: object
      description: Serializer for practitioner schedules
      properties:
        name:
          type: string
          minLength: 1
          description: Name of this schedule
          maxLength: 100
        description:
          type: string
          nullable: true
          description: Description of this schedule
        timezone:
          allOf:
          - $ref: '#/components/schemas/TimezoneEnum'
          description: |-
            Timezone for this schedule

            * `Africa/Abidjan` - Africa/Abidjan
            * `Africa/Accra` - Africa/Accra
            * `Africa/Addis_Ababa` - Africa/Addis_Ababa
            * `Africa/Algiers` - Africa/Algiers
            * `Africa/Asmara` - Africa/Asmara
            * `Africa/Bamako` - Africa/Bamako
            * `Africa/Bangui` - Africa/Bangui
            * `Africa/Banjul` - Africa/Banjul
            * `Africa/Bissau` - Africa/Bissau
            * `Africa/Blantyre` - Africa/Blantyre
            * `Africa/Brazzaville` - Africa/Brazzaville
            * `Africa/Bujumbura` - Africa/Bujumbura
            * `Africa/Cairo` - Africa/Cairo
            * `Africa/Casablanca` - Africa/Casablanca
            * `Africa/Ceuta` - Africa/Ceuta
            * `Africa/Conakry` - Africa/Conakry
            * `Africa/Dakar` - Africa/Dakar
            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
            * `Africa/Djibouti` - Africa/Djibouti
            * `Africa/Douala` - Africa/Douala
            * `Africa/El_Aaiun` - Africa/El_Aaiun
            * `Africa/Freetown` - Africa/Freetown
            * `Africa/Gaborone` - Africa/Gaborone
            * `Africa/Harare` - Africa/Harare
            * `Africa/Johannesburg` - Africa/Johannesburg
            * `Africa/Juba` - Africa/Juba
            * `Africa/Kampala` - Africa/Kampala
            * `Africa/Khartoum` - Africa/Khartoum
            * `Africa/Kigali` - Africa/Kigali
            * `Africa/Kinshasa` - Africa/Kinshasa
            * `Africa/Lagos` - Africa/Lagos
            * `Africa/Libreville` - Africa/Libreville
            * `Africa/Lome` - Africa/Lome
            * `Africa/Luanda` - Africa/Luanda
            * `Africa/Lubumbashi` - Africa/Lubumbashi
            * `Africa/Lusaka` - Africa/Lusaka
            * `Africa/Malabo` - Africa/Malabo
            * `Africa/Maputo` - Africa/Maputo
            * `Africa/Maseru` - Africa/Maseru
            * `Africa/Mbabane` - Africa/Mbabane
            * `Africa/Mogadishu` - Africa/Mogadishu
            * `Africa/Monrovia` - Africa/Monrovia
            * `Africa/Nairobi` - Africa/Nairobi
            * `Africa/Ndjamena` - Africa/Ndjamena
            * `Africa/Niamey` - Africa/Niamey
            * `Africa/Nouakchott` - Africa/Nouakchott
            * `Africa/Ouagadougou` - Africa/Ouagadougou
            * `Africa/Porto-Novo` - Africa/Porto-Novo
            * `Africa/Sao_Tome` - Africa/Sao_Tome
            * `Africa/Tripoli` - Africa/Tripoli
            * `Africa/Tunis` - Africa/Tunis
            * `Africa/Windhoek` - Africa/Windhoek
            * `America/Adak` - America/Adak
            * `America/Anchorage` - America/Anchorage
            * `America/Anguilla` - America/Anguilla
            * `America/Antigua` - America/Antigua
            * `America/Araguaina` - America/Araguaina
            * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
            * `America/Argentina/Catamarca` - America/Argentina/Catamarca
            * `America/Argentina/Cordoba` - America/Argentina/Cordoba
            * `America/Argentina/Jujuy` - America/Argentina/Jujuy
            * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
            * `America/Argentina/Mendoza` - America/Argentina/Mendoza
            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
            * `America/Argentina/Salta` - America/Argentina/Salta
            * `America/Argentina/San_Juan` - America/Argentina/San_Juan
            * `America/Argentina/San_Luis` - America/Argentina/San_Luis
            * `America/Argentina/Tucuman` - America/Argentina/Tucuman
            * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
            * `America/Aruba` - America/Aruba
            * `America/Asuncion` - America/Asuncion
            * `America/Atikokan` - America/Atikokan
            * `America/Bahia` - America/Bahia
            * `America/Bahia_Banderas` - America/Bahia_Banderas
            * `America/Barbados` - America/Barbados
            * `America/Belem` - America/Belem
            * `America/Belize` - America/Belize
            * `America/Blanc-Sablon` - America/Blanc-Sablon
            * `America/Boa_Vista` - America/Boa_Vista
            * `America/Bogota` - America/Bogota
            * `America/Boise` - America/Boise
            * `America/Cambridge_Bay` - America/Cambridge_Bay
            * `America/Campo_Grande` - America/Campo_Grande
            * `America/Cancun` - America/Cancun
            * `America/Caracas` - America/Caracas
            * `America/Cayenne` - America/Cayenne
            * `America/Cayman` - America/Cayman
            * `America/Chicago` - America/Chicago
            * `America/Chihuahua` - America/Chihuahua
            * `America/Ciudad_Juarez` - America/Ciudad_Juarez
            * `America/Costa_Rica` - America/Costa_Rica
            * `America/Creston` - America/Creston
            * `America/Cuiaba` - America/Cuiaba
            * `America/Curacao` - America/Curacao
            * `America/Danmarkshavn` - America/Danmarkshavn
            * `America/Dawson` - America/Dawson
            * `America/Dawson_Creek` - America/Dawson_Creek
            * `America/Denver` - America/Denver
            * `America/Detroit` - America/Detroit
            * `America/Dominica` - America/Dominica
            * `America/Edmonton` - America/Edmonton
            * `America/Eirunepe` - America/Eirunepe
            * `America/El_Salvador` - America/El_Salvador
            * `America/Fort_Nelson` - America/Fort_Nelson
            * `America/Fortaleza` - America/Fortaleza
            * `America/Glace_Bay` - America/Glace_Bay
            * `America/Goose_Bay` - America/Goose_Bay
            * `America/Grand_Turk` - America/Grand_Turk
            * `America/Grenada` - America/Grenada
            * `America/Guadeloupe` - America/Guadeloupe
            * `America/Guatemala` - America/Guatemala
            * `America/Guayaquil` - America/Guayaquil
            * `America/Guyana` - America/Guyana
            * `America/Halifax` - America/Halifax
            * `America/Havana` - America/Havana
            * `America/Hermosillo` - America/Hermosillo
            * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
            * `America/Indiana/Knox` - America/Indiana/Knox
            * `America/Indiana/Marengo` - America/Indiana/Marengo
            * `America/Indiana/Petersburg` - America/Indiana/Petersburg
            * `America/Indiana/Tell_City` - America/Indiana/Tell_City
            * `America/Indiana/Vevay` - America/Indiana/Vevay
            * `America/Indiana/Vincennes` - America/Indiana/Vincennes
            * `America/Indiana/Winamac` - America/Indiana/Winamac
            * `America/Inuvik` - America/Inuvik
            * `America/Iqaluit` - America/Iqaluit
            * `America/Jamaica` - America/Jamaica
            * `America/Juneau` - America/Juneau
            * `America/Kentucky/Louisville` - America/Kentucky/Louisville
            * `America/Kentucky/Monticello` - America/Kentucky/Monticello
            * `America/Kralendijk` - America/Kralendijk
            * `America/La_Paz` - America/La_Paz
            * `America/Lima` - America/Lima
            * `America/Los_Angeles` - America/Los_Angeles
            * `America/Lower_Princes` - America/Lower_Princes
            * `America/Maceio` - America/Maceio
            * `America/Managua` - America/Managua
            * `America/Manaus` - America/Manaus
            * `America/Marigot` - America/Marigot
            * `America/Martinique` - America/Martinique
            * `America/Matamoros` - America/Matamoros
            * `America/Mazatlan` - America/Mazatlan
            * `America/Menominee` - America/Menominee
            * `America/Merida` - America/Merida
            * `America/Metlakatla` - America/Metlakatla
            * `America/Mexico_City` - America/Mexico_City
            * `America/Miquelon` - America/Miquelon
            * `America/Moncton` - America/Moncton
            * `America/Monterrey` - America/Monterrey
            * `America/Montevideo` - America/Montevideo
            * `America/Montserrat` - America/Montserrat
            * `America/Nassau` - America/Nassau
            * `America/New_York` - America/New_York
            * `America/Nome` - America/Nome
            * `America/Noronha` - America/Noronha
            * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
            * `America/North_Dakota/Center` - America/North_Dakota/Center
            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
            * `America/Nuuk` - America/Nuuk
            * `America/Ojinaga` - America/Ojinaga
            * `America/Panama` - America/Panama
            * `America/Paramaribo` - America/Paramaribo
            * `America/Phoenix` - America/Phoenix
            * `America/Port-au-Prince` - America/Port-au-Prince
            * `America/Port_of_Spain` - America/Port_of_Spain
            * `America/Porto_Velho` - America/Porto_Velho
            * `America/Puerto_Rico` - America/Puerto_Rico
            * `America/Punta_Arenas` - America/Punta_Arenas
            * `America/Rankin_Inlet` - America/Rankin_Inlet
            * `America/Recife` - America/Recife
            * `America/Regina` - America/Regina
            * `America/Resolute` - America/Resolute
            * `America/Rio_Branco` - America/Rio_Branco
            * `America/Santarem` - America/Santarem
            * `America/Santiago` - America/Santiago
            * `America/Santo_Domingo` - America/Santo_Domingo
            * `America/Sao_Paulo` - America/Sao_Paulo
            * `America/Scoresbysund` - America/Scoresbysund
            * `America/Sitka` - America/Sitka
            * `America/St_Barthelemy` - America/St_Barthelemy
            * `America/St_Johns` - America/St_Johns
            * `America/St_Kitts` - America/St_Kitts
            * `America/St_Lucia` - America/St_Lucia
            * `America/St_Thomas` - America/St_Thomas
            * `America/St_Vincent` - America/St_Vincent
            * `America/Swift_Current` - America/Swift_Current
            * `America/Tegucigalpa` - America/Tegucigalpa
            * `America/Thule` - America/Thule
            * `America/Tijuana` - America/Tijuana
            * `America/Toronto` - America/Toronto
            * `America/Tortola` - America/Tortola
            * `America/Vancouver` - America/Vancouver
            * `America/Whitehorse` - America/Whitehorse
            * `America/Winnipeg` - America/Winnipeg
            * `America/Yakutat` - America/Yakutat
            * `Antarctica/Casey` - Antarctica/Casey
            * `Antarctica/Davis` - Antarctica/Davis
            * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
            * `Antarctica/Macquarie` - Antarctica/Macquarie
            * `Antarctica/Mawson` - Antarctica/Mawson
            * `Antarctica/McMurdo` - Antarctica/McMurdo
            * `Antarctica/Palmer` - Antarctica/Palmer
            * `Antarctica/Rothera` - Antarctica/Rothera
            * `Antarctica/Syowa` - Antarctica/Syowa
            * `Antarctica/Troll` - Antarctica/Troll
            * `Antarctica/Vostok` - Antarctica/Vostok
            * `Arctic/Longyearbyen` - Arctic/Longyearbyen
            * `Asia/Aden` - Asia/Aden
            * `Asia/Almaty` - Asia/Almaty
            * `Asia/Amman` - Asia/Amman
            * `Asia/Anadyr` - Asia/Anadyr
            * `Asia/Aqtau` - Asia/Aqtau
            * `Asia/Aqtobe` - Asia/Aqtobe
            * `Asia/Ashgabat` - Asia/Ashgabat
            * `Asia/Atyrau` - Asia/Atyrau
            * `Asia/Baghdad` - Asia/Baghdad
            * `Asia/Bahrain` - Asia/Bahrain
            * `Asia/Baku` - Asia/Baku
            * `Asia/Bangkok` - Asia/Bangkok
            * `Asia/Barnaul` - Asia/Barnaul
            * `Asia/Beirut` - Asia/Beirut
            * `Asia/Bishkek` - Asia/Bishkek
            * `Asia/Brunei` - Asia/Brunei
            * `Asia/Chita` - Asia/Chita
            * `Asia/Choibalsan` - Asia/Choibalsan
            * `Asia/Colombo` - Asia/Colombo
            * `Asia/Damascus` - Asia/Damascus
            * `Asia/Dhaka` - Asia/Dhaka
            * `Asia/Dili` - Asia/Dili
            * `Asia/Dubai` - Asia/Dubai
            * `Asia/Dushanbe` - Asia/Dushanbe
            * `Asia/Famagusta` - Asia/Famagusta
            * `Asia/Gaza` - Asia/Gaza
            * `Asia/Hebron` - Asia/Hebron
            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
            * `Asia/Hong_Kong` - Asia/Hong_Kong
            * `Asia/Hovd` - Asia/Hovd
            * `Asia/Irkutsk` - Asia/Irkutsk
            * `Asia/Jakarta` - Asia/Jakarta
            * `Asia/Jayapura` - Asia/Jayapura
            * `Asia/Jerusalem` - Asia/Jerusalem
            * `Asia/Kabul` - Asia/Kabul
            * `Asia/Kamchatka` - Asia/Kamchatka
            * `Asia/Karachi` - Asia/Karachi
            * `Asia/Kathmandu` - Asia/Kathmandu
            * `Asia/Khandyga` - Asia/Khandyga
            * `Asia/Kolkata` - Asia/Kolkata
            * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
            * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
            * `Asia/Kuching` - Asia/Kuching
            * `Asia/Kuwait` - Asia/Kuwait
            * `Asia/Macau` - Asia/Macau
            * `Asia/Magadan` - Asia/Magadan
            * `Asia/Makassar` - Asia/Makassar
            * `Asia/Manila` - Asia/Manila
            * `Asia/Muscat` - Asia/Muscat
            * `Asia/Nicosia` - Asia/Nicosia
            * `Asia/Novokuznetsk` - Asia/Novokuznetsk
            * `Asia/Novosibirsk` - Asia/Novosibirsk
            * `Asia/Omsk` - Asia/Omsk
            * `Asia/Oral` - Asia/Oral
            * `Asia/Phnom_Penh` - Asia/Phnom_Penh
            * `Asia/Pontianak` - Asia/Pontianak
            * `Asia/Pyongyang` - Asia/Pyongyang
            * `Asia/Qatar` - Asia/Qatar
            * `Asia/Qostanay` - Asia/Qostanay
            * `Asia/Qyzylorda` - Asia/Qyzylorda
            * `Asia/Riyadh` - Asia/Riyadh
            * `Asia/Sakhalin` - Asia/Sakhalin
            * `Asia/Samarkand` - Asia/Samarkand
            * `Asia/Seoul` - Asia/Seoul
            * `Asia/Shanghai` - Asia/Shanghai
            * `Asia/Singapore` - Asia/Singapore
            * `Asia/Srednekolymsk` - Asia/Srednekolymsk
            * `Asia/Taipei` - Asia/Taipei
            * `Asia/Tashkent` - Asia/Tashkent
            * `Asia/Tbilisi` - Asia/Tbilisi
            * `Asia/Tehran` - Asia/Tehran
            * `Asia/Thimphu` - Asia/Thimphu
            * `Asia/Tokyo` - Asia/Tokyo
            * `Asia/Tomsk` - Asia/Tomsk
            * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
            * `Asia/Urumqi` - Asia/Urumqi
            * `Asia/Ust-Nera` - Asia/Ust-Nera
            * `Asia/Vientiane` - Asia/Vientiane
            * `Asia/Vladivostok` - Asia/Vladivostok
            * `Asia/Yakutsk` - Asia/Yakutsk
            * `Asia/Yangon` - Asia/Yangon
            * `Asia/Yekaterinburg` - Asia/Yekaterinburg
            * `Asia/Yerevan` - Asia/Yerevan
            * `Atlantic/Azores` - Atlantic/Azores
            * `Atlantic/Bermuda` - Atlantic/Bermuda
            * `Atlantic/Canary` - Atlantic/Canary
            * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
            * `Atlantic/Faroe` - Atlantic/Faroe
            * `Atlantic/Madeira` - Atlantic/Madeira
            * `Atlantic/Reykjavik` - Atlantic/Reykjavik
            * `Atlantic/South_Georgia` - Atlantic/South_Georgia
            * `Atlantic/St_Helena` - Atlantic/St_Helena
            * `Atlantic/Stanley` - Atlantic/Stanley
            * `Australia/Adelaide` - Australia/Adelaide
            * `Australia/Brisbane` - Australia/Brisbane
            * `Australia/Broken_Hill` - Australia/Broken_Hill
            * `Australia/Darwin` - Australia/Darwin
            * `Australia/Eucla` - Australia/Eucla
            * `Australia/Hobart` - Australia/Hobart
            * `Australia/Lindeman` - Australia/Lindeman
            * `Australia/Lord_Howe` - Australia/Lord_Howe
            * `Australia/Melbourne` - Australia/Melbourne
            * `Australia/Perth` - Australia/Perth
            * `Australia/Sydney` - Australia/Sydney
            * `Canada/Atlantic` - Canada/Atlantic
            * `Canada/Central` - Canada/Central
            * `Canada/Eastern` - Canada/Eastern
            * `Canada/Mountain` - Canada/Mountain
            * `Canada/Newfoundland` - Canada/Newfoundland
            * `Canada/Pacific` - Canada/Pacific
            * `Europe/Amsterdam` - Europe/Amsterdam
            * `Europe/Andorra` - Europe/Andorra
            * `Europe/Astrakhan` - Europe/Astrakhan
            * `Europe/Athens` - Europe/Athens
            * `Europe/Belgrade` - Europe/Belgrade
            * `Europe/Berlin` - Europe/Berlin
            * `Europe/Bratislava` - Europe/Bratislava
            * `Europe/Brussels` - Europe/Brussels
            * `Europe/Bucharest` - Europe/Bucharest
            * `Europe/Budapest` - Europe/Budapest
            * `Europe/Busingen` - Europe/Busingen
            * `Europe/Chisinau` - Europe/Chisinau
            * `Europe/Copenhagen` - Europe/Copenhagen
            * `Europe/Dublin` - Europe/Dublin
            * `Europe/Gibraltar` - Europe/Gibraltar
            * `Europe/Guernsey` - Europe/Guernsey
            * `Europe/Helsinki` - Europe/Helsinki
            * `Europe/Isle_of_Man` - Europe/Isle_of_Man
            * `Europe/Istanbul` - Europe/Istanbul
            * `Europe/Jersey` - Europe/Jersey
            * `Europe/Kaliningrad` - Europe/Kaliningrad
            * `Europe/Kirov` - Europe/Kirov
            * `Europe/Kyiv` - Europe/Kyiv
            * `Europe/Lisbon` - Europe/Lisbon
            * `Europe/Ljubljana` - Europe/Ljubljana
            * `Europe/London` - Europe/London
            * `Europe/Luxembourg` - Europe/Luxembourg
            * `Europe/Madrid` - Europe/Madrid
            * `Europe/Malta` - Europe/Malta
            * `Europe/Mariehamn` - Europe/Mariehamn
            * `Europe/Minsk` - Europe/Minsk
            * `Europe/Monaco` - Europe/Monaco
            * `Europe/Moscow` - Europe/Moscow
            * `Europe/Oslo` - Europe/Oslo
            * `Europe/Paris` - Europe/Paris
            * `Europe/Podgorica` - Europe/Podgorica
            * `Europe/Prague` - Europe/Prague
            * `Europe/Riga` - Europe/Riga
            * `Europe/Rome` - Europe/Rome
            * `Europe/Samara` - Europe/Samara
            * `Europe/San_Marino` - Europe/San_Marino
            * `Europe/Sarajevo` - Europe/Sarajevo
            * `Europe/Saratov` - Europe/Saratov
            * `Europe/Simferopol` - Europe/Simferopol
            * `Europe/Skopje` - Europe/Skopje
            * `Europe/Sofia` - Europe/Sofia
            * `Europe/Stockholm` - Europe/Stockholm
            * `Europe/Tallinn` - Europe/Tallinn
            * `Europe/Tirane` - Europe/Tirane
            * `Europe/Ulyanovsk` - Europe/Ulyanovsk
            * `Europe/Vaduz` - Europe/Vaduz
            * `Europe/Vatican` - Europe/Vatican
            * `Europe/Vienna` - Europe/Vienna
            * `Europe/Vilnius` - Europe/Vilnius
            * `Europe/Volgograd` - Europe/Volgograd
            * `Europe/Warsaw` - Europe/Warsaw
            * `Europe/Zagreb` - Europe/Zagreb
            * `Europe/Zurich` - Europe/Zurich
            * `GMT` - GMT
            * `Indian/Antananarivo` - Indian/Antananarivo
            * `Indian/Chagos` - Indian/Chagos
            * `Indian/Christmas` - Indian/Christmas
            * `Indian/Cocos` - Indian/Cocos
            * `Indian/Comoro` - Indian/Comoro
            * `Indian/Kerguelen` - Indian/Kerguelen
            * `Indian/Mahe` - Indian/Mahe
            * `Indian/Maldives` - Indian/Maldives
            * `Indian/Mauritius` - Indian/Mauritius
            * `Indian/Mayotte` - Indian/Mayotte
            * `Indian/Reunion` - Indian/Reunion
            * `Pacific/Apia` - Pacific/Apia
            * `Pacific/Auckland` - Pacific/Auckland
            * `Pacific/Bougainville` - Pacific/Bougainville
            * `Pacific/Chatham` - Pacific/Chatham
            * `Pacific/Chuuk` - Pacific/Chuuk
            * `Pacific/Easter` - Pacific/Easter
            * `Pacific/Efate` - Pacific/Efate
            * `Pacific/Fakaofo` - Pacific/Fakaofo
            * `Pacific/Fiji` - Pacific/Fiji
            * `Pacific/Funafuti` - Pacific/Funafuti
            * `Pacific/Galapagos` - Pacific/Galapagos
            * `Pacific/Gambier` - Pacific/Gambier
            * `Pacific/Guadalcanal` - Pacific/Guadalcanal
            * `Pacific/Guam` - Pacific/Guam
            * `Pacific/Honolulu` - Pacific/Honolulu
            * `Pacific/Kanton` - Pacific/Kanton
            * `Pacific/Kiritimati` - Pacific/Kiritimati
            * `Pacific/Kosrae` - Pacific/Kosrae
            * `Pacific/Kwajalein` - Pacific/Kwajalein
            * `Pacific/Majuro` - Pacific/Majuro
            * `Pacific/Marquesas` - Pacific/Marquesas
            * `Pacific/Midway` - Pacific/Midway
            * `Pacific/Nauru` - Pacific/Nauru
            * `Pacific/Niue` - Pacific/Niue
            * `Pacific/Norfolk` - Pacific/Norfolk
            * `Pacific/Noumea` - Pacific/Noumea
            * `Pacific/Pago_Pago` - Pacific/Pago_Pago
            * `Pacific/Palau` - Pacific/Palau
            * `Pacific/Pitcairn` - Pacific/Pitcairn
            * `Pacific/Pohnpei` - Pacific/Pohnpei
            * `Pacific/Port_Moresby` - Pacific/Port_Moresby
            * `Pacific/Rarotonga` - Pacific/Rarotonga
            * `Pacific/Saipan` - Pacific/Saipan
            * `Pacific/Tahiti` - Pacific/Tahiti
            * `Pacific/Tarawa` - Pacific/Tarawa
            * `Pacific/Tongatapu` - Pacific/Tongatapu
            * `Pacific/Wake` - Pacific/Wake
            * `Pacific/Wallis` - Pacific/Wallis
            * `US/Alaska` - US/Alaska
            * `US/Arizona` - US/Arizona
            * `US/Central` - US/Central
            * `US/Eastern` - US/Eastern
            * `US/Hawaii` - US/Hawaii
            * `US/Mountain` - US/Mountain
            * `US/Pacific` - US/Pacific
            * `UTC` - UTC
        is_default:
          type: boolean
          description: Whether this is the default schedule
        is_active:
          type: boolean
    PatchedServiceCategoryRequest:
      type: object
      description: Serializer for service categories
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          description: Icon class or identifier
          maxLength: 50
        is_active:
          type: boolean
        is_featured:
          type: boolean
          description: Whether to feature this category
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order
    PatchedServiceCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating services
      properties:
        name:
          type: string
          minLength: 1
          description: Service name
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Detailed service description
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          writeOnly: true
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        service_type_id:
          type: integer
        category_id:
          type: integer
          nullable: true
        practitioner_category_id:
          type: integer
          nullable: true
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        schedule:
          type: integer
          nullable: true
          description: Availability schedule for session-type services
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        image:
          type: string
          format: binary
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
        additional_practitioner_ids:
          type: array
          items:
            type: integer
        child_service_configs:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: List of dicts with child_service_id, quantity, discount_percentage,
            etc.
    PatchedServiceResourceRequest:
      type: object
      description: Serializer for service resources
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        resource_type:
          $ref: '#/components/schemas/ResourceTypeEnum'
        attachment_level:
          $ref: '#/components/schemas/AttachmentLevelEnum'
        content:
          type: string
          nullable: true
          description: For text posts and rich content
        file_url:
          type: string
          format: uri
          nullable: true
          description: URL to uploaded file (S3/CDN)
          maxLength: 200
        external_url:
          type: string
          format: uri
          nullable: true
          description: External video/link URL
          maxLength: 200
        file_name:
          type: string
          nullable: true
          maxLength: 255
        file_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: File size in bytes
        file_type:
          type: string
          nullable: true
          description: MIME type
          maxLength: 50
        duration_seconds:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: For video/audio resources
        access_level:
          $ref: '#/components/schemas/AccessLevelEnum'
        is_downloadable:
          type: boolean
          description: Allow downloads for files
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When resource becomes available
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When resource expires
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_featured:
          type: boolean
        tags:
          nullable: true
    PatchedServiceSessionRequest:
      type: object
      description: Serializer for service sessions (workshops/courses)
      properties:
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in minutes
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        sequence_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        status:
          type: string
          minLength: 1
          maxLength: 20
        agenda:
          type: string
          nullable: true
        what_youll_learn:
          type: string
          nullable: true
          description: Describe what clients will learn or gain from this specific
            session
        address:
          type: integer
          nullable: true
          description: Address where this session takes place (for in-person sessions)
    PatchedStreamRequest:
      type: object
      description: Serializer for content streams.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        tagline:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          minLength: 1
        about:
          type: string
          nullable: true
          description: Detailed about section
        cover_image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        profile_image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        intro_video_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        category_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        tags: {}
        free_tier_name:
          type: string
          minLength: 1
          maxLength: 50
        entry_tier_name:
          type: string
          minLength: 1
          maxLength: 50
        premium_tier_name:
          type: string
          minLength: 1
          maxLength: 50
        entry_tier_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 100
          description: Monthly price in cents for entry tier
        premium_tier_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 100
          description: Monthly price in cents for premium tier
        free_tier_description:
          type: string
          nullable: true
        entry_tier_description:
          type: string
          nullable: true
        premium_tier_description:
          type: string
          nullable: true
        free_tier_perks: {}
        entry_tier_perks: {}
        premium_tier_perks: {}
        is_active:
          type: boolean
        is_featured:
          type: boolean
        allow_comments:
          type: boolean
        allow_dms:
          type: boolean
        allow_tips:
          type: boolean
        preview_post_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Number of posts non-subscribers can preview
        watermark_media:
          type: boolean
          description: Add watermark to media for lower tiers
        commission_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Platform commission percentage
        launched_at:
          type: string
          format: date-time
          nullable: true
    PatchedStreamScheduleRequest:
      type: object
      description: Serializer for stream schedules.
      properties:
        stream:
          type: integer
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        recurrence_rule:
          type: string
          minLength: 1
          description: RRULE format for recurrence
          maxLength: 500
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        tier_level:
          $ref: '#/components/schemas/TierLevelEnum'
        is_active:
          type: boolean
        auto_create_days_ahead:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Days ahead to auto-create scheduled streams
    PatchedUserProfileRequest:
      type: object
      description: User profile serializer
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          description: Phone number in international format
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        timezone:
          type: string
          minLength: 1
          description: User's preferred timezone (e.g., "America/New_York", "Europe/London")
          maxLength: 50
    PaymentMethod:
      type: object
      description: Serializer for payment methods
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        stripe_payment_method_id:
          type: string
          readOnly: true
        brand:
          allOf:
          - $ref: '#/components/schemas/BrandEnum'
          readOnly: true
        last4:
          type: string
          readOnly: true
        exp_month:
          type: integer
          readOnly: true
        exp_year:
          type: integer
          readOnly: true
        is_default:
          type: boolean
        is_active:
          type: boolean
        masked_number:
          type: string
          readOnly: true
        is_expired:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PaymentMethodCreate:
      type: object
      description: Serializer for creating payment methods
      properties:
        stripe_payment_method_id:
          type: string
        is_default:
          type: boolean
          default: false
      required:
      - stripe_payment_method_id
    PaymentMethodCreateRequest:
      type: object
      description: Serializer for creating payment methods
      properties:
        stripe_payment_method_id:
          type: string
          minLength: 1
        is_default:
          type: boolean
          default: false
      required:
      - stripe_payment_method_id
    PaymentMethodEnum:
      enum:
      - stripe
      - credits
      - manual
      type: string
      description: |-
        * `stripe` - Stripe
        * `credits` - Credits
        * `manual` - Manual
    PaymentMethodRequest:
      type: object
      description: Serializer for payment methods
      properties:
        is_default:
          type: boolean
        is_active:
          type: boolean
    PaymentStatusEnum:
      enum:
      - unpaid
      - paid
      - partially_refunded
      - refunded
      type: string
      description: |-
        * `unpaid` - Unpaid
        * `paid` - Paid
        * `partially_refunded` - Partially Refunded
        * `refunded` - Refunded
    PractitionerApplication:
      type: object
      description: Serializer for practitioner applications
      properties:
        display_name:
          type: string
          nullable: true
          description: Professional display name shown to clients
          maxLength: 255
        professional_title:
          type: string
          nullable: true
          description: Professional title/designation
          maxLength: 255
        bio:
          type: string
          nullable: true
          description: Professional biography and description
          maxLength: 2000
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Years of professional experience
        profile_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to practitioner's profile image
          maxLength: 200
    PractitionerApplicationRequest:
      type: object
      description: Serializer for practitioner applications
      properties:
        display_name:
          type: string
          nullable: true
          description: Professional display name shown to clients
          maxLength: 255
        professional_title:
          type: string
          nullable: true
          description: Professional title/designation
          maxLength: 255
        bio:
          type: string
          nullable: true
          description: Professional biography and description
          maxLength: 2000
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Years of professional experience
        profile_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to practitioner's profile image
          maxLength: 200
    PractitionerDetail:
      type: object
      description: Detailed serializer for public practitioner profiles
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        display_name:
          type: string
          readOnly: true
          nullable: true
          description: Professional display name shown to clients
        professional_title:
          type: string
          readOnly: true
          nullable: true
          description: Professional title/designation
        bio:
          type: string
          readOnly: true
          nullable: true
          description: Professional biography and description
        quote:
          type: string
          readOnly: true
          nullable: true
          description: Inspirational quote or motto
        profile_image_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          description: URL to practitioner's profile image
        profile_video_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          description: URL to practitioner's intro video
        years_of_experience:
          type: integer
          readOnly: true
          nullable: true
          description: Years of professional experience
        is_verified:
          type: boolean
          readOnly: true
          description: Whether practitioner is verified by admin
        featured:
          type: boolean
          readOnly: true
          description: Whether to feature this practitioner
        is_active:
          type: string
          readOnly: true
        full_name:
          type: string
          readOnly: true
        average_rating:
          type: string
          readOnly: true
        total_reviews:
          type: string
          readOnly: true
        total_services:
          type: string
          readOnly: true
        completed_sessions_count:
          type: string
          readOnly: true
        price_range:
          type: string
          readOnly: true
        next_available_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Next available booking date
        primary_location:
          allOf:
          - $ref: '#/components/schemas/PractitionerLocation'
          readOnly: true
        specializations:
          type: array
          items:
            $ref: '#/components/schemas/Specialization'
          readOnly: true
        styles:
          type: array
          items:
            $ref: '#/components/schemas/Style'
          readOnly: true
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
          readOnly: true
        modalities:
          type: array
          items:
            $ref: '#/components/schemas/Modality'
          readOnly: true
        certifications:
          type: array
          items:
            $ref: '#/components/schemas/Certification'
          readOnly: true
    PractitionerList:
      type: object
      description: Lightweight serializer for practitioner listings
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        display_name:
          type: string
          readOnly: true
          nullable: true
          description: Professional display name shown to clients
        professional_title:
          type: string
          readOnly: true
          nullable: true
          description: Professional title/designation
        profile_image_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          description: URL to practitioner's profile image
        years_of_experience:
          type: integer
          readOnly: true
          nullable: true
          description: Years of professional experience
        is_verified:
          type: boolean
          readOnly: true
          description: Whether practitioner is verified by admin
        featured:
          type: boolean
          readOnly: true
          description: Whether to feature this practitioner
        full_name:
          type: string
          readOnly: true
        average_rating:
          type: string
          readOnly: true
        total_reviews:
          type: string
          readOnly: true
        total_services:
          type: string
          readOnly: true
        price_range:
          type: string
          readOnly: true
        primary_location:
          allOf:
          - $ref: '#/components/schemas/PractitionerLocation'
          readOnly: true
        specializations:
          type: array
          items:
            $ref: '#/components/schemas/Specialization'
          readOnly: true
        next_available_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Next available booking date
    PractitionerLocation:
      type: object
      description: Serializer for practitioner locations.
      properties:
        id:
          type: integer
          readOnly: true
        practitioner:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          description: Optional name for this location (e.g., 'Downtown Office')
          maxLength: 255
        address_line1:
          type: string
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: integer
          nullable: true
        state:
          type: integer
          nullable: true
        postal_code:
          type: string
          maxLength: 20
        country:
          type: integer
          nullable: true
        city_name:
          type: string
          readOnly: true
        state_name:
          type: string
          readOnly: true
        state_code:
          type: string
          readOnly: true
        country_name:
          type: string
          readOnly: true
        country_code:
          type: string
          readOnly: true
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        is_primary:
          type: boolean
        is_virtual:
          type: boolean
          description: Whether this practitioner offers virtual services from this
            location
        is_in_person:
          type: boolean
          description: Whether this practitioner offers in-person services at this
            location
        service_radius_miles:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,1})?$
          nullable: true
          description: Service area radius in miles (for mobile services)
        full_address:
          type: string
          readOnly: true
        location_types:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address_line1
      - postal_code
    PractitionerLocationRequest:
      type: object
      description: Serializer for practitioner locations.
      properties:
        name:
          type: string
          nullable: true
          description: Optional name for this location (e.g., 'Downtown Office')
          maxLength: 255
        address_line1:
          type: string
          minLength: 1
          maxLength: 255
        address_line2:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: integer
          nullable: true
        state:
          type: integer
          nullable: true
        postal_code:
          type: string
          minLength: 1
          maxLength: 20
        country:
          type: integer
          nullable: true
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        is_primary:
          type: boolean
        is_virtual:
          type: boolean
          description: Whether this practitioner offers virtual services from this
            location
        is_in_person:
          type: boolean
          description: Whether this practitioner offers in-person services at this
            location
        service_radius_miles:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,1})?$
          nullable: true
          description: Service area radius in miles (for mobile services)
        address:
          allOf:
          - $ref: '#/components/schemas/AddressRequest'
          writeOnly: true
      required:
      - address_line1
      - postal_code
    PractitionerPayout:
      type: object
      description: Serializer for practitioner payouts
      properties:
        id:
          type: integer
          readOnly: true
        practitioner:
          type: integer
          readOnly: true
          nullable: true
        payout_date:
          type: string
          format: date-time
          nullable: true
        credits_payout_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Payout amount in cents
        cash_payout_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Cash payout in cents
        commission_collected_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Commission collected in cents
        credits_payout:
          type: string
          readOnly: true
        stripe_account_id:
          type: string
          readOnly: true
          nullable: true
        stripe_transfer_id:
          type: string
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/PractitionerPayoutStatusEnum'
        batch_id:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        currency:
          type: string
          maxLength: 3
        processed_by:
          type: integer
          nullable: true
        notes:
          type: string
          nullable: true
        payment_method:
          type: string
          description: Method used for payout (e.g., stripe, manual)
          maxLength: 50
        error_message:
          type: string
          nullable: true
        transaction_fee_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Transaction fee in cents
        transaction_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PractitionerPayoutRequest:
      type: object
      description: Serializer for practitioner payouts
      properties:
        payout_date:
          type: string
          format: date-time
          nullable: true
        credits_payout_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Payout amount in cents
        cash_payout_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Cash payout in cents
        commission_collected_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Commission collected in cents
        status:
          $ref: '#/components/schemas/PractitionerPayoutStatusEnum'
        currency:
          type: string
          minLength: 1
          maxLength: 3
        processed_by:
          type: integer
          nullable: true
        notes:
          type: string
          nullable: true
        payment_method:
          type: string
          minLength: 1
          description: Method used for payout (e.g., stripe, manual)
          maxLength: 50
        error_message:
          type: string
          nullable: true
        transaction_fee_cents:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: Transaction fee in cents
    PractitionerPayoutStatusEnum:
      enum:
      - pending
      - processing
      - completed
      - failed
      - canceled
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
        * `canceled` - Canceled
    PractitionerPrivate:
      type: object
      description: Private serializer for practitioner's own profile
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        display_name:
          type: string
          readOnly: true
          nullable: true
          description: Professional display name shown to clients
        professional_title:
          type: string
          readOnly: true
          nullable: true
          description: Professional title/designation
        bio:
          type: string
          readOnly: true
          nullable: true
          description: Professional biography and description
        quote:
          type: string
          readOnly: true
          nullable: true
          description: Inspirational quote or motto
        profile_image_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          description: URL to practitioner's profile image
        profile_video_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          description: URL to practitioner's intro video
        years_of_experience:
          type: integer
          readOnly: true
          nullable: true
          description: Years of professional experience
        is_verified:
          type: boolean
          readOnly: true
          description: Whether practitioner is verified by admin
        featured:
          type: boolean
          readOnly: true
          description: Whether to feature this practitioner
        is_active:
          type: string
          readOnly: true
        full_name:
          type: string
          readOnly: true
        average_rating:
          type: string
          readOnly: true
        total_reviews:
          type: string
          readOnly: true
        total_services:
          type: string
          readOnly: true
        completed_sessions_count:
          type: string
          readOnly: true
        price_range:
          type: string
          readOnly: true
        next_available_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: Next available booking date
        primary_location:
          allOf:
          - $ref: '#/components/schemas/PractitionerLocation'
          readOnly: true
        specializations:
          type: array
          items:
            $ref: '#/components/schemas/Specialization'
          readOnly: true
        styles:
          type: array
          items:
            $ref: '#/components/schemas/Style'
          readOnly: true
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
          readOnly: true
        modalities:
          type: array
          items:
            $ref: '#/components/schemas/Modality'
          readOnly: true
        certifications:
          type: array
          items:
            $ref: '#/components/schemas/Certification'
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        phone:
          type: string
          readOnly: true
        practitioner_status:
          $ref: '#/components/schemas/PractitionerStatusEnum'
        is_onboarded:
          type: boolean
        onboarding_step:
          type: integer
          maximum: 32767
          minimum: 0
        onboarding_completed_at:
          type: string
          format: date-time
          nullable: true
        buffer_time:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Buffer time between sessions in minutes
        cancellation_rate:
          type: string
          readOnly: true
        subscription:
          allOf:
          - $ref: '#/components/schemas/PractitionerSubscription'
          readOnly: true
        educations:
          type: array
          items:
            $ref: '#/components/schemas/Education'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PractitionerServiceCategory:
      type: object
      description: Serializer for practitioner-specific service categories
      properties:
        id:
          type: integer
          readOnly: true
        practitioner:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          description: URL-friendly version of name
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          description: Icon class or identifier
          maxLength: 50
        color:
          type: string
          nullable: true
          description: Hex color for UI display
          maxLength: 7
        is_active:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order for drag-drop sorting
        service_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
    PractitionerServiceCategoryRequest:
      type: object
      description: Serializer for practitioner-specific service categories
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          description: Icon class or identifier
          maxLength: 50
        color:
          type: string
          nullable: true
          description: Hex color for UI display
          maxLength: 7
        is_active:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order for drag-drop sorting
      required:
      - name
    PractitionerStatusEnum:
      enum:
      - active
      - inactive
      - vacation
      - pending
      - suspended
      - rejected
      type: string
      description: |-
        * `active` - Active
        * `inactive` - Inactive
        * `vacation` - On Vacation
        * `pending` - Pending Approval
        * `suspended` - Suspended
        * `rejected` - Rejected
    PractitionerSubscription:
      type: object
      description: Serializer for practitioner subscription status
      properties:
        id:
          type: integer
          readOnly: true
        tier:
          type: integer
          readOnly: true
        tier_display:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/PractitionerSubscriptionStatusEnum'
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_active:
          type: string
          readOnly: true
        is_annual:
          type: boolean
          readOnly: true
    PractitionerSubscriptionRequest:
      type: object
      description: Serializer for practitioner subscriptions
      properties:
        tier_id:
          type: string
          format: uuid
          writeOnly: true
        status:
          $ref: '#/components/schemas/PractitionerSubscriptionStatusEnum'
        end_date:
          type: string
          format: date-time
          nullable: true
        is_annual:
          type: boolean
        auto_renew:
          type: boolean
      required:
      - tier_id
    PractitionerSubscriptionStatusEnum:
      enum:
      - active
      - canceled
      - past_due
      - trialing
      - unpaid
      type: string
      description: |-
        * `active` - Active
        * `canceled` - Canceled
        * `past_due` - Past Due
        * `trialing` - Trialing
        * `unpaid` - Unpaid
    PractitionerUpdate:
      type: object
      description: Serializer for updating practitioner profile
      properties:
        display_name:
          type: string
          nullable: true
          description: Professional display name shown to clients
          maxLength: 255
        professional_title:
          type: string
          nullable: true
          description: Professional title/designation
          maxLength: 255
        bio:
          type: string
          nullable: true
          description: Professional biography and description
          maxLength: 2000
        quote:
          type: string
          nullable: true
          description: Inspirational quote or motto
          maxLength: 500
        profile_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to practitioner's profile image
          maxLength: 200
        profile_video_url:
          type: string
          format: uri
          nullable: true
          description: URL to practitioner's intro video
          maxLength: 200
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Years of professional experience
        buffer_time:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Buffer time between sessions in minutes
    PractitionerUpdateRequest:
      type: object
      description: Serializer for updating practitioner profile
      properties:
        display_name:
          type: string
          nullable: true
          description: Professional display name shown to clients
          maxLength: 255
        professional_title:
          type: string
          nullable: true
          description: Professional title/designation
          maxLength: 255
        bio:
          type: string
          nullable: true
          description: Professional biography and description
          maxLength: 2000
        quote:
          type: string
          nullable: true
          description: Inspirational quote or motto
          maxLength: 500
        profile_image_url:
          type: string
          format: uri
          nullable: true
          description: URL to practitioner's profile image
          maxLength: 200
        profile_video_url:
          type: string
          format: uri
          nullable: true
          description: URL to practitioner's intro video
          maxLength: 200
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Years of professional experience
        buffer_time:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Buffer time between sessions in minutes
        specialization_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        style_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        topic_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        modality_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        certification_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        education_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
    QuestionTypeEnum:
      enum:
      - rating
      - text
      - boolean
      type: string
      description: |-
        * `rating` - Rating
        * `text` - Text
        * `boolean` - Yes/No
    ReminderTypeEnum:
      enum:
      - email
      - sms
      - push
      - webhook
      type: string
      description: |-
        * `email` - Email
        * `sms` - SMS
        * `push` - Push Notification
        * `webhook` - Webhook
    ResourceTypeEnum:
      enum:
      - post
      - document
      - video
      - image
      - link
      - audio
      type: string
      description: |-
        * `post` - Text Post
        * `document` - Document
        * `video` - Video
        * `image` - Image
        * `link` - External Link
        * `audio` - Audio
    ReviewAnswer:
      type: object
      description: Serializer for review answers
      properties:
        id:
          type: integer
          readOnly: true
        question:
          allOf:
          - $ref: '#/components/schemas/ReviewQuestion'
          readOnly: true
        rating_answer:
          type: integer
          maximum: 5
          minimum: 1
          nullable: true
        text_answer:
          type: string
        boolean_answer:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    ReviewAnswerRequest:
      type: object
      description: Serializer for review answers
      properties:
        question_id:
          type: integer
          writeOnly: true
        rating_answer:
          type: integer
          maximum: 5
          minimum: 1
          nullable: true
        text_answer:
          type: string
        boolean_answer:
          type: boolean
          nullable: true
      required:
      - question_id
    ReviewCreate:
      type: object
      description: Serializer for creating reviews
      properties:
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          description: Rating from 0.0 to 5.0
        comment:
          type: string
        is_anonymous:
          type: boolean
        answers:
          type: array
          items:
            $ref: '#/components/schemas/ReviewAnswer'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - rating
    ReviewCreateRequest:
      type: object
      description: Serializer for creating reviews
      properties:
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          description: Rating from 0.0 to 5.0
        comment:
          type: string
        practitioner_uuid:
          type: string
          format: uuid
          writeOnly: true
        service_uuid:
          type: string
          format: uuid
          writeOnly: true
        booking_uuid:
          type: string
          format: uuid
          writeOnly: true
        is_anonymous:
          type: boolean
        answers:
          type: array
          items:
            $ref: '#/components/schemas/ReviewAnswerRequest'
      required:
      - rating
    ReviewDetail:
      type: object
      description: Detailed serializer for individual review
      properties:
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          readOnly: true
          description: Rating from 0.0 to 5.0
        comment:
          type: string
          readOnly: true
        practitioner_name:
          type: string
          readOnly: true
        service_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        user_avatar_url:
          type: string
          readOnly: true
        is_anonymous:
          type: boolean
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
        helpful_votes:
          type: integer
          readOnly: true
        unhelpful_votes:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        has_response:
          type: string
          readOnly: true
        answers:
          type: array
          items:
            $ref: '#/components/schemas/ReviewAnswer'
          readOnly: true
        practitioner:
          type: string
          readOnly: true
        service:
          type: string
          readOnly: true
        booking:
          type: string
          readOnly: true
        user_vote:
          type: string
          readOnly: true
        net_helpful_votes:
          type: string
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        response_text:
          type: string
          readOnly: true
        response_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    ReviewList:
      type: object
      description: Serializer for listing reviews with minimal data
      properties:
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
          readOnly: true
          description: Rating from 0.0 to 5.0
        comment:
          type: string
          readOnly: true
        practitioner_name:
          type: string
          readOnly: true
        service_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        user_avatar_url:
          type: string
          readOnly: true
        is_anonymous:
          type: boolean
          readOnly: true
        is_verified:
          type: boolean
          readOnly: true
        helpful_votes:
          type: integer
          readOnly: true
        unhelpful_votes:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        has_response:
          type: string
          readOnly: true
    ReviewQuestion:
      type: object
      description: Serializer for review questions
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: string
          maxLength: 255
        description:
          type: string
        is_required:
          type: boolean
        question_type:
          $ref: '#/components/schemas/QuestionTypeEnum'
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
        applies_to:
          $ref: '#/components/schemas/AppliesToEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - question
      - question_type
    ReviewQuestionRequest:
      type: object
      description: Serializer for review questions
      properties:
        question:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        is_required:
          type: boolean
        question_type:
          $ref: '#/components/schemas/QuestionTypeEnum'
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
        applies_to:
          $ref: '#/components/schemas/AppliesToEnum'
      required:
      - question
      - question_type
    ReviewResponse:
      type: object
      description: Serializer for practitioner responses to reviews
      properties:
        response_text:
          type: string
          maxLength: 2000
      required:
      - response_text
    ReviewResponseRequest:
      type: object
      description: Serializer for practitioner responses to reviews
      properties:
        response_text:
          type: string
          minLength: 1
          maxLength: 2000
      required:
      - response_text
    ReviewStatistics:
      type: object
      description: Serializer for review statistics
      properties:
        total_reviews:
          type: integer
        average_rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,2})?$
        rating_distribution:
          type: object
          additionalProperties:
            type: integer
        verified_reviews:
          type: integer
        total_helpful_votes:
          type: integer
        reviews_last_30_days:
          type: integer
        reviews_last_90_days:
          type: integer
        service_ratings:
          type: array
          items:
            type: object
            additionalProperties: {}
      required:
      - average_rating
      - rating_distribution
      - reviews_last_30_days
      - reviews_last_90_days
      - total_helpful_votes
      - total_reviews
      - verified_reviews
    ReviewUpdate:
      type: object
      description: Serializer for updating reviews (limited fields)
      properties:
        comment:
          type: string
        is_anonymous:
          type: boolean
    ReviewUpdateRequest:
      type: object
      description: Serializer for updating reviews (limited fields)
      properties:
        comment:
          type: string
        is_anonymous:
          type: boolean
    Schedule:
      type: object
      description: Serializer for practitioner schedules
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of this schedule
          maxLength: 100
        description:
          type: string
          nullable: true
          description: Description of this schedule
        timezone:
          allOf:
          - $ref: '#/components/schemas/TimezoneEnum'
          description: |-
            Timezone for this schedule

            * `Africa/Abidjan` - Africa/Abidjan
            * `Africa/Accra` - Africa/Accra
            * `Africa/Addis_Ababa` - Africa/Addis_Ababa
            * `Africa/Algiers` - Africa/Algiers
            * `Africa/Asmara` - Africa/Asmara
            * `Africa/Bamako` - Africa/Bamako
            * `Africa/Bangui` - Africa/Bangui
            * `Africa/Banjul` - Africa/Banjul
            * `Africa/Bissau` - Africa/Bissau
            * `Africa/Blantyre` - Africa/Blantyre
            * `Africa/Brazzaville` - Africa/Brazzaville
            * `Africa/Bujumbura` - Africa/Bujumbura
            * `Africa/Cairo` - Africa/Cairo
            * `Africa/Casablanca` - Africa/Casablanca
            * `Africa/Ceuta` - Africa/Ceuta
            * `Africa/Conakry` - Africa/Conakry
            * `Africa/Dakar` - Africa/Dakar
            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
            * `Africa/Djibouti` - Africa/Djibouti
            * `Africa/Douala` - Africa/Douala
            * `Africa/El_Aaiun` - Africa/El_Aaiun
            * `Africa/Freetown` - Africa/Freetown
            * `Africa/Gaborone` - Africa/Gaborone
            * `Africa/Harare` - Africa/Harare
            * `Africa/Johannesburg` - Africa/Johannesburg
            * `Africa/Juba` - Africa/Juba
            * `Africa/Kampala` - Africa/Kampala
            * `Africa/Khartoum` - Africa/Khartoum
            * `Africa/Kigali` - Africa/Kigali
            * `Africa/Kinshasa` - Africa/Kinshasa
            * `Africa/Lagos` - Africa/Lagos
            * `Africa/Libreville` - Africa/Libreville
            * `Africa/Lome` - Africa/Lome
            * `Africa/Luanda` - Africa/Luanda
            * `Africa/Lubumbashi` - Africa/Lubumbashi
            * `Africa/Lusaka` - Africa/Lusaka
            * `Africa/Malabo` - Africa/Malabo
            * `Africa/Maputo` - Africa/Maputo
            * `Africa/Maseru` - Africa/Maseru
            * `Africa/Mbabane` - Africa/Mbabane
            * `Africa/Mogadishu` - Africa/Mogadishu
            * `Africa/Monrovia` - Africa/Monrovia
            * `Africa/Nairobi` - Africa/Nairobi
            * `Africa/Ndjamena` - Africa/Ndjamena
            * `Africa/Niamey` - Africa/Niamey
            * `Africa/Nouakchott` - Africa/Nouakchott
            * `Africa/Ouagadougou` - Africa/Ouagadougou
            * `Africa/Porto-Novo` - Africa/Porto-Novo
            * `Africa/Sao_Tome` - Africa/Sao_Tome
            * `Africa/Tripoli` - Africa/Tripoli
            * `Africa/Tunis` - Africa/Tunis
            * `Africa/Windhoek` - Africa/Windhoek
            * `America/Adak` - America/Adak
            * `America/Anchorage` - America/Anchorage
            * `America/Anguilla` - America/Anguilla
            * `America/Antigua` - America/Antigua
            * `America/Araguaina` - America/Araguaina
            * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
            * `America/Argentina/Catamarca` - America/Argentina/Catamarca
            * `America/Argentina/Cordoba` - America/Argentina/Cordoba
            * `America/Argentina/Jujuy` - America/Argentina/Jujuy
            * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
            * `America/Argentina/Mendoza` - America/Argentina/Mendoza
            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
            * `America/Argentina/Salta` - America/Argentina/Salta
            * `America/Argentina/San_Juan` - America/Argentina/San_Juan
            * `America/Argentina/San_Luis` - America/Argentina/San_Luis
            * `America/Argentina/Tucuman` - America/Argentina/Tucuman
            * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
            * `America/Aruba` - America/Aruba
            * `America/Asuncion` - America/Asuncion
            * `America/Atikokan` - America/Atikokan
            * `America/Bahia` - America/Bahia
            * `America/Bahia_Banderas` - America/Bahia_Banderas
            * `America/Barbados` - America/Barbados
            * `America/Belem` - America/Belem
            * `America/Belize` - America/Belize
            * `America/Blanc-Sablon` - America/Blanc-Sablon
            * `America/Boa_Vista` - America/Boa_Vista
            * `America/Bogota` - America/Bogota
            * `America/Boise` - America/Boise
            * `America/Cambridge_Bay` - America/Cambridge_Bay
            * `America/Campo_Grande` - America/Campo_Grande
            * `America/Cancun` - America/Cancun
            * `America/Caracas` - America/Caracas
            * `America/Cayenne` - America/Cayenne
            * `America/Cayman` - America/Cayman
            * `America/Chicago` - America/Chicago
            * `America/Chihuahua` - America/Chihuahua
            * `America/Ciudad_Juarez` - America/Ciudad_Juarez
            * `America/Costa_Rica` - America/Costa_Rica
            * `America/Creston` - America/Creston
            * `America/Cuiaba` - America/Cuiaba
            * `America/Curacao` - America/Curacao
            * `America/Danmarkshavn` - America/Danmarkshavn
            * `America/Dawson` - America/Dawson
            * `America/Dawson_Creek` - America/Dawson_Creek
            * `America/Denver` - America/Denver
            * `America/Detroit` - America/Detroit
            * `America/Dominica` - America/Dominica
            * `America/Edmonton` - America/Edmonton
            * `America/Eirunepe` - America/Eirunepe
            * `America/El_Salvador` - America/El_Salvador
            * `America/Fort_Nelson` - America/Fort_Nelson
            * `America/Fortaleza` - America/Fortaleza
            * `America/Glace_Bay` - America/Glace_Bay
            * `America/Goose_Bay` - America/Goose_Bay
            * `America/Grand_Turk` - America/Grand_Turk
            * `America/Grenada` - America/Grenada
            * `America/Guadeloupe` - America/Guadeloupe
            * `America/Guatemala` - America/Guatemala
            * `America/Guayaquil` - America/Guayaquil
            * `America/Guyana` - America/Guyana
            * `America/Halifax` - America/Halifax
            * `America/Havana` - America/Havana
            * `America/Hermosillo` - America/Hermosillo
            * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
            * `America/Indiana/Knox` - America/Indiana/Knox
            * `America/Indiana/Marengo` - America/Indiana/Marengo
            * `America/Indiana/Petersburg` - America/Indiana/Petersburg
            * `America/Indiana/Tell_City` - America/Indiana/Tell_City
            * `America/Indiana/Vevay` - America/Indiana/Vevay
            * `America/Indiana/Vincennes` - America/Indiana/Vincennes
            * `America/Indiana/Winamac` - America/Indiana/Winamac
            * `America/Inuvik` - America/Inuvik
            * `America/Iqaluit` - America/Iqaluit
            * `America/Jamaica` - America/Jamaica
            * `America/Juneau` - America/Juneau
            * `America/Kentucky/Louisville` - America/Kentucky/Louisville
            * `America/Kentucky/Monticello` - America/Kentucky/Monticello
            * `America/Kralendijk` - America/Kralendijk
            * `America/La_Paz` - America/La_Paz
            * `America/Lima` - America/Lima
            * `America/Los_Angeles` - America/Los_Angeles
            * `America/Lower_Princes` - America/Lower_Princes
            * `America/Maceio` - America/Maceio
            * `America/Managua` - America/Managua
            * `America/Manaus` - America/Manaus
            * `America/Marigot` - America/Marigot
            * `America/Martinique` - America/Martinique
            * `America/Matamoros` - America/Matamoros
            * `America/Mazatlan` - America/Mazatlan
            * `America/Menominee` - America/Menominee
            * `America/Merida` - America/Merida
            * `America/Metlakatla` - America/Metlakatla
            * `America/Mexico_City` - America/Mexico_City
            * `America/Miquelon` - America/Miquelon
            * `America/Moncton` - America/Moncton
            * `America/Monterrey` - America/Monterrey
            * `America/Montevideo` - America/Montevideo
            * `America/Montserrat` - America/Montserrat
            * `America/Nassau` - America/Nassau
            * `America/New_York` - America/New_York
            * `America/Nome` - America/Nome
            * `America/Noronha` - America/Noronha
            * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
            * `America/North_Dakota/Center` - America/North_Dakota/Center
            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
            * `America/Nuuk` - America/Nuuk
            * `America/Ojinaga` - America/Ojinaga
            * `America/Panama` - America/Panama
            * `America/Paramaribo` - America/Paramaribo
            * `America/Phoenix` - America/Phoenix
            * `America/Port-au-Prince` - America/Port-au-Prince
            * `America/Port_of_Spain` - America/Port_of_Spain
            * `America/Porto_Velho` - America/Porto_Velho
            * `America/Puerto_Rico` - America/Puerto_Rico
            * `America/Punta_Arenas` - America/Punta_Arenas
            * `America/Rankin_Inlet` - America/Rankin_Inlet
            * `America/Recife` - America/Recife
            * `America/Regina` - America/Regina
            * `America/Resolute` - America/Resolute
            * `America/Rio_Branco` - America/Rio_Branco
            * `America/Santarem` - America/Santarem
            * `America/Santiago` - America/Santiago
            * `America/Santo_Domingo` - America/Santo_Domingo
            * `America/Sao_Paulo` - America/Sao_Paulo
            * `America/Scoresbysund` - America/Scoresbysund
            * `America/Sitka` - America/Sitka
            * `America/St_Barthelemy` - America/St_Barthelemy
            * `America/St_Johns` - America/St_Johns
            * `America/St_Kitts` - America/St_Kitts
            * `America/St_Lucia` - America/St_Lucia
            * `America/St_Thomas` - America/St_Thomas
            * `America/St_Vincent` - America/St_Vincent
            * `America/Swift_Current` - America/Swift_Current
            * `America/Tegucigalpa` - America/Tegucigalpa
            * `America/Thule` - America/Thule
            * `America/Tijuana` - America/Tijuana
            * `America/Toronto` - America/Toronto
            * `America/Tortola` - America/Tortola
            * `America/Vancouver` - America/Vancouver
            * `America/Whitehorse` - America/Whitehorse
            * `America/Winnipeg` - America/Winnipeg
            * `America/Yakutat` - America/Yakutat
            * `Antarctica/Casey` - Antarctica/Casey
            * `Antarctica/Davis` - Antarctica/Davis
            * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
            * `Antarctica/Macquarie` - Antarctica/Macquarie
            * `Antarctica/Mawson` - Antarctica/Mawson
            * `Antarctica/McMurdo` - Antarctica/McMurdo
            * `Antarctica/Palmer` - Antarctica/Palmer
            * `Antarctica/Rothera` - Antarctica/Rothera
            * `Antarctica/Syowa` - Antarctica/Syowa
            * `Antarctica/Troll` - Antarctica/Troll
            * `Antarctica/Vostok` - Antarctica/Vostok
            * `Arctic/Longyearbyen` - Arctic/Longyearbyen
            * `Asia/Aden` - Asia/Aden
            * `Asia/Almaty` - Asia/Almaty
            * `Asia/Amman` - Asia/Amman
            * `Asia/Anadyr` - Asia/Anadyr
            * `Asia/Aqtau` - Asia/Aqtau
            * `Asia/Aqtobe` - Asia/Aqtobe
            * `Asia/Ashgabat` - Asia/Ashgabat
            * `Asia/Atyrau` - Asia/Atyrau
            * `Asia/Baghdad` - Asia/Baghdad
            * `Asia/Bahrain` - Asia/Bahrain
            * `Asia/Baku` - Asia/Baku
            * `Asia/Bangkok` - Asia/Bangkok
            * `Asia/Barnaul` - Asia/Barnaul
            * `Asia/Beirut` - Asia/Beirut
            * `Asia/Bishkek` - Asia/Bishkek
            * `Asia/Brunei` - Asia/Brunei
            * `Asia/Chita` - Asia/Chita
            * `Asia/Choibalsan` - Asia/Choibalsan
            * `Asia/Colombo` - Asia/Colombo
            * `Asia/Damascus` - Asia/Damascus
            * `Asia/Dhaka` - Asia/Dhaka
            * `Asia/Dili` - Asia/Dili
            * `Asia/Dubai` - Asia/Dubai
            * `Asia/Dushanbe` - Asia/Dushanbe
            * `Asia/Famagusta` - Asia/Famagusta
            * `Asia/Gaza` - Asia/Gaza
            * `Asia/Hebron` - Asia/Hebron
            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
            * `Asia/Hong_Kong` - Asia/Hong_Kong
            * `Asia/Hovd` - Asia/Hovd
            * `Asia/Irkutsk` - Asia/Irkutsk
            * `Asia/Jakarta` - Asia/Jakarta
            * `Asia/Jayapura` - Asia/Jayapura
            * `Asia/Jerusalem` - Asia/Jerusalem
            * `Asia/Kabul` - Asia/Kabul
            * `Asia/Kamchatka` - Asia/Kamchatka
            * `Asia/Karachi` - Asia/Karachi
            * `Asia/Kathmandu` - Asia/Kathmandu
            * `Asia/Khandyga` - Asia/Khandyga
            * `Asia/Kolkata` - Asia/Kolkata
            * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
            * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
            * `Asia/Kuching` - Asia/Kuching
            * `Asia/Kuwait` - Asia/Kuwait
            * `Asia/Macau` - Asia/Macau
            * `Asia/Magadan` - Asia/Magadan
            * `Asia/Makassar` - Asia/Makassar
            * `Asia/Manila` - Asia/Manila
            * `Asia/Muscat` - Asia/Muscat
            * `Asia/Nicosia` - Asia/Nicosia
            * `Asia/Novokuznetsk` - Asia/Novokuznetsk
            * `Asia/Novosibirsk` - Asia/Novosibirsk
            * `Asia/Omsk` - Asia/Omsk
            * `Asia/Oral` - Asia/Oral
            * `Asia/Phnom_Penh` - Asia/Phnom_Penh
            * `Asia/Pontianak` - Asia/Pontianak
            * `Asia/Pyongyang` - Asia/Pyongyang
            * `Asia/Qatar` - Asia/Qatar
            * `Asia/Qostanay` - Asia/Qostanay
            * `Asia/Qyzylorda` - Asia/Qyzylorda
            * `Asia/Riyadh` - Asia/Riyadh
            * `Asia/Sakhalin` - Asia/Sakhalin
            * `Asia/Samarkand` - Asia/Samarkand
            * `Asia/Seoul` - Asia/Seoul
            * `Asia/Shanghai` - Asia/Shanghai
            * `Asia/Singapore` - Asia/Singapore
            * `Asia/Srednekolymsk` - Asia/Srednekolymsk
            * `Asia/Taipei` - Asia/Taipei
            * `Asia/Tashkent` - Asia/Tashkent
            * `Asia/Tbilisi` - Asia/Tbilisi
            * `Asia/Tehran` - Asia/Tehran
            * `Asia/Thimphu` - Asia/Thimphu
            * `Asia/Tokyo` - Asia/Tokyo
            * `Asia/Tomsk` - Asia/Tomsk
            * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
            * `Asia/Urumqi` - Asia/Urumqi
            * `Asia/Ust-Nera` - Asia/Ust-Nera
            * `Asia/Vientiane` - Asia/Vientiane
            * `Asia/Vladivostok` - Asia/Vladivostok
            * `Asia/Yakutsk` - Asia/Yakutsk
            * `Asia/Yangon` - Asia/Yangon
            * `Asia/Yekaterinburg` - Asia/Yekaterinburg
            * `Asia/Yerevan` - Asia/Yerevan
            * `Atlantic/Azores` - Atlantic/Azores
            * `Atlantic/Bermuda` - Atlantic/Bermuda
            * `Atlantic/Canary` - Atlantic/Canary
            * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
            * `Atlantic/Faroe` - Atlantic/Faroe
            * `Atlantic/Madeira` - Atlantic/Madeira
            * `Atlantic/Reykjavik` - Atlantic/Reykjavik
            * `Atlantic/South_Georgia` - Atlantic/South_Georgia
            * `Atlantic/St_Helena` - Atlantic/St_Helena
            * `Atlantic/Stanley` - Atlantic/Stanley
            * `Australia/Adelaide` - Australia/Adelaide
            * `Australia/Brisbane` - Australia/Brisbane
            * `Australia/Broken_Hill` - Australia/Broken_Hill
            * `Australia/Darwin` - Australia/Darwin
            * `Australia/Eucla` - Australia/Eucla
            * `Australia/Hobart` - Australia/Hobart
            * `Australia/Lindeman` - Australia/Lindeman
            * `Australia/Lord_Howe` - Australia/Lord_Howe
            * `Australia/Melbourne` - Australia/Melbourne
            * `Australia/Perth` - Australia/Perth
            * `Australia/Sydney` - Australia/Sydney
            * `Canada/Atlantic` - Canada/Atlantic
            * `Canada/Central` - Canada/Central
            * `Canada/Eastern` - Canada/Eastern
            * `Canada/Mountain` - Canada/Mountain
            * `Canada/Newfoundland` - Canada/Newfoundland
            * `Canada/Pacific` - Canada/Pacific
            * `Europe/Amsterdam` - Europe/Amsterdam
            * `Europe/Andorra` - Europe/Andorra
            * `Europe/Astrakhan` - Europe/Astrakhan
            * `Europe/Athens` - Europe/Athens
            * `Europe/Belgrade` - Europe/Belgrade
            * `Europe/Berlin` - Europe/Berlin
            * `Europe/Bratislava` - Europe/Bratislava
            * `Europe/Brussels` - Europe/Brussels
            * `Europe/Bucharest` - Europe/Bucharest
            * `Europe/Budapest` - Europe/Budapest
            * `Europe/Busingen` - Europe/Busingen
            * `Europe/Chisinau` - Europe/Chisinau
            * `Europe/Copenhagen` - Europe/Copenhagen
            * `Europe/Dublin` - Europe/Dublin
            * `Europe/Gibraltar` - Europe/Gibraltar
            * `Europe/Guernsey` - Europe/Guernsey
            * `Europe/Helsinki` - Europe/Helsinki
            * `Europe/Isle_of_Man` - Europe/Isle_of_Man
            * `Europe/Istanbul` - Europe/Istanbul
            * `Europe/Jersey` - Europe/Jersey
            * `Europe/Kaliningrad` - Europe/Kaliningrad
            * `Europe/Kirov` - Europe/Kirov
            * `Europe/Kyiv` - Europe/Kyiv
            * `Europe/Lisbon` - Europe/Lisbon
            * `Europe/Ljubljana` - Europe/Ljubljana
            * `Europe/London` - Europe/London
            * `Europe/Luxembourg` - Europe/Luxembourg
            * `Europe/Madrid` - Europe/Madrid
            * `Europe/Malta` - Europe/Malta
            * `Europe/Mariehamn` - Europe/Mariehamn
            * `Europe/Minsk` - Europe/Minsk
            * `Europe/Monaco` - Europe/Monaco
            * `Europe/Moscow` - Europe/Moscow
            * `Europe/Oslo` - Europe/Oslo
            * `Europe/Paris` - Europe/Paris
            * `Europe/Podgorica` - Europe/Podgorica
            * `Europe/Prague` - Europe/Prague
            * `Europe/Riga` - Europe/Riga
            * `Europe/Rome` - Europe/Rome
            * `Europe/Samara` - Europe/Samara
            * `Europe/San_Marino` - Europe/San_Marino
            * `Europe/Sarajevo` - Europe/Sarajevo
            * `Europe/Saratov` - Europe/Saratov
            * `Europe/Simferopol` - Europe/Simferopol
            * `Europe/Skopje` - Europe/Skopje
            * `Europe/Sofia` - Europe/Sofia
            * `Europe/Stockholm` - Europe/Stockholm
            * `Europe/Tallinn` - Europe/Tallinn
            * `Europe/Tirane` - Europe/Tirane
            * `Europe/Ulyanovsk` - Europe/Ulyanovsk
            * `Europe/Vaduz` - Europe/Vaduz
            * `Europe/Vatican` - Europe/Vatican
            * `Europe/Vienna` - Europe/Vienna
            * `Europe/Vilnius` - Europe/Vilnius
            * `Europe/Volgograd` - Europe/Volgograd
            * `Europe/Warsaw` - Europe/Warsaw
            * `Europe/Zagreb` - Europe/Zagreb
            * `Europe/Zurich` - Europe/Zurich
            * `GMT` - GMT
            * `Indian/Antananarivo` - Indian/Antananarivo
            * `Indian/Chagos` - Indian/Chagos
            * `Indian/Christmas` - Indian/Christmas
            * `Indian/Cocos` - Indian/Cocos
            * `Indian/Comoro` - Indian/Comoro
            * `Indian/Kerguelen` - Indian/Kerguelen
            * `Indian/Mahe` - Indian/Mahe
            * `Indian/Maldives` - Indian/Maldives
            * `Indian/Mauritius` - Indian/Mauritius
            * `Indian/Mayotte` - Indian/Mayotte
            * `Indian/Reunion` - Indian/Reunion
            * `Pacific/Apia` - Pacific/Apia
            * `Pacific/Auckland` - Pacific/Auckland
            * `Pacific/Bougainville` - Pacific/Bougainville
            * `Pacific/Chatham` - Pacific/Chatham
            * `Pacific/Chuuk` - Pacific/Chuuk
            * `Pacific/Easter` - Pacific/Easter
            * `Pacific/Efate` - Pacific/Efate
            * `Pacific/Fakaofo` - Pacific/Fakaofo
            * `Pacific/Fiji` - Pacific/Fiji
            * `Pacific/Funafuti` - Pacific/Funafuti
            * `Pacific/Galapagos` - Pacific/Galapagos
            * `Pacific/Gambier` - Pacific/Gambier
            * `Pacific/Guadalcanal` - Pacific/Guadalcanal
            * `Pacific/Guam` - Pacific/Guam
            * `Pacific/Honolulu` - Pacific/Honolulu
            * `Pacific/Kanton` - Pacific/Kanton
            * `Pacific/Kiritimati` - Pacific/Kiritimati
            * `Pacific/Kosrae` - Pacific/Kosrae
            * `Pacific/Kwajalein` - Pacific/Kwajalein
            * `Pacific/Majuro` - Pacific/Majuro
            * `Pacific/Marquesas` - Pacific/Marquesas
            * `Pacific/Midway` - Pacific/Midway
            * `Pacific/Nauru` - Pacific/Nauru
            * `Pacific/Niue` - Pacific/Niue
            * `Pacific/Norfolk` - Pacific/Norfolk
            * `Pacific/Noumea` - Pacific/Noumea
            * `Pacific/Pago_Pago` - Pacific/Pago_Pago
            * `Pacific/Palau` - Pacific/Palau
            * `Pacific/Pitcairn` - Pacific/Pitcairn
            * `Pacific/Pohnpei` - Pacific/Pohnpei
            * `Pacific/Port_Moresby` - Pacific/Port_Moresby
            * `Pacific/Rarotonga` - Pacific/Rarotonga
            * `Pacific/Saipan` - Pacific/Saipan
            * `Pacific/Tahiti` - Pacific/Tahiti
            * `Pacific/Tarawa` - Pacific/Tarawa
            * `Pacific/Tongatapu` - Pacific/Tongatapu
            * `Pacific/Wake` - Pacific/Wake
            * `Pacific/Wallis` - Pacific/Wallis
            * `US/Alaska` - US/Alaska
            * `US/Arizona` - US/Arizona
            * `US/Central` - US/Central
            * `US/Eastern` - US/Eastern
            * `US/Hawaii` - US/Hawaii
            * `US/Mountain` - US/Mountain
            * `US/Pacific` - US/Pacific
            * `UTC` - UTC
        is_default:
          type: boolean
          description: Whether this is the default schedule
        is_active:
          type: boolean
        time_slots:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleTimeSlot'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
    ScheduleCreate:
      type: object
      description: Serializer for creating schedules with time slots
      properties:
        name:
          type: string
          description: Name of this schedule
          maxLength: 100
        description:
          type: string
          nullable: true
          description: Description of this schedule
        timezone:
          allOf:
          - $ref: '#/components/schemas/TimezoneEnum'
          description: |-
            Timezone for this schedule

            * `Africa/Abidjan` - Africa/Abidjan
            * `Africa/Accra` - Africa/Accra
            * `Africa/Addis_Ababa` - Africa/Addis_Ababa
            * `Africa/Algiers` - Africa/Algiers
            * `Africa/Asmara` - Africa/Asmara
            * `Africa/Bamako` - Africa/Bamako
            * `Africa/Bangui` - Africa/Bangui
            * `Africa/Banjul` - Africa/Banjul
            * `Africa/Bissau` - Africa/Bissau
            * `Africa/Blantyre` - Africa/Blantyre
            * `Africa/Brazzaville` - Africa/Brazzaville
            * `Africa/Bujumbura` - Africa/Bujumbura
            * `Africa/Cairo` - Africa/Cairo
            * `Africa/Casablanca` - Africa/Casablanca
            * `Africa/Ceuta` - Africa/Ceuta
            * `Africa/Conakry` - Africa/Conakry
            * `Africa/Dakar` - Africa/Dakar
            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
            * `Africa/Djibouti` - Africa/Djibouti
            * `Africa/Douala` - Africa/Douala
            * `Africa/El_Aaiun` - Africa/El_Aaiun
            * `Africa/Freetown` - Africa/Freetown
            * `Africa/Gaborone` - Africa/Gaborone
            * `Africa/Harare` - Africa/Harare
            * `Africa/Johannesburg` - Africa/Johannesburg
            * `Africa/Juba` - Africa/Juba
            * `Africa/Kampala` - Africa/Kampala
            * `Africa/Khartoum` - Africa/Khartoum
            * `Africa/Kigali` - Africa/Kigali
            * `Africa/Kinshasa` - Africa/Kinshasa
            * `Africa/Lagos` - Africa/Lagos
            * `Africa/Libreville` - Africa/Libreville
            * `Africa/Lome` - Africa/Lome
            * `Africa/Luanda` - Africa/Luanda
            * `Africa/Lubumbashi` - Africa/Lubumbashi
            * `Africa/Lusaka` - Africa/Lusaka
            * `Africa/Malabo` - Africa/Malabo
            * `Africa/Maputo` - Africa/Maputo
            * `Africa/Maseru` - Africa/Maseru
            * `Africa/Mbabane` - Africa/Mbabane
            * `Africa/Mogadishu` - Africa/Mogadishu
            * `Africa/Monrovia` - Africa/Monrovia
            * `Africa/Nairobi` - Africa/Nairobi
            * `Africa/Ndjamena` - Africa/Ndjamena
            * `Africa/Niamey` - Africa/Niamey
            * `Africa/Nouakchott` - Africa/Nouakchott
            * `Africa/Ouagadougou` - Africa/Ouagadougou
            * `Africa/Porto-Novo` - Africa/Porto-Novo
            * `Africa/Sao_Tome` - Africa/Sao_Tome
            * `Africa/Tripoli` - Africa/Tripoli
            * `Africa/Tunis` - Africa/Tunis
            * `Africa/Windhoek` - Africa/Windhoek
            * `America/Adak` - America/Adak
            * `America/Anchorage` - America/Anchorage
            * `America/Anguilla` - America/Anguilla
            * `America/Antigua` - America/Antigua
            * `America/Araguaina` - America/Araguaina
            * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
            * `America/Argentina/Catamarca` - America/Argentina/Catamarca
            * `America/Argentina/Cordoba` - America/Argentina/Cordoba
            * `America/Argentina/Jujuy` - America/Argentina/Jujuy
            * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
            * `America/Argentina/Mendoza` - America/Argentina/Mendoza
            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
            * `America/Argentina/Salta` - America/Argentina/Salta
            * `America/Argentina/San_Juan` - America/Argentina/San_Juan
            * `America/Argentina/San_Luis` - America/Argentina/San_Luis
            * `America/Argentina/Tucuman` - America/Argentina/Tucuman
            * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
            * `America/Aruba` - America/Aruba
            * `America/Asuncion` - America/Asuncion
            * `America/Atikokan` - America/Atikokan
            * `America/Bahia` - America/Bahia
            * `America/Bahia_Banderas` - America/Bahia_Banderas
            * `America/Barbados` - America/Barbados
            * `America/Belem` - America/Belem
            * `America/Belize` - America/Belize
            * `America/Blanc-Sablon` - America/Blanc-Sablon
            * `America/Boa_Vista` - America/Boa_Vista
            * `America/Bogota` - America/Bogota
            * `America/Boise` - America/Boise
            * `America/Cambridge_Bay` - America/Cambridge_Bay
            * `America/Campo_Grande` - America/Campo_Grande
            * `America/Cancun` - America/Cancun
            * `America/Caracas` - America/Caracas
            * `America/Cayenne` - America/Cayenne
            * `America/Cayman` - America/Cayman
            * `America/Chicago` - America/Chicago
            * `America/Chihuahua` - America/Chihuahua
            * `America/Ciudad_Juarez` - America/Ciudad_Juarez
            * `America/Costa_Rica` - America/Costa_Rica
            * `America/Creston` - America/Creston
            * `America/Cuiaba` - America/Cuiaba
            * `America/Curacao` - America/Curacao
            * `America/Danmarkshavn` - America/Danmarkshavn
            * `America/Dawson` - America/Dawson
            * `America/Dawson_Creek` - America/Dawson_Creek
            * `America/Denver` - America/Denver
            * `America/Detroit` - America/Detroit
            * `America/Dominica` - America/Dominica
            * `America/Edmonton` - America/Edmonton
            * `America/Eirunepe` - America/Eirunepe
            * `America/El_Salvador` - America/El_Salvador
            * `America/Fort_Nelson` - America/Fort_Nelson
            * `America/Fortaleza` - America/Fortaleza
            * `America/Glace_Bay` - America/Glace_Bay
            * `America/Goose_Bay` - America/Goose_Bay
            * `America/Grand_Turk` - America/Grand_Turk
            * `America/Grenada` - America/Grenada
            * `America/Guadeloupe` - America/Guadeloupe
            * `America/Guatemala` - America/Guatemala
            * `America/Guayaquil` - America/Guayaquil
            * `America/Guyana` - America/Guyana
            * `America/Halifax` - America/Halifax
            * `America/Havana` - America/Havana
            * `America/Hermosillo` - America/Hermosillo
            * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
            * `America/Indiana/Knox` - America/Indiana/Knox
            * `America/Indiana/Marengo` - America/Indiana/Marengo
            * `America/Indiana/Petersburg` - America/Indiana/Petersburg
            * `America/Indiana/Tell_City` - America/Indiana/Tell_City
            * `America/Indiana/Vevay` - America/Indiana/Vevay
            * `America/Indiana/Vincennes` - America/Indiana/Vincennes
            * `America/Indiana/Winamac` - America/Indiana/Winamac
            * `America/Inuvik` - America/Inuvik
            * `America/Iqaluit` - America/Iqaluit
            * `America/Jamaica` - America/Jamaica
            * `America/Juneau` - America/Juneau
            * `America/Kentucky/Louisville` - America/Kentucky/Louisville
            * `America/Kentucky/Monticello` - America/Kentucky/Monticello
            * `America/Kralendijk` - America/Kralendijk
            * `America/La_Paz` - America/La_Paz
            * `America/Lima` - America/Lima
            * `America/Los_Angeles` - America/Los_Angeles
            * `America/Lower_Princes` - America/Lower_Princes
            * `America/Maceio` - America/Maceio
            * `America/Managua` - America/Managua
            * `America/Manaus` - America/Manaus
            * `America/Marigot` - America/Marigot
            * `America/Martinique` - America/Martinique
            * `America/Matamoros` - America/Matamoros
            * `America/Mazatlan` - America/Mazatlan
            * `America/Menominee` - America/Menominee
            * `America/Merida` - America/Merida
            * `America/Metlakatla` - America/Metlakatla
            * `America/Mexico_City` - America/Mexico_City
            * `America/Miquelon` - America/Miquelon
            * `America/Moncton` - America/Moncton
            * `America/Monterrey` - America/Monterrey
            * `America/Montevideo` - America/Montevideo
            * `America/Montserrat` - America/Montserrat
            * `America/Nassau` - America/Nassau
            * `America/New_York` - America/New_York
            * `America/Nome` - America/Nome
            * `America/Noronha` - America/Noronha
            * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
            * `America/North_Dakota/Center` - America/North_Dakota/Center
            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
            * `America/Nuuk` - America/Nuuk
            * `America/Ojinaga` - America/Ojinaga
            * `America/Panama` - America/Panama
            * `America/Paramaribo` - America/Paramaribo
            * `America/Phoenix` - America/Phoenix
            * `America/Port-au-Prince` - America/Port-au-Prince
            * `America/Port_of_Spain` - America/Port_of_Spain
            * `America/Porto_Velho` - America/Porto_Velho
            * `America/Puerto_Rico` - America/Puerto_Rico
            * `America/Punta_Arenas` - America/Punta_Arenas
            * `America/Rankin_Inlet` - America/Rankin_Inlet
            * `America/Recife` - America/Recife
            * `America/Regina` - America/Regina
            * `America/Resolute` - America/Resolute
            * `America/Rio_Branco` - America/Rio_Branco
            * `America/Santarem` - America/Santarem
            * `America/Santiago` - America/Santiago
            * `America/Santo_Domingo` - America/Santo_Domingo
            * `America/Sao_Paulo` - America/Sao_Paulo
            * `America/Scoresbysund` - America/Scoresbysund
            * `America/Sitka` - America/Sitka
            * `America/St_Barthelemy` - America/St_Barthelemy
            * `America/St_Johns` - America/St_Johns
            * `America/St_Kitts` - America/St_Kitts
            * `America/St_Lucia` - America/St_Lucia
            * `America/St_Thomas` - America/St_Thomas
            * `America/St_Vincent` - America/St_Vincent
            * `America/Swift_Current` - America/Swift_Current
            * `America/Tegucigalpa` - America/Tegucigalpa
            * `America/Thule` - America/Thule
            * `America/Tijuana` - America/Tijuana
            * `America/Toronto` - America/Toronto
            * `America/Tortola` - America/Tortola
            * `America/Vancouver` - America/Vancouver
            * `America/Whitehorse` - America/Whitehorse
            * `America/Winnipeg` - America/Winnipeg
            * `America/Yakutat` - America/Yakutat
            * `Antarctica/Casey` - Antarctica/Casey
            * `Antarctica/Davis` - Antarctica/Davis
            * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
            * `Antarctica/Macquarie` - Antarctica/Macquarie
            * `Antarctica/Mawson` - Antarctica/Mawson
            * `Antarctica/McMurdo` - Antarctica/McMurdo
            * `Antarctica/Palmer` - Antarctica/Palmer
            * `Antarctica/Rothera` - Antarctica/Rothera
            * `Antarctica/Syowa` - Antarctica/Syowa
            * `Antarctica/Troll` - Antarctica/Troll
            * `Antarctica/Vostok` - Antarctica/Vostok
            * `Arctic/Longyearbyen` - Arctic/Longyearbyen
            * `Asia/Aden` - Asia/Aden
            * `Asia/Almaty` - Asia/Almaty
            * `Asia/Amman` - Asia/Amman
            * `Asia/Anadyr` - Asia/Anadyr
            * `Asia/Aqtau` - Asia/Aqtau
            * `Asia/Aqtobe` - Asia/Aqtobe
            * `Asia/Ashgabat` - Asia/Ashgabat
            * `Asia/Atyrau` - Asia/Atyrau
            * `Asia/Baghdad` - Asia/Baghdad
            * `Asia/Bahrain` - Asia/Bahrain
            * `Asia/Baku` - Asia/Baku
            * `Asia/Bangkok` - Asia/Bangkok
            * `Asia/Barnaul` - Asia/Barnaul
            * `Asia/Beirut` - Asia/Beirut
            * `Asia/Bishkek` - Asia/Bishkek
            * `Asia/Brunei` - Asia/Brunei
            * `Asia/Chita` - Asia/Chita
            * `Asia/Choibalsan` - Asia/Choibalsan
            * `Asia/Colombo` - Asia/Colombo
            * `Asia/Damascus` - Asia/Damascus
            * `Asia/Dhaka` - Asia/Dhaka
            * `Asia/Dili` - Asia/Dili
            * `Asia/Dubai` - Asia/Dubai
            * `Asia/Dushanbe` - Asia/Dushanbe
            * `Asia/Famagusta` - Asia/Famagusta
            * `Asia/Gaza` - Asia/Gaza
            * `Asia/Hebron` - Asia/Hebron
            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
            * `Asia/Hong_Kong` - Asia/Hong_Kong
            * `Asia/Hovd` - Asia/Hovd
            * `Asia/Irkutsk` - Asia/Irkutsk
            * `Asia/Jakarta` - Asia/Jakarta
            * `Asia/Jayapura` - Asia/Jayapura
            * `Asia/Jerusalem` - Asia/Jerusalem
            * `Asia/Kabul` - Asia/Kabul
            * `Asia/Kamchatka` - Asia/Kamchatka
            * `Asia/Karachi` - Asia/Karachi
            * `Asia/Kathmandu` - Asia/Kathmandu
            * `Asia/Khandyga` - Asia/Khandyga
            * `Asia/Kolkata` - Asia/Kolkata
            * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
            * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
            * `Asia/Kuching` - Asia/Kuching
            * `Asia/Kuwait` - Asia/Kuwait
            * `Asia/Macau` - Asia/Macau
            * `Asia/Magadan` - Asia/Magadan
            * `Asia/Makassar` - Asia/Makassar
            * `Asia/Manila` - Asia/Manila
            * `Asia/Muscat` - Asia/Muscat
            * `Asia/Nicosia` - Asia/Nicosia
            * `Asia/Novokuznetsk` - Asia/Novokuznetsk
            * `Asia/Novosibirsk` - Asia/Novosibirsk
            * `Asia/Omsk` - Asia/Omsk
            * `Asia/Oral` - Asia/Oral
            * `Asia/Phnom_Penh` - Asia/Phnom_Penh
            * `Asia/Pontianak` - Asia/Pontianak
            * `Asia/Pyongyang` - Asia/Pyongyang
            * `Asia/Qatar` - Asia/Qatar
            * `Asia/Qostanay` - Asia/Qostanay
            * `Asia/Qyzylorda` - Asia/Qyzylorda
            * `Asia/Riyadh` - Asia/Riyadh
            * `Asia/Sakhalin` - Asia/Sakhalin
            * `Asia/Samarkand` - Asia/Samarkand
            * `Asia/Seoul` - Asia/Seoul
            * `Asia/Shanghai` - Asia/Shanghai
            * `Asia/Singapore` - Asia/Singapore
            * `Asia/Srednekolymsk` - Asia/Srednekolymsk
            * `Asia/Taipei` - Asia/Taipei
            * `Asia/Tashkent` - Asia/Tashkent
            * `Asia/Tbilisi` - Asia/Tbilisi
            * `Asia/Tehran` - Asia/Tehran
            * `Asia/Thimphu` - Asia/Thimphu
            * `Asia/Tokyo` - Asia/Tokyo
            * `Asia/Tomsk` - Asia/Tomsk
            * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
            * `Asia/Urumqi` - Asia/Urumqi
            * `Asia/Ust-Nera` - Asia/Ust-Nera
            * `Asia/Vientiane` - Asia/Vientiane
            * `Asia/Vladivostok` - Asia/Vladivostok
            * `Asia/Yakutsk` - Asia/Yakutsk
            * `Asia/Yangon` - Asia/Yangon
            * `Asia/Yekaterinburg` - Asia/Yekaterinburg
            * `Asia/Yerevan` - Asia/Yerevan
            * `Atlantic/Azores` - Atlantic/Azores
            * `Atlantic/Bermuda` - Atlantic/Bermuda
            * `Atlantic/Canary` - Atlantic/Canary
            * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
            * `Atlantic/Faroe` - Atlantic/Faroe
            * `Atlantic/Madeira` - Atlantic/Madeira
            * `Atlantic/Reykjavik` - Atlantic/Reykjavik
            * `Atlantic/South_Georgia` - Atlantic/South_Georgia
            * `Atlantic/St_Helena` - Atlantic/St_Helena
            * `Atlantic/Stanley` - Atlantic/Stanley
            * `Australia/Adelaide` - Australia/Adelaide
            * `Australia/Brisbane` - Australia/Brisbane
            * `Australia/Broken_Hill` - Australia/Broken_Hill
            * `Australia/Darwin` - Australia/Darwin
            * `Australia/Eucla` - Australia/Eucla
            * `Australia/Hobart` - Australia/Hobart
            * `Australia/Lindeman` - Australia/Lindeman
            * `Australia/Lord_Howe` - Australia/Lord_Howe
            * `Australia/Melbourne` - Australia/Melbourne
            * `Australia/Perth` - Australia/Perth
            * `Australia/Sydney` - Australia/Sydney
            * `Canada/Atlantic` - Canada/Atlantic
            * `Canada/Central` - Canada/Central
            * `Canada/Eastern` - Canada/Eastern
            * `Canada/Mountain` - Canada/Mountain
            * `Canada/Newfoundland` - Canada/Newfoundland
            * `Canada/Pacific` - Canada/Pacific
            * `Europe/Amsterdam` - Europe/Amsterdam
            * `Europe/Andorra` - Europe/Andorra
            * `Europe/Astrakhan` - Europe/Astrakhan
            * `Europe/Athens` - Europe/Athens
            * `Europe/Belgrade` - Europe/Belgrade
            * `Europe/Berlin` - Europe/Berlin
            * `Europe/Bratislava` - Europe/Bratislava
            * `Europe/Brussels` - Europe/Brussels
            * `Europe/Bucharest` - Europe/Bucharest
            * `Europe/Budapest` - Europe/Budapest
            * `Europe/Busingen` - Europe/Busingen
            * `Europe/Chisinau` - Europe/Chisinau
            * `Europe/Copenhagen` - Europe/Copenhagen
            * `Europe/Dublin` - Europe/Dublin
            * `Europe/Gibraltar` - Europe/Gibraltar
            * `Europe/Guernsey` - Europe/Guernsey
            * `Europe/Helsinki` - Europe/Helsinki
            * `Europe/Isle_of_Man` - Europe/Isle_of_Man
            * `Europe/Istanbul` - Europe/Istanbul
            * `Europe/Jersey` - Europe/Jersey
            * `Europe/Kaliningrad` - Europe/Kaliningrad
            * `Europe/Kirov` - Europe/Kirov
            * `Europe/Kyiv` - Europe/Kyiv
            * `Europe/Lisbon` - Europe/Lisbon
            * `Europe/Ljubljana` - Europe/Ljubljana
            * `Europe/London` - Europe/London
            * `Europe/Luxembourg` - Europe/Luxembourg
            * `Europe/Madrid` - Europe/Madrid
            * `Europe/Malta` - Europe/Malta
            * `Europe/Mariehamn` - Europe/Mariehamn
            * `Europe/Minsk` - Europe/Minsk
            * `Europe/Monaco` - Europe/Monaco
            * `Europe/Moscow` - Europe/Moscow
            * `Europe/Oslo` - Europe/Oslo
            * `Europe/Paris` - Europe/Paris
            * `Europe/Podgorica` - Europe/Podgorica
            * `Europe/Prague` - Europe/Prague
            * `Europe/Riga` - Europe/Riga
            * `Europe/Rome` - Europe/Rome
            * `Europe/Samara` - Europe/Samara
            * `Europe/San_Marino` - Europe/San_Marino
            * `Europe/Sarajevo` - Europe/Sarajevo
            * `Europe/Saratov` - Europe/Saratov
            * `Europe/Simferopol` - Europe/Simferopol
            * `Europe/Skopje` - Europe/Skopje
            * `Europe/Sofia` - Europe/Sofia
            * `Europe/Stockholm` - Europe/Stockholm
            * `Europe/Tallinn` - Europe/Tallinn
            * `Europe/Tirane` - Europe/Tirane
            * `Europe/Ulyanovsk` - Europe/Ulyanovsk
            * `Europe/Vaduz` - Europe/Vaduz
            * `Europe/Vatican` - Europe/Vatican
            * `Europe/Vienna` - Europe/Vienna
            * `Europe/Vilnius` - Europe/Vilnius
            * `Europe/Volgograd` - Europe/Volgograd
            * `Europe/Warsaw` - Europe/Warsaw
            * `Europe/Zagreb` - Europe/Zagreb
            * `Europe/Zurich` - Europe/Zurich
            * `GMT` - GMT
            * `Indian/Antananarivo` - Indian/Antananarivo
            * `Indian/Chagos` - Indian/Chagos
            * `Indian/Christmas` - Indian/Christmas
            * `Indian/Cocos` - Indian/Cocos
            * `Indian/Comoro` - Indian/Comoro
            * `Indian/Kerguelen` - Indian/Kerguelen
            * `Indian/Mahe` - Indian/Mahe
            * `Indian/Maldives` - Indian/Maldives
            * `Indian/Mauritius` - Indian/Mauritius
            * `Indian/Mayotte` - Indian/Mayotte
            * `Indian/Reunion` - Indian/Reunion
            * `Pacific/Apia` - Pacific/Apia
            * `Pacific/Auckland` - Pacific/Auckland
            * `Pacific/Bougainville` - Pacific/Bougainville
            * `Pacific/Chatham` - Pacific/Chatham
            * `Pacific/Chuuk` - Pacific/Chuuk
            * `Pacific/Easter` - Pacific/Easter
            * `Pacific/Efate` - Pacific/Efate
            * `Pacific/Fakaofo` - Pacific/Fakaofo
            * `Pacific/Fiji` - Pacific/Fiji
            * `Pacific/Funafuti` - Pacific/Funafuti
            * `Pacific/Galapagos` - Pacific/Galapagos
            * `Pacific/Gambier` - Pacific/Gambier
            * `Pacific/Guadalcanal` - Pacific/Guadalcanal
            * `Pacific/Guam` - Pacific/Guam
            * `Pacific/Honolulu` - Pacific/Honolulu
            * `Pacific/Kanton` - Pacific/Kanton
            * `Pacific/Kiritimati` - Pacific/Kiritimati
            * `Pacific/Kosrae` - Pacific/Kosrae
            * `Pacific/Kwajalein` - Pacific/Kwajalein
            * `Pacific/Majuro` - Pacific/Majuro
            * `Pacific/Marquesas` - Pacific/Marquesas
            * `Pacific/Midway` - Pacific/Midway
            * `Pacific/Nauru` - Pacific/Nauru
            * `Pacific/Niue` - Pacific/Niue
            * `Pacific/Norfolk` - Pacific/Norfolk
            * `Pacific/Noumea` - Pacific/Noumea
            * `Pacific/Pago_Pago` - Pacific/Pago_Pago
            * `Pacific/Palau` - Pacific/Palau
            * `Pacific/Pitcairn` - Pacific/Pitcairn
            * `Pacific/Pohnpei` - Pacific/Pohnpei
            * `Pacific/Port_Moresby` - Pacific/Port_Moresby
            * `Pacific/Rarotonga` - Pacific/Rarotonga
            * `Pacific/Saipan` - Pacific/Saipan
            * `Pacific/Tahiti` - Pacific/Tahiti
            * `Pacific/Tarawa` - Pacific/Tarawa
            * `Pacific/Tongatapu` - Pacific/Tongatapu
            * `Pacific/Wake` - Pacific/Wake
            * `Pacific/Wallis` - Pacific/Wallis
            * `US/Alaska` - US/Alaska
            * `US/Arizona` - US/Arizona
            * `US/Central` - US/Central
            * `US/Eastern` - US/Eastern
            * `US/Hawaii` - US/Hawaii
            * `US/Mountain` - US/Mountain
            * `US/Pacific` - US/Pacific
            * `UTC` - UTC
        is_default:
          type: boolean
          description: Whether this is the default schedule
        is_active:
          type: boolean
      required:
      - name
    ScheduleCreateRequest:
      type: object
      description: Serializer for creating schedules with time slots
      properties:
        name:
          type: string
          minLength: 1
          description: Name of this schedule
          maxLength: 100
        description:
          type: string
          nullable: true
          description: Description of this schedule
        timezone:
          allOf:
          - $ref: '#/components/schemas/TimezoneEnum'
          description: |-
            Timezone for this schedule

            * `Africa/Abidjan` - Africa/Abidjan
            * `Africa/Accra` - Africa/Accra
            * `Africa/Addis_Ababa` - Africa/Addis_Ababa
            * `Africa/Algiers` - Africa/Algiers
            * `Africa/Asmara` - Africa/Asmara
            * `Africa/Bamako` - Africa/Bamako
            * `Africa/Bangui` - Africa/Bangui
            * `Africa/Banjul` - Africa/Banjul
            * `Africa/Bissau` - Africa/Bissau
            * `Africa/Blantyre` - Africa/Blantyre
            * `Africa/Brazzaville` - Africa/Brazzaville
            * `Africa/Bujumbura` - Africa/Bujumbura
            * `Africa/Cairo` - Africa/Cairo
            * `Africa/Casablanca` - Africa/Casablanca
            * `Africa/Ceuta` - Africa/Ceuta
            * `Africa/Conakry` - Africa/Conakry
            * `Africa/Dakar` - Africa/Dakar
            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
            * `Africa/Djibouti` - Africa/Djibouti
            * `Africa/Douala` - Africa/Douala
            * `Africa/El_Aaiun` - Africa/El_Aaiun
            * `Africa/Freetown` - Africa/Freetown
            * `Africa/Gaborone` - Africa/Gaborone
            * `Africa/Harare` - Africa/Harare
            * `Africa/Johannesburg` - Africa/Johannesburg
            * `Africa/Juba` - Africa/Juba
            * `Africa/Kampala` - Africa/Kampala
            * `Africa/Khartoum` - Africa/Khartoum
            * `Africa/Kigali` - Africa/Kigali
            * `Africa/Kinshasa` - Africa/Kinshasa
            * `Africa/Lagos` - Africa/Lagos
            * `Africa/Libreville` - Africa/Libreville
            * `Africa/Lome` - Africa/Lome
            * `Africa/Luanda` - Africa/Luanda
            * `Africa/Lubumbashi` - Africa/Lubumbashi
            * `Africa/Lusaka` - Africa/Lusaka
            * `Africa/Malabo` - Africa/Malabo
            * `Africa/Maputo` - Africa/Maputo
            * `Africa/Maseru` - Africa/Maseru
            * `Africa/Mbabane` - Africa/Mbabane
            * `Africa/Mogadishu` - Africa/Mogadishu
            * `Africa/Monrovia` - Africa/Monrovia
            * `Africa/Nairobi` - Africa/Nairobi
            * `Africa/Ndjamena` - Africa/Ndjamena
            * `Africa/Niamey` - Africa/Niamey
            * `Africa/Nouakchott` - Africa/Nouakchott
            * `Africa/Ouagadougou` - Africa/Ouagadougou
            * `Africa/Porto-Novo` - Africa/Porto-Novo
            * `Africa/Sao_Tome` - Africa/Sao_Tome
            * `Africa/Tripoli` - Africa/Tripoli
            * `Africa/Tunis` - Africa/Tunis
            * `Africa/Windhoek` - Africa/Windhoek
            * `America/Adak` - America/Adak
            * `America/Anchorage` - America/Anchorage
            * `America/Anguilla` - America/Anguilla
            * `America/Antigua` - America/Antigua
            * `America/Araguaina` - America/Araguaina
            * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
            * `America/Argentina/Catamarca` - America/Argentina/Catamarca
            * `America/Argentina/Cordoba` - America/Argentina/Cordoba
            * `America/Argentina/Jujuy` - America/Argentina/Jujuy
            * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
            * `America/Argentina/Mendoza` - America/Argentina/Mendoza
            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
            * `America/Argentina/Salta` - America/Argentina/Salta
            * `America/Argentina/San_Juan` - America/Argentina/San_Juan
            * `America/Argentina/San_Luis` - America/Argentina/San_Luis
            * `America/Argentina/Tucuman` - America/Argentina/Tucuman
            * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
            * `America/Aruba` - America/Aruba
            * `America/Asuncion` - America/Asuncion
            * `America/Atikokan` - America/Atikokan
            * `America/Bahia` - America/Bahia
            * `America/Bahia_Banderas` - America/Bahia_Banderas
            * `America/Barbados` - America/Barbados
            * `America/Belem` - America/Belem
            * `America/Belize` - America/Belize
            * `America/Blanc-Sablon` - America/Blanc-Sablon
            * `America/Boa_Vista` - America/Boa_Vista
            * `America/Bogota` - America/Bogota
            * `America/Boise` - America/Boise
            * `America/Cambridge_Bay` - America/Cambridge_Bay
            * `America/Campo_Grande` - America/Campo_Grande
            * `America/Cancun` - America/Cancun
            * `America/Caracas` - America/Caracas
            * `America/Cayenne` - America/Cayenne
            * `America/Cayman` - America/Cayman
            * `America/Chicago` - America/Chicago
            * `America/Chihuahua` - America/Chihuahua
            * `America/Ciudad_Juarez` - America/Ciudad_Juarez
            * `America/Costa_Rica` - America/Costa_Rica
            * `America/Creston` - America/Creston
            * `America/Cuiaba` - America/Cuiaba
            * `America/Curacao` - America/Curacao
            * `America/Danmarkshavn` - America/Danmarkshavn
            * `America/Dawson` - America/Dawson
            * `America/Dawson_Creek` - America/Dawson_Creek
            * `America/Denver` - America/Denver
            * `America/Detroit` - America/Detroit
            * `America/Dominica` - America/Dominica
            * `America/Edmonton` - America/Edmonton
            * `America/Eirunepe` - America/Eirunepe
            * `America/El_Salvador` - America/El_Salvador
            * `America/Fort_Nelson` - America/Fort_Nelson
            * `America/Fortaleza` - America/Fortaleza
            * `America/Glace_Bay` - America/Glace_Bay
            * `America/Goose_Bay` - America/Goose_Bay
            * `America/Grand_Turk` - America/Grand_Turk
            * `America/Grenada` - America/Grenada
            * `America/Guadeloupe` - America/Guadeloupe
            * `America/Guatemala` - America/Guatemala
            * `America/Guayaquil` - America/Guayaquil
            * `America/Guyana` - America/Guyana
            * `America/Halifax` - America/Halifax
            * `America/Havana` - America/Havana
            * `America/Hermosillo` - America/Hermosillo
            * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
            * `America/Indiana/Knox` - America/Indiana/Knox
            * `America/Indiana/Marengo` - America/Indiana/Marengo
            * `America/Indiana/Petersburg` - America/Indiana/Petersburg
            * `America/Indiana/Tell_City` - America/Indiana/Tell_City
            * `America/Indiana/Vevay` - America/Indiana/Vevay
            * `America/Indiana/Vincennes` - America/Indiana/Vincennes
            * `America/Indiana/Winamac` - America/Indiana/Winamac
            * `America/Inuvik` - America/Inuvik
            * `America/Iqaluit` - America/Iqaluit
            * `America/Jamaica` - America/Jamaica
            * `America/Juneau` - America/Juneau
            * `America/Kentucky/Louisville` - America/Kentucky/Louisville
            * `America/Kentucky/Monticello` - America/Kentucky/Monticello
            * `America/Kralendijk` - America/Kralendijk
            * `America/La_Paz` - America/La_Paz
            * `America/Lima` - America/Lima
            * `America/Los_Angeles` - America/Los_Angeles
            * `America/Lower_Princes` - America/Lower_Princes
            * `America/Maceio` - America/Maceio
            * `America/Managua` - America/Managua
            * `America/Manaus` - America/Manaus
            * `America/Marigot` - America/Marigot
            * `America/Martinique` - America/Martinique
            * `America/Matamoros` - America/Matamoros
            * `America/Mazatlan` - America/Mazatlan
            * `America/Menominee` - America/Menominee
            * `America/Merida` - America/Merida
            * `America/Metlakatla` - America/Metlakatla
            * `America/Mexico_City` - America/Mexico_City
            * `America/Miquelon` - America/Miquelon
            * `America/Moncton` - America/Moncton
            * `America/Monterrey` - America/Monterrey
            * `America/Montevideo` - America/Montevideo
            * `America/Montserrat` - America/Montserrat
            * `America/Nassau` - America/Nassau
            * `America/New_York` - America/New_York
            * `America/Nome` - America/Nome
            * `America/Noronha` - America/Noronha
            * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
            * `America/North_Dakota/Center` - America/North_Dakota/Center
            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
            * `America/Nuuk` - America/Nuuk
            * `America/Ojinaga` - America/Ojinaga
            * `America/Panama` - America/Panama
            * `America/Paramaribo` - America/Paramaribo
            * `America/Phoenix` - America/Phoenix
            * `America/Port-au-Prince` - America/Port-au-Prince
            * `America/Port_of_Spain` - America/Port_of_Spain
            * `America/Porto_Velho` - America/Porto_Velho
            * `America/Puerto_Rico` - America/Puerto_Rico
            * `America/Punta_Arenas` - America/Punta_Arenas
            * `America/Rankin_Inlet` - America/Rankin_Inlet
            * `America/Recife` - America/Recife
            * `America/Regina` - America/Regina
            * `America/Resolute` - America/Resolute
            * `America/Rio_Branco` - America/Rio_Branco
            * `America/Santarem` - America/Santarem
            * `America/Santiago` - America/Santiago
            * `America/Santo_Domingo` - America/Santo_Domingo
            * `America/Sao_Paulo` - America/Sao_Paulo
            * `America/Scoresbysund` - America/Scoresbysund
            * `America/Sitka` - America/Sitka
            * `America/St_Barthelemy` - America/St_Barthelemy
            * `America/St_Johns` - America/St_Johns
            * `America/St_Kitts` - America/St_Kitts
            * `America/St_Lucia` - America/St_Lucia
            * `America/St_Thomas` - America/St_Thomas
            * `America/St_Vincent` - America/St_Vincent
            * `America/Swift_Current` - America/Swift_Current
            * `America/Tegucigalpa` - America/Tegucigalpa
            * `America/Thule` - America/Thule
            * `America/Tijuana` - America/Tijuana
            * `America/Toronto` - America/Toronto
            * `America/Tortola` - America/Tortola
            * `America/Vancouver` - America/Vancouver
            * `America/Whitehorse` - America/Whitehorse
            * `America/Winnipeg` - America/Winnipeg
            * `America/Yakutat` - America/Yakutat
            * `Antarctica/Casey` - Antarctica/Casey
            * `Antarctica/Davis` - Antarctica/Davis
            * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
            * `Antarctica/Macquarie` - Antarctica/Macquarie
            * `Antarctica/Mawson` - Antarctica/Mawson
            * `Antarctica/McMurdo` - Antarctica/McMurdo
            * `Antarctica/Palmer` - Antarctica/Palmer
            * `Antarctica/Rothera` - Antarctica/Rothera
            * `Antarctica/Syowa` - Antarctica/Syowa
            * `Antarctica/Troll` - Antarctica/Troll
            * `Antarctica/Vostok` - Antarctica/Vostok
            * `Arctic/Longyearbyen` - Arctic/Longyearbyen
            * `Asia/Aden` - Asia/Aden
            * `Asia/Almaty` - Asia/Almaty
            * `Asia/Amman` - Asia/Amman
            * `Asia/Anadyr` - Asia/Anadyr
            * `Asia/Aqtau` - Asia/Aqtau
            * `Asia/Aqtobe` - Asia/Aqtobe
            * `Asia/Ashgabat` - Asia/Ashgabat
            * `Asia/Atyrau` - Asia/Atyrau
            * `Asia/Baghdad` - Asia/Baghdad
            * `Asia/Bahrain` - Asia/Bahrain
            * `Asia/Baku` - Asia/Baku
            * `Asia/Bangkok` - Asia/Bangkok
            * `Asia/Barnaul` - Asia/Barnaul
            * `Asia/Beirut` - Asia/Beirut
            * `Asia/Bishkek` - Asia/Bishkek
            * `Asia/Brunei` - Asia/Brunei
            * `Asia/Chita` - Asia/Chita
            * `Asia/Choibalsan` - Asia/Choibalsan
            * `Asia/Colombo` - Asia/Colombo
            * `Asia/Damascus` - Asia/Damascus
            * `Asia/Dhaka` - Asia/Dhaka
            * `Asia/Dili` - Asia/Dili
            * `Asia/Dubai` - Asia/Dubai
            * `Asia/Dushanbe` - Asia/Dushanbe
            * `Asia/Famagusta` - Asia/Famagusta
            * `Asia/Gaza` - Asia/Gaza
            * `Asia/Hebron` - Asia/Hebron
            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
            * `Asia/Hong_Kong` - Asia/Hong_Kong
            * `Asia/Hovd` - Asia/Hovd
            * `Asia/Irkutsk` - Asia/Irkutsk
            * `Asia/Jakarta` - Asia/Jakarta
            * `Asia/Jayapura` - Asia/Jayapura
            * `Asia/Jerusalem` - Asia/Jerusalem
            * `Asia/Kabul` - Asia/Kabul
            * `Asia/Kamchatka` - Asia/Kamchatka
            * `Asia/Karachi` - Asia/Karachi
            * `Asia/Kathmandu` - Asia/Kathmandu
            * `Asia/Khandyga` - Asia/Khandyga
            * `Asia/Kolkata` - Asia/Kolkata
            * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
            * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
            * `Asia/Kuching` - Asia/Kuching
            * `Asia/Kuwait` - Asia/Kuwait
            * `Asia/Macau` - Asia/Macau
            * `Asia/Magadan` - Asia/Magadan
            * `Asia/Makassar` - Asia/Makassar
            * `Asia/Manila` - Asia/Manila
            * `Asia/Muscat` - Asia/Muscat
            * `Asia/Nicosia` - Asia/Nicosia
            * `Asia/Novokuznetsk` - Asia/Novokuznetsk
            * `Asia/Novosibirsk` - Asia/Novosibirsk
            * `Asia/Omsk` - Asia/Omsk
            * `Asia/Oral` - Asia/Oral
            * `Asia/Phnom_Penh` - Asia/Phnom_Penh
            * `Asia/Pontianak` - Asia/Pontianak
            * `Asia/Pyongyang` - Asia/Pyongyang
            * `Asia/Qatar` - Asia/Qatar
            * `Asia/Qostanay` - Asia/Qostanay
            * `Asia/Qyzylorda` - Asia/Qyzylorda
            * `Asia/Riyadh` - Asia/Riyadh
            * `Asia/Sakhalin` - Asia/Sakhalin
            * `Asia/Samarkand` - Asia/Samarkand
            * `Asia/Seoul` - Asia/Seoul
            * `Asia/Shanghai` - Asia/Shanghai
            * `Asia/Singapore` - Asia/Singapore
            * `Asia/Srednekolymsk` - Asia/Srednekolymsk
            * `Asia/Taipei` - Asia/Taipei
            * `Asia/Tashkent` - Asia/Tashkent
            * `Asia/Tbilisi` - Asia/Tbilisi
            * `Asia/Tehran` - Asia/Tehran
            * `Asia/Thimphu` - Asia/Thimphu
            * `Asia/Tokyo` - Asia/Tokyo
            * `Asia/Tomsk` - Asia/Tomsk
            * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
            * `Asia/Urumqi` - Asia/Urumqi
            * `Asia/Ust-Nera` - Asia/Ust-Nera
            * `Asia/Vientiane` - Asia/Vientiane
            * `Asia/Vladivostok` - Asia/Vladivostok
            * `Asia/Yakutsk` - Asia/Yakutsk
            * `Asia/Yangon` - Asia/Yangon
            * `Asia/Yekaterinburg` - Asia/Yekaterinburg
            * `Asia/Yerevan` - Asia/Yerevan
            * `Atlantic/Azores` - Atlantic/Azores
            * `Atlantic/Bermuda` - Atlantic/Bermuda
            * `Atlantic/Canary` - Atlantic/Canary
            * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
            * `Atlantic/Faroe` - Atlantic/Faroe
            * `Atlantic/Madeira` - Atlantic/Madeira
            * `Atlantic/Reykjavik` - Atlantic/Reykjavik
            * `Atlantic/South_Georgia` - Atlantic/South_Georgia
            * `Atlantic/St_Helena` - Atlantic/St_Helena
            * `Atlantic/Stanley` - Atlantic/Stanley
            * `Australia/Adelaide` - Australia/Adelaide
            * `Australia/Brisbane` - Australia/Brisbane
            * `Australia/Broken_Hill` - Australia/Broken_Hill
            * `Australia/Darwin` - Australia/Darwin
            * `Australia/Eucla` - Australia/Eucla
            * `Australia/Hobart` - Australia/Hobart
            * `Australia/Lindeman` - Australia/Lindeman
            * `Australia/Lord_Howe` - Australia/Lord_Howe
            * `Australia/Melbourne` - Australia/Melbourne
            * `Australia/Perth` - Australia/Perth
            * `Australia/Sydney` - Australia/Sydney
            * `Canada/Atlantic` - Canada/Atlantic
            * `Canada/Central` - Canada/Central
            * `Canada/Eastern` - Canada/Eastern
            * `Canada/Mountain` - Canada/Mountain
            * `Canada/Newfoundland` - Canada/Newfoundland
            * `Canada/Pacific` - Canada/Pacific
            * `Europe/Amsterdam` - Europe/Amsterdam
            * `Europe/Andorra` - Europe/Andorra
            * `Europe/Astrakhan` - Europe/Astrakhan
            * `Europe/Athens` - Europe/Athens
            * `Europe/Belgrade` - Europe/Belgrade
            * `Europe/Berlin` - Europe/Berlin
            * `Europe/Bratislava` - Europe/Bratislava
            * `Europe/Brussels` - Europe/Brussels
            * `Europe/Bucharest` - Europe/Bucharest
            * `Europe/Budapest` - Europe/Budapest
            * `Europe/Busingen` - Europe/Busingen
            * `Europe/Chisinau` - Europe/Chisinau
            * `Europe/Copenhagen` - Europe/Copenhagen
            * `Europe/Dublin` - Europe/Dublin
            * `Europe/Gibraltar` - Europe/Gibraltar
            * `Europe/Guernsey` - Europe/Guernsey
            * `Europe/Helsinki` - Europe/Helsinki
            * `Europe/Isle_of_Man` - Europe/Isle_of_Man
            * `Europe/Istanbul` - Europe/Istanbul
            * `Europe/Jersey` - Europe/Jersey
            * `Europe/Kaliningrad` - Europe/Kaliningrad
            * `Europe/Kirov` - Europe/Kirov
            * `Europe/Kyiv` - Europe/Kyiv
            * `Europe/Lisbon` - Europe/Lisbon
            * `Europe/Ljubljana` - Europe/Ljubljana
            * `Europe/London` - Europe/London
            * `Europe/Luxembourg` - Europe/Luxembourg
            * `Europe/Madrid` - Europe/Madrid
            * `Europe/Malta` - Europe/Malta
            * `Europe/Mariehamn` - Europe/Mariehamn
            * `Europe/Minsk` - Europe/Minsk
            * `Europe/Monaco` - Europe/Monaco
            * `Europe/Moscow` - Europe/Moscow
            * `Europe/Oslo` - Europe/Oslo
            * `Europe/Paris` - Europe/Paris
            * `Europe/Podgorica` - Europe/Podgorica
            * `Europe/Prague` - Europe/Prague
            * `Europe/Riga` - Europe/Riga
            * `Europe/Rome` - Europe/Rome
            * `Europe/Samara` - Europe/Samara
            * `Europe/San_Marino` - Europe/San_Marino
            * `Europe/Sarajevo` - Europe/Sarajevo
            * `Europe/Saratov` - Europe/Saratov
            * `Europe/Simferopol` - Europe/Simferopol
            * `Europe/Skopje` - Europe/Skopje
            * `Europe/Sofia` - Europe/Sofia
            * `Europe/Stockholm` - Europe/Stockholm
            * `Europe/Tallinn` - Europe/Tallinn
            * `Europe/Tirane` - Europe/Tirane
            * `Europe/Ulyanovsk` - Europe/Ulyanovsk
            * `Europe/Vaduz` - Europe/Vaduz
            * `Europe/Vatican` - Europe/Vatican
            * `Europe/Vienna` - Europe/Vienna
            * `Europe/Vilnius` - Europe/Vilnius
            * `Europe/Volgograd` - Europe/Volgograd
            * `Europe/Warsaw` - Europe/Warsaw
            * `Europe/Zagreb` - Europe/Zagreb
            * `Europe/Zurich` - Europe/Zurich
            * `GMT` - GMT
            * `Indian/Antananarivo` - Indian/Antananarivo
            * `Indian/Chagos` - Indian/Chagos
            * `Indian/Christmas` - Indian/Christmas
            * `Indian/Cocos` - Indian/Cocos
            * `Indian/Comoro` - Indian/Comoro
            * `Indian/Kerguelen` - Indian/Kerguelen
            * `Indian/Mahe` - Indian/Mahe
            * `Indian/Maldives` - Indian/Maldives
            * `Indian/Mauritius` - Indian/Mauritius
            * `Indian/Mayotte` - Indian/Mayotte
            * `Indian/Reunion` - Indian/Reunion
            * `Pacific/Apia` - Pacific/Apia
            * `Pacific/Auckland` - Pacific/Auckland
            * `Pacific/Bougainville` - Pacific/Bougainville
            * `Pacific/Chatham` - Pacific/Chatham
            * `Pacific/Chuuk` - Pacific/Chuuk
            * `Pacific/Easter` - Pacific/Easter
            * `Pacific/Efate` - Pacific/Efate
            * `Pacific/Fakaofo` - Pacific/Fakaofo
            * `Pacific/Fiji` - Pacific/Fiji
            * `Pacific/Funafuti` - Pacific/Funafuti
            * `Pacific/Galapagos` - Pacific/Galapagos
            * `Pacific/Gambier` - Pacific/Gambier
            * `Pacific/Guadalcanal` - Pacific/Guadalcanal
            * `Pacific/Guam` - Pacific/Guam
            * `Pacific/Honolulu` - Pacific/Honolulu
            * `Pacific/Kanton` - Pacific/Kanton
            * `Pacific/Kiritimati` - Pacific/Kiritimati
            * `Pacific/Kosrae` - Pacific/Kosrae
            * `Pacific/Kwajalein` - Pacific/Kwajalein
            * `Pacific/Majuro` - Pacific/Majuro
            * `Pacific/Marquesas` - Pacific/Marquesas
            * `Pacific/Midway` - Pacific/Midway
            * `Pacific/Nauru` - Pacific/Nauru
            * `Pacific/Niue` - Pacific/Niue
            * `Pacific/Norfolk` - Pacific/Norfolk
            * `Pacific/Noumea` - Pacific/Noumea
            * `Pacific/Pago_Pago` - Pacific/Pago_Pago
            * `Pacific/Palau` - Pacific/Palau
            * `Pacific/Pitcairn` - Pacific/Pitcairn
            * `Pacific/Pohnpei` - Pacific/Pohnpei
            * `Pacific/Port_Moresby` - Pacific/Port_Moresby
            * `Pacific/Rarotonga` - Pacific/Rarotonga
            * `Pacific/Saipan` - Pacific/Saipan
            * `Pacific/Tahiti` - Pacific/Tahiti
            * `Pacific/Tarawa` - Pacific/Tarawa
            * `Pacific/Tongatapu` - Pacific/Tongatapu
            * `Pacific/Wake` - Pacific/Wake
            * `Pacific/Wallis` - Pacific/Wallis
            * `US/Alaska` - US/Alaska
            * `US/Arizona` - US/Arizona
            * `US/Central` - US/Central
            * `US/Eastern` - US/Eastern
            * `US/Hawaii` - US/Hawaii
            * `US/Mountain` - US/Mountain
            * `US/Pacific` - US/Pacific
            * `UTC` - UTC
        is_default:
          type: boolean
          description: Whether this is the default schedule
        is_active:
          type: boolean
        time_slots:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleTimeSlotRequest'
          writeOnly: true
      required:
      - name
    ScheduleRequest:
      type: object
      description: Serializer for practitioner schedules
      properties:
        name:
          type: string
          minLength: 1
          description: Name of this schedule
          maxLength: 100
        description:
          type: string
          nullable: true
          description: Description of this schedule
        timezone:
          allOf:
          - $ref: '#/components/schemas/TimezoneEnum'
          description: |-
            Timezone for this schedule

            * `Africa/Abidjan` - Africa/Abidjan
            * `Africa/Accra` - Africa/Accra
            * `Africa/Addis_Ababa` - Africa/Addis_Ababa
            * `Africa/Algiers` - Africa/Algiers
            * `Africa/Asmara` - Africa/Asmara
            * `Africa/Bamako` - Africa/Bamako
            * `Africa/Bangui` - Africa/Bangui
            * `Africa/Banjul` - Africa/Banjul
            * `Africa/Bissau` - Africa/Bissau
            * `Africa/Blantyre` - Africa/Blantyre
            * `Africa/Brazzaville` - Africa/Brazzaville
            * `Africa/Bujumbura` - Africa/Bujumbura
            * `Africa/Cairo` - Africa/Cairo
            * `Africa/Casablanca` - Africa/Casablanca
            * `Africa/Ceuta` - Africa/Ceuta
            * `Africa/Conakry` - Africa/Conakry
            * `Africa/Dakar` - Africa/Dakar
            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
            * `Africa/Djibouti` - Africa/Djibouti
            * `Africa/Douala` - Africa/Douala
            * `Africa/El_Aaiun` - Africa/El_Aaiun
            * `Africa/Freetown` - Africa/Freetown
            * `Africa/Gaborone` - Africa/Gaborone
            * `Africa/Harare` - Africa/Harare
            * `Africa/Johannesburg` - Africa/Johannesburg
            * `Africa/Juba` - Africa/Juba
            * `Africa/Kampala` - Africa/Kampala
            * `Africa/Khartoum` - Africa/Khartoum
            * `Africa/Kigali` - Africa/Kigali
            * `Africa/Kinshasa` - Africa/Kinshasa
            * `Africa/Lagos` - Africa/Lagos
            * `Africa/Libreville` - Africa/Libreville
            * `Africa/Lome` - Africa/Lome
            * `Africa/Luanda` - Africa/Luanda
            * `Africa/Lubumbashi` - Africa/Lubumbashi
            * `Africa/Lusaka` - Africa/Lusaka
            * `Africa/Malabo` - Africa/Malabo
            * `Africa/Maputo` - Africa/Maputo
            * `Africa/Maseru` - Africa/Maseru
            * `Africa/Mbabane` - Africa/Mbabane
            * `Africa/Mogadishu` - Africa/Mogadishu
            * `Africa/Monrovia` - Africa/Monrovia
            * `Africa/Nairobi` - Africa/Nairobi
            * `Africa/Ndjamena` - Africa/Ndjamena
            * `Africa/Niamey` - Africa/Niamey
            * `Africa/Nouakchott` - Africa/Nouakchott
            * `Africa/Ouagadougou` - Africa/Ouagadougou
            * `Africa/Porto-Novo` - Africa/Porto-Novo
            * `Africa/Sao_Tome` - Africa/Sao_Tome
            * `Africa/Tripoli` - Africa/Tripoli
            * `Africa/Tunis` - Africa/Tunis
            * `Africa/Windhoek` - Africa/Windhoek
            * `America/Adak` - America/Adak
            * `America/Anchorage` - America/Anchorage
            * `America/Anguilla` - America/Anguilla
            * `America/Antigua` - America/Antigua
            * `America/Araguaina` - America/Araguaina
            * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
            * `America/Argentina/Catamarca` - America/Argentina/Catamarca
            * `America/Argentina/Cordoba` - America/Argentina/Cordoba
            * `America/Argentina/Jujuy` - America/Argentina/Jujuy
            * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
            * `America/Argentina/Mendoza` - America/Argentina/Mendoza
            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
            * `America/Argentina/Salta` - America/Argentina/Salta
            * `America/Argentina/San_Juan` - America/Argentina/San_Juan
            * `America/Argentina/San_Luis` - America/Argentina/San_Luis
            * `America/Argentina/Tucuman` - America/Argentina/Tucuman
            * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
            * `America/Aruba` - America/Aruba
            * `America/Asuncion` - America/Asuncion
            * `America/Atikokan` - America/Atikokan
            * `America/Bahia` - America/Bahia
            * `America/Bahia_Banderas` - America/Bahia_Banderas
            * `America/Barbados` - America/Barbados
            * `America/Belem` - America/Belem
            * `America/Belize` - America/Belize
            * `America/Blanc-Sablon` - America/Blanc-Sablon
            * `America/Boa_Vista` - America/Boa_Vista
            * `America/Bogota` - America/Bogota
            * `America/Boise` - America/Boise
            * `America/Cambridge_Bay` - America/Cambridge_Bay
            * `America/Campo_Grande` - America/Campo_Grande
            * `America/Cancun` - America/Cancun
            * `America/Caracas` - America/Caracas
            * `America/Cayenne` - America/Cayenne
            * `America/Cayman` - America/Cayman
            * `America/Chicago` - America/Chicago
            * `America/Chihuahua` - America/Chihuahua
            * `America/Ciudad_Juarez` - America/Ciudad_Juarez
            * `America/Costa_Rica` - America/Costa_Rica
            * `America/Creston` - America/Creston
            * `America/Cuiaba` - America/Cuiaba
            * `America/Curacao` - America/Curacao
            * `America/Danmarkshavn` - America/Danmarkshavn
            * `America/Dawson` - America/Dawson
            * `America/Dawson_Creek` - America/Dawson_Creek
            * `America/Denver` - America/Denver
            * `America/Detroit` - America/Detroit
            * `America/Dominica` - America/Dominica
            * `America/Edmonton` - America/Edmonton
            * `America/Eirunepe` - America/Eirunepe
            * `America/El_Salvador` - America/El_Salvador
            * `America/Fort_Nelson` - America/Fort_Nelson
            * `America/Fortaleza` - America/Fortaleza
            * `America/Glace_Bay` - America/Glace_Bay
            * `America/Goose_Bay` - America/Goose_Bay
            * `America/Grand_Turk` - America/Grand_Turk
            * `America/Grenada` - America/Grenada
            * `America/Guadeloupe` - America/Guadeloupe
            * `America/Guatemala` - America/Guatemala
            * `America/Guayaquil` - America/Guayaquil
            * `America/Guyana` - America/Guyana
            * `America/Halifax` - America/Halifax
            * `America/Havana` - America/Havana
            * `America/Hermosillo` - America/Hermosillo
            * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
            * `America/Indiana/Knox` - America/Indiana/Knox
            * `America/Indiana/Marengo` - America/Indiana/Marengo
            * `America/Indiana/Petersburg` - America/Indiana/Petersburg
            * `America/Indiana/Tell_City` - America/Indiana/Tell_City
            * `America/Indiana/Vevay` - America/Indiana/Vevay
            * `America/Indiana/Vincennes` - America/Indiana/Vincennes
            * `America/Indiana/Winamac` - America/Indiana/Winamac
            * `America/Inuvik` - America/Inuvik
            * `America/Iqaluit` - America/Iqaluit
            * `America/Jamaica` - America/Jamaica
            * `America/Juneau` - America/Juneau
            * `America/Kentucky/Louisville` - America/Kentucky/Louisville
            * `America/Kentucky/Monticello` - America/Kentucky/Monticello
            * `America/Kralendijk` - America/Kralendijk
            * `America/La_Paz` - America/La_Paz
            * `America/Lima` - America/Lima
            * `America/Los_Angeles` - America/Los_Angeles
            * `America/Lower_Princes` - America/Lower_Princes
            * `America/Maceio` - America/Maceio
            * `America/Managua` - America/Managua
            * `America/Manaus` - America/Manaus
            * `America/Marigot` - America/Marigot
            * `America/Martinique` - America/Martinique
            * `America/Matamoros` - America/Matamoros
            * `America/Mazatlan` - America/Mazatlan
            * `America/Menominee` - America/Menominee
            * `America/Merida` - America/Merida
            * `America/Metlakatla` - America/Metlakatla
            * `America/Mexico_City` - America/Mexico_City
            * `America/Miquelon` - America/Miquelon
            * `America/Moncton` - America/Moncton
            * `America/Monterrey` - America/Monterrey
            * `America/Montevideo` - America/Montevideo
            * `America/Montserrat` - America/Montserrat
            * `America/Nassau` - America/Nassau
            * `America/New_York` - America/New_York
            * `America/Nome` - America/Nome
            * `America/Noronha` - America/Noronha
            * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
            * `America/North_Dakota/Center` - America/North_Dakota/Center
            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
            * `America/Nuuk` - America/Nuuk
            * `America/Ojinaga` - America/Ojinaga
            * `America/Panama` - America/Panama
            * `America/Paramaribo` - America/Paramaribo
            * `America/Phoenix` - America/Phoenix
            * `America/Port-au-Prince` - America/Port-au-Prince
            * `America/Port_of_Spain` - America/Port_of_Spain
            * `America/Porto_Velho` - America/Porto_Velho
            * `America/Puerto_Rico` - America/Puerto_Rico
            * `America/Punta_Arenas` - America/Punta_Arenas
            * `America/Rankin_Inlet` - America/Rankin_Inlet
            * `America/Recife` - America/Recife
            * `America/Regina` - America/Regina
            * `America/Resolute` - America/Resolute
            * `America/Rio_Branco` - America/Rio_Branco
            * `America/Santarem` - America/Santarem
            * `America/Santiago` - America/Santiago
            * `America/Santo_Domingo` - America/Santo_Domingo
            * `America/Sao_Paulo` - America/Sao_Paulo
            * `America/Scoresbysund` - America/Scoresbysund
            * `America/Sitka` - America/Sitka
            * `America/St_Barthelemy` - America/St_Barthelemy
            * `America/St_Johns` - America/St_Johns
            * `America/St_Kitts` - America/St_Kitts
            * `America/St_Lucia` - America/St_Lucia
            * `America/St_Thomas` - America/St_Thomas
            * `America/St_Vincent` - America/St_Vincent
            * `America/Swift_Current` - America/Swift_Current
            * `America/Tegucigalpa` - America/Tegucigalpa
            * `America/Thule` - America/Thule
            * `America/Tijuana` - America/Tijuana
            * `America/Toronto` - America/Toronto
            * `America/Tortola` - America/Tortola
            * `America/Vancouver` - America/Vancouver
            * `America/Whitehorse` - America/Whitehorse
            * `America/Winnipeg` - America/Winnipeg
            * `America/Yakutat` - America/Yakutat
            * `Antarctica/Casey` - Antarctica/Casey
            * `Antarctica/Davis` - Antarctica/Davis
            * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
            * `Antarctica/Macquarie` - Antarctica/Macquarie
            * `Antarctica/Mawson` - Antarctica/Mawson
            * `Antarctica/McMurdo` - Antarctica/McMurdo
            * `Antarctica/Palmer` - Antarctica/Palmer
            * `Antarctica/Rothera` - Antarctica/Rothera
            * `Antarctica/Syowa` - Antarctica/Syowa
            * `Antarctica/Troll` - Antarctica/Troll
            * `Antarctica/Vostok` - Antarctica/Vostok
            * `Arctic/Longyearbyen` - Arctic/Longyearbyen
            * `Asia/Aden` - Asia/Aden
            * `Asia/Almaty` - Asia/Almaty
            * `Asia/Amman` - Asia/Amman
            * `Asia/Anadyr` - Asia/Anadyr
            * `Asia/Aqtau` - Asia/Aqtau
            * `Asia/Aqtobe` - Asia/Aqtobe
            * `Asia/Ashgabat` - Asia/Ashgabat
            * `Asia/Atyrau` - Asia/Atyrau
            * `Asia/Baghdad` - Asia/Baghdad
            * `Asia/Bahrain` - Asia/Bahrain
            * `Asia/Baku` - Asia/Baku
            * `Asia/Bangkok` - Asia/Bangkok
            * `Asia/Barnaul` - Asia/Barnaul
            * `Asia/Beirut` - Asia/Beirut
            * `Asia/Bishkek` - Asia/Bishkek
            * `Asia/Brunei` - Asia/Brunei
            * `Asia/Chita` - Asia/Chita
            * `Asia/Choibalsan` - Asia/Choibalsan
            * `Asia/Colombo` - Asia/Colombo
            * `Asia/Damascus` - Asia/Damascus
            * `Asia/Dhaka` - Asia/Dhaka
            * `Asia/Dili` - Asia/Dili
            * `Asia/Dubai` - Asia/Dubai
            * `Asia/Dushanbe` - Asia/Dushanbe
            * `Asia/Famagusta` - Asia/Famagusta
            * `Asia/Gaza` - Asia/Gaza
            * `Asia/Hebron` - Asia/Hebron
            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
            * `Asia/Hong_Kong` - Asia/Hong_Kong
            * `Asia/Hovd` - Asia/Hovd
            * `Asia/Irkutsk` - Asia/Irkutsk
            * `Asia/Jakarta` - Asia/Jakarta
            * `Asia/Jayapura` - Asia/Jayapura
            * `Asia/Jerusalem` - Asia/Jerusalem
            * `Asia/Kabul` - Asia/Kabul
            * `Asia/Kamchatka` - Asia/Kamchatka
            * `Asia/Karachi` - Asia/Karachi
            * `Asia/Kathmandu` - Asia/Kathmandu
            * `Asia/Khandyga` - Asia/Khandyga
            * `Asia/Kolkata` - Asia/Kolkata
            * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
            * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
            * `Asia/Kuching` - Asia/Kuching
            * `Asia/Kuwait` - Asia/Kuwait
            * `Asia/Macau` - Asia/Macau
            * `Asia/Magadan` - Asia/Magadan
            * `Asia/Makassar` - Asia/Makassar
            * `Asia/Manila` - Asia/Manila
            * `Asia/Muscat` - Asia/Muscat
            * `Asia/Nicosia` - Asia/Nicosia
            * `Asia/Novokuznetsk` - Asia/Novokuznetsk
            * `Asia/Novosibirsk` - Asia/Novosibirsk
            * `Asia/Omsk` - Asia/Omsk
            * `Asia/Oral` - Asia/Oral
            * `Asia/Phnom_Penh` - Asia/Phnom_Penh
            * `Asia/Pontianak` - Asia/Pontianak
            * `Asia/Pyongyang` - Asia/Pyongyang
            * `Asia/Qatar` - Asia/Qatar
            * `Asia/Qostanay` - Asia/Qostanay
            * `Asia/Qyzylorda` - Asia/Qyzylorda
            * `Asia/Riyadh` - Asia/Riyadh
            * `Asia/Sakhalin` - Asia/Sakhalin
            * `Asia/Samarkand` - Asia/Samarkand
            * `Asia/Seoul` - Asia/Seoul
            * `Asia/Shanghai` - Asia/Shanghai
            * `Asia/Singapore` - Asia/Singapore
            * `Asia/Srednekolymsk` - Asia/Srednekolymsk
            * `Asia/Taipei` - Asia/Taipei
            * `Asia/Tashkent` - Asia/Tashkent
            * `Asia/Tbilisi` - Asia/Tbilisi
            * `Asia/Tehran` - Asia/Tehran
            * `Asia/Thimphu` - Asia/Thimphu
            * `Asia/Tokyo` - Asia/Tokyo
            * `Asia/Tomsk` - Asia/Tomsk
            * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
            * `Asia/Urumqi` - Asia/Urumqi
            * `Asia/Ust-Nera` - Asia/Ust-Nera
            * `Asia/Vientiane` - Asia/Vientiane
            * `Asia/Vladivostok` - Asia/Vladivostok
            * `Asia/Yakutsk` - Asia/Yakutsk
            * `Asia/Yangon` - Asia/Yangon
            * `Asia/Yekaterinburg` - Asia/Yekaterinburg
            * `Asia/Yerevan` - Asia/Yerevan
            * `Atlantic/Azores` - Atlantic/Azores
            * `Atlantic/Bermuda` - Atlantic/Bermuda
            * `Atlantic/Canary` - Atlantic/Canary
            * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
            * `Atlantic/Faroe` - Atlantic/Faroe
            * `Atlantic/Madeira` - Atlantic/Madeira
            * `Atlantic/Reykjavik` - Atlantic/Reykjavik
            * `Atlantic/South_Georgia` - Atlantic/South_Georgia
            * `Atlantic/St_Helena` - Atlantic/St_Helena
            * `Atlantic/Stanley` - Atlantic/Stanley
            * `Australia/Adelaide` - Australia/Adelaide
            * `Australia/Brisbane` - Australia/Brisbane
            * `Australia/Broken_Hill` - Australia/Broken_Hill
            * `Australia/Darwin` - Australia/Darwin
            * `Australia/Eucla` - Australia/Eucla
            * `Australia/Hobart` - Australia/Hobart
            * `Australia/Lindeman` - Australia/Lindeman
            * `Australia/Lord_Howe` - Australia/Lord_Howe
            * `Australia/Melbourne` - Australia/Melbourne
            * `Australia/Perth` - Australia/Perth
            * `Australia/Sydney` - Australia/Sydney
            * `Canada/Atlantic` - Canada/Atlantic
            * `Canada/Central` - Canada/Central
            * `Canada/Eastern` - Canada/Eastern
            * `Canada/Mountain` - Canada/Mountain
            * `Canada/Newfoundland` - Canada/Newfoundland
            * `Canada/Pacific` - Canada/Pacific
            * `Europe/Amsterdam` - Europe/Amsterdam
            * `Europe/Andorra` - Europe/Andorra
            * `Europe/Astrakhan` - Europe/Astrakhan
            * `Europe/Athens` - Europe/Athens
            * `Europe/Belgrade` - Europe/Belgrade
            * `Europe/Berlin` - Europe/Berlin
            * `Europe/Bratislava` - Europe/Bratislava
            * `Europe/Brussels` - Europe/Brussels
            * `Europe/Bucharest` - Europe/Bucharest
            * `Europe/Budapest` - Europe/Budapest
            * `Europe/Busingen` - Europe/Busingen
            * `Europe/Chisinau` - Europe/Chisinau
            * `Europe/Copenhagen` - Europe/Copenhagen
            * `Europe/Dublin` - Europe/Dublin
            * `Europe/Gibraltar` - Europe/Gibraltar
            * `Europe/Guernsey` - Europe/Guernsey
            * `Europe/Helsinki` - Europe/Helsinki
            * `Europe/Isle_of_Man` - Europe/Isle_of_Man
            * `Europe/Istanbul` - Europe/Istanbul
            * `Europe/Jersey` - Europe/Jersey
            * `Europe/Kaliningrad` - Europe/Kaliningrad
            * `Europe/Kirov` - Europe/Kirov
            * `Europe/Kyiv` - Europe/Kyiv
            * `Europe/Lisbon` - Europe/Lisbon
            * `Europe/Ljubljana` - Europe/Ljubljana
            * `Europe/London` - Europe/London
            * `Europe/Luxembourg` - Europe/Luxembourg
            * `Europe/Madrid` - Europe/Madrid
            * `Europe/Malta` - Europe/Malta
            * `Europe/Mariehamn` - Europe/Mariehamn
            * `Europe/Minsk` - Europe/Minsk
            * `Europe/Monaco` - Europe/Monaco
            * `Europe/Moscow` - Europe/Moscow
            * `Europe/Oslo` - Europe/Oslo
            * `Europe/Paris` - Europe/Paris
            * `Europe/Podgorica` - Europe/Podgorica
            * `Europe/Prague` - Europe/Prague
            * `Europe/Riga` - Europe/Riga
            * `Europe/Rome` - Europe/Rome
            * `Europe/Samara` - Europe/Samara
            * `Europe/San_Marino` - Europe/San_Marino
            * `Europe/Sarajevo` - Europe/Sarajevo
            * `Europe/Saratov` - Europe/Saratov
            * `Europe/Simferopol` - Europe/Simferopol
            * `Europe/Skopje` - Europe/Skopje
            * `Europe/Sofia` - Europe/Sofia
            * `Europe/Stockholm` - Europe/Stockholm
            * `Europe/Tallinn` - Europe/Tallinn
            * `Europe/Tirane` - Europe/Tirane
            * `Europe/Ulyanovsk` - Europe/Ulyanovsk
            * `Europe/Vaduz` - Europe/Vaduz
            * `Europe/Vatican` - Europe/Vatican
            * `Europe/Vienna` - Europe/Vienna
            * `Europe/Vilnius` - Europe/Vilnius
            * `Europe/Volgograd` - Europe/Volgograd
            * `Europe/Warsaw` - Europe/Warsaw
            * `Europe/Zagreb` - Europe/Zagreb
            * `Europe/Zurich` - Europe/Zurich
            * `GMT` - GMT
            * `Indian/Antananarivo` - Indian/Antananarivo
            * `Indian/Chagos` - Indian/Chagos
            * `Indian/Christmas` - Indian/Christmas
            * `Indian/Cocos` - Indian/Cocos
            * `Indian/Comoro` - Indian/Comoro
            * `Indian/Kerguelen` - Indian/Kerguelen
            * `Indian/Mahe` - Indian/Mahe
            * `Indian/Maldives` - Indian/Maldives
            * `Indian/Mauritius` - Indian/Mauritius
            * `Indian/Mayotte` - Indian/Mayotte
            * `Indian/Reunion` - Indian/Reunion
            * `Pacific/Apia` - Pacific/Apia
            * `Pacific/Auckland` - Pacific/Auckland
            * `Pacific/Bougainville` - Pacific/Bougainville
            * `Pacific/Chatham` - Pacific/Chatham
            * `Pacific/Chuuk` - Pacific/Chuuk
            * `Pacific/Easter` - Pacific/Easter
            * `Pacific/Efate` - Pacific/Efate
            * `Pacific/Fakaofo` - Pacific/Fakaofo
            * `Pacific/Fiji` - Pacific/Fiji
            * `Pacific/Funafuti` - Pacific/Funafuti
            * `Pacific/Galapagos` - Pacific/Galapagos
            * `Pacific/Gambier` - Pacific/Gambier
            * `Pacific/Guadalcanal` - Pacific/Guadalcanal
            * `Pacific/Guam` - Pacific/Guam
            * `Pacific/Honolulu` - Pacific/Honolulu
            * `Pacific/Kanton` - Pacific/Kanton
            * `Pacific/Kiritimati` - Pacific/Kiritimati
            * `Pacific/Kosrae` - Pacific/Kosrae
            * `Pacific/Kwajalein` - Pacific/Kwajalein
            * `Pacific/Majuro` - Pacific/Majuro
            * `Pacific/Marquesas` - Pacific/Marquesas
            * `Pacific/Midway` - Pacific/Midway
            * `Pacific/Nauru` - Pacific/Nauru
            * `Pacific/Niue` - Pacific/Niue
            * `Pacific/Norfolk` - Pacific/Norfolk
            * `Pacific/Noumea` - Pacific/Noumea
            * `Pacific/Pago_Pago` - Pacific/Pago_Pago
            * `Pacific/Palau` - Pacific/Palau
            * `Pacific/Pitcairn` - Pacific/Pitcairn
            * `Pacific/Pohnpei` - Pacific/Pohnpei
            * `Pacific/Port_Moresby` - Pacific/Port_Moresby
            * `Pacific/Rarotonga` - Pacific/Rarotonga
            * `Pacific/Saipan` - Pacific/Saipan
            * `Pacific/Tahiti` - Pacific/Tahiti
            * `Pacific/Tarawa` - Pacific/Tarawa
            * `Pacific/Tongatapu` - Pacific/Tongatapu
            * `Pacific/Wake` - Pacific/Wake
            * `Pacific/Wallis` - Pacific/Wallis
            * `US/Alaska` - US/Alaska
            * `US/Arizona` - US/Arizona
            * `US/Central` - US/Central
            * `US/Eastern` - US/Eastern
            * `US/Hawaii` - US/Hawaii
            * `US/Mountain` - US/Mountain
            * `US/Pacific` - US/Pacific
            * `UTC` - UTC
        is_default:
          type: boolean
          description: Whether this is the default schedule
        is_active:
          type: boolean
      required:
      - name
    ScheduleTimeSlot:
      type: object
      description: Serializer for schedule time slots
      properties:
        id:
          type: integer
          readOnly: true
        day:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Day of week (0=Monday, 6=Sunday)
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        is_active:
          type: boolean
      required:
      - day
      - end_time
      - start_time
    ScheduleTimeSlotRequest:
      type: object
      description: Serializer for schedule time slots
      properties:
        day:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Day of week (0=Monday, 6=Sunday)
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        is_active:
          type: boolean
      required:
      - day
      - end_time
      - start_time
    ServiceCategory:
      type: object
      description: Serializer for service categories
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          readOnly: true
          description: URL-friendly version of name
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          description: Icon class or identifier
          maxLength: 50
        is_active:
          type: boolean
        is_featured:
          type: boolean
          description: Whether to feature this category
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order
        service_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
    ServiceCategoryRequest:
      type: object
      description: Serializer for service categories
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          description: Icon class or identifier
          maxLength: 50
        is_active:
          type: boolean
        is_featured:
          type: boolean
          description: Whether to feature this category
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order
      required:
      - name
    ServiceCreateUpdate:
      type: object
      description: Serializer for creating and updating services
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        name:
          type: string
          description: Service name
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Detailed service description
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          readOnly: true
          description: Price in cents (e.g., 10000 = $100.00)
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        service_type_id:
          type: integer
        category_id:
          type: integer
          nullable: true
        practitioner_category_id:
          type: integer
          nullable: true
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        schedule:
          type: integer
          nullable: true
          description: Availability schedule for session-type services
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        image:
          type: string
          format: uri
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
        additional_practitioner_ids:
          type: array
          items:
            type: integer
        child_service_configs:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: List of dicts with child_service_id, quantity, discount_percentage,
            etc.
      required:
      - duration_minutes
      - name
      - service_type_id
    ServiceCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating services
      properties:
        name:
          type: string
          minLength: 1
          description: Service name
          maxLength: 255
        description:
          type: string
          nullable: true
          description: Detailed service description
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          writeOnly: true
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        service_type_id:
          type: integer
        category_id:
          type: integer
          nullable: true
        practitioner_category_id:
          type: integer
          nullable: true
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        schedule:
          type: integer
          nullable: true
          description: Availability schedule for session-type services
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        image:
          type: string
          format: binary
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
        additional_practitioner_ids:
          type: array
          items:
            type: integer
        child_service_configs:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: List of dicts with child_service_id, quantity, discount_percentage,
            etc.
      required:
      - duration_minutes
      - name
      - price
      - service_type_id
    ServiceDetail:
      type: object
      description: Detailed serializer for single service view
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        name:
          type: string
          description: Service name
          maxLength: 255
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in cents (e.g., 10000 = $100.00)
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        duration_display:
          type: string
          readOnly: true
        service_type:
          type: integer
          description: Type of service
        service_type_display:
          type: string
          readOnly: true
        service_type_code:
          type: string
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/ServiceCategory'
          readOnly: true
        primary_practitioner:
          allOf:
          - $ref: '#/components/schemas/SimplePractitioner'
          readOnly: true
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        schedule:
          allOf:
          - $ref: '#/components/schemas/SimpleSchedule'
          readOnly: true
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        average_rating:
          type: string
          readOnly: true
        total_reviews:
          type: string
          readOnly: true
        total_bookings:
          type: string
          readOnly: true
        primary_image:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
          description: Detailed service description
        practitioner_category:
          allOf:
          - $ref: '#/components/schemas/PractitionerServiceCategory'
          readOnly: true
        additional_practitioners:
          type: string
          readOnly: true
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        image:
          type: string
          format: uri
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        languages:
          type: array
          items:
            type: integer
        published_at:
          type: string
          format: date-time
          nullable: true
          description: When service was first published
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
        media_attachments:
          type: string
          readOnly: true
        child_services:
          type: string
          readOnly: true
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/ServiceSession'
          readOnly: true
        resources:
          type: string
          readOnly: true
        price_per_session:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        original_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        savings_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        savings_percentage:
          type: number
          format: double
          readOnly: true
        total_sessions:
          type: integer
          readOnly: true
      required:
      - duration_minutes
      - name
      - price_cents
      - service_type
    ServiceDetailRequest:
      type: object
      description: Detailed serializer for single service view
      properties:
        name:
          type: string
          minLength: 1
          description: Service name
          maxLength: 255
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in cents (e.g., 10000 = $100.00)
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        service_type:
          type: integer
          description: Type of service
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        description:
          type: string
          nullable: true
          description: Detailed service description
        min_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Minimum participants to run service
        age_min:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Minimum age
        age_max:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum age
        what_youll_learn:
          type: string
          nullable: true
          description: Learning outcomes and benefits
        prerequisites:
          type: string
          nullable: true
          description: What participants need before joining
        includes:
          nullable: true
          description: What's included in the service
        address:
          type: integer
          nullable: true
          description: Physical address for in-person/hybrid services
        image:
          type: string
          format: binary
          nullable: true
          description: Service cover image
        tags:
          nullable: true
          description: Searchable tags
        languages:
          type: array
          items:
            type: integer
        published_at:
          type: string
          format: date-time
          nullable: true
          description: When service was first published
        validity_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Days valid after purchase (for bundles/packages)
        is_transferable:
          type: boolean
          description: Whether bundle/package can be transferred to another user
        is_shareable:
          type: boolean
          description: Whether bundle can be shared with family/friends
        sessions_included:
          type: integer
          maximum: 2147483647
          minimum: 1
          nullable: true
          description: Number of sessions in bundle (for bundle type only)
        bonus_sessions:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Additional free sessions in bundle
        max_per_customer:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum purchases per customer (for bundles)
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When this becomes available for purchase
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When sales end
        highlight_text:
          type: string
          nullable: true
          description: e.g., 'BEST VALUE' or 'SAVE 20%'
          maxLength: 50
        terms_conditions:
          type: string
          nullable: true
          description: Specific terms for packages/bundles
      required:
      - duration_minutes
      - name
      - price_cents
      - service_type
    ServiceList:
      type: object
      description: Serializer for service listing
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        name:
          type: string
          description: Service name
          maxLength: 255
        short_description:
          type: string
          nullable: true
          description: Brief description for listings
          maxLength: 500
        price_cents:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Price in cents (e.g., 10000 = $100.00)
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Duration in minutes
        duration_display:
          type: string
          readOnly: true
        service_type:
          type: integer
          description: Type of service
        service_type_display:
          type: string
          readOnly: true
        service_type_code:
          type: string
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/ServiceCategory'
          readOnly: true
        primary_practitioner:
          allOf:
          - $ref: '#/components/schemas/SimplePractitioner'
          readOnly: true
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Maximum number of participants
        experience_level:
          $ref: '#/components/schemas/ExperienceLevelEnum'
        location_type:
          $ref: '#/components/schemas/LocationTypeEnum'
        schedule:
          allOf:
          - $ref: '#/components/schemas/SimpleSchedule'
          readOnly: true
        is_active:
          type: boolean
        is_featured:
          type: boolean
        is_public:
          type: boolean
          description: Whether service is publicly visible
        status:
          allOf:
          - $ref: '#/components/schemas/StatusBa5Enum'
          description: |-
            Service publication status

            * `draft` - Draft
            * `active` - Active
            * `inactive` - Inactive
            * `archived` - Archived
        average_rating:
          type: string
          readOnly: true
        total_reviews:
          type: string
          readOnly: true
        total_bookings:
          type: string
          readOnly: true
        primary_image:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - duration_minutes
      - name
      - price_cents
      - service_type
    ServiceResource:
      type: object
      description: Serializer for service resources
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        resource_type:
          $ref: '#/components/schemas/ResourceTypeEnum'
        attachment_level:
          $ref: '#/components/schemas/AttachmentLevelEnum'
        content:
          type: string
          nullable: true
          description: For text posts and rich content
        file_url:
          type: string
          format: uri
          nullable: true
          description: URL to uploaded file (S3/CDN)
          maxLength: 200
        external_url:
          type: string
          format: uri
          nullable: true
          description: External video/link URL
          maxLength: 200
        file_name:
          type: string
          nullable: true
          maxLength: 255
        file_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: File size in bytes
        file_type:
          type: string
          nullable: true
          description: MIME type
          maxLength: 50
        duration_seconds:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: For video/audio resources
        uploaded_by_name:
          type: string
          readOnly: true
        access_level:
          $ref: '#/components/schemas/AccessLevelEnum'
        is_downloadable:
          type: boolean
          description: Allow downloads for files
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When resource becomes available
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When resource expires
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_featured:
          type: boolean
        tags:
          nullable: true
        view_count:
          type: integer
          readOnly: true
        download_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attachment_level
      - resource_type
      - title
    ServiceResourceRequest:
      type: object
      description: Serializer for service resources
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        resource_type:
          $ref: '#/components/schemas/ResourceTypeEnum'
        attachment_level:
          $ref: '#/components/schemas/AttachmentLevelEnum'
        content:
          type: string
          nullable: true
          description: For text posts and rich content
        file_url:
          type: string
          format: uri
          nullable: true
          description: URL to uploaded file (S3/CDN)
          maxLength: 200
        external_url:
          type: string
          format: uri
          nullable: true
          description: External video/link URL
          maxLength: 200
        file_name:
          type: string
          nullable: true
          maxLength: 255
        file_size:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: File size in bytes
        file_type:
          type: string
          nullable: true
          description: MIME type
          maxLength: 50
        duration_seconds:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: For video/audio resources
        access_level:
          $ref: '#/components/schemas/AccessLevelEnum'
        is_downloadable:
          type: boolean
          description: Allow downloads for files
        available_from:
          type: string
          format: date-time
          nullable: true
          description: When resource becomes available
        available_until:
          type: string
          format: date-time
          nullable: true
          description: When resource expires
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_featured:
          type: boolean
        tags:
          nullable: true
      required:
      - attachment_level
      - resource_type
      - title
    ServiceSession:
      type: object
      description: Serializer for service sessions (workshops/courses)
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in minutes
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        current_participants:
          type: integer
          readOnly: true
        sequence_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        room_url:
          type: string
          readOnly: true
        status:
          type: string
          maxLength: 20
        agenda:
          type: string
          nullable: true
        what_youll_learn:
          type: string
          nullable: true
          description: Describe what clients will learn or gain from this specific
            session
        address:
          type: integer
          nullable: true
          description: Address where this session takes place (for in-person sessions)
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - end_time
      - start_time
    ServiceSessionRequest:
      type: object
      description: Serializer for service sessions (workshops/courses)
      properties:
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Duration in minutes
        max_participants:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        sequence_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        status:
          type: string
          minLength: 1
          maxLength: 20
        agenda:
          type: string
          nullable: true
        what_youll_learn:
          type: string
          nullable: true
          description: Describe what clients will learn or gain from this specific
            session
        address:
          type: integer
          nullable: true
          description: Address where this session takes place (for in-person sessions)
      required:
      - end_time
      - start_time
    SimplePractitioner:
      type: object
      description: Simple practitioner serializer for nested responses
      properties:
        id:
          type: integer
          readOnly: true
        display_name:
          type: string
          readOnly: true
        slug:
          type: string
          readOnly: true
        profile_image_url:
          type: string
          format: uri
          readOnly: true
    SimpleSchedule:
      type: object
      description: Simple schedule serializer for nested responses
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of this schedule
          maxLength: 100
        is_default:
          type: boolean
          description: Whether this is the default schedule
        timezone:
          allOf:
          - $ref: '#/components/schemas/TimezoneEnum'
          description: |-
            Timezone for this schedule

            * `Africa/Abidjan` - Africa/Abidjan
            * `Africa/Accra` - Africa/Accra
            * `Africa/Addis_Ababa` - Africa/Addis_Ababa
            * `Africa/Algiers` - Africa/Algiers
            * `Africa/Asmara` - Africa/Asmara
            * `Africa/Bamako` - Africa/Bamako
            * `Africa/Bangui` - Africa/Bangui
            * `Africa/Banjul` - Africa/Banjul
            * `Africa/Bissau` - Africa/Bissau
            * `Africa/Blantyre` - Africa/Blantyre
            * `Africa/Brazzaville` - Africa/Brazzaville
            * `Africa/Bujumbura` - Africa/Bujumbura
            * `Africa/Cairo` - Africa/Cairo
            * `Africa/Casablanca` - Africa/Casablanca
            * `Africa/Ceuta` - Africa/Ceuta
            * `Africa/Conakry` - Africa/Conakry
            * `Africa/Dakar` - Africa/Dakar
            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
            * `Africa/Djibouti` - Africa/Djibouti
            * `Africa/Douala` - Africa/Douala
            * `Africa/El_Aaiun` - Africa/El_Aaiun
            * `Africa/Freetown` - Africa/Freetown
            * `Africa/Gaborone` - Africa/Gaborone
            * `Africa/Harare` - Africa/Harare
            * `Africa/Johannesburg` - Africa/Johannesburg
            * `Africa/Juba` - Africa/Juba
            * `Africa/Kampala` - Africa/Kampala
            * `Africa/Khartoum` - Africa/Khartoum
            * `Africa/Kigali` - Africa/Kigali
            * `Africa/Kinshasa` - Africa/Kinshasa
            * `Africa/Lagos` - Africa/Lagos
            * `Africa/Libreville` - Africa/Libreville
            * `Africa/Lome` - Africa/Lome
            * `Africa/Luanda` - Africa/Luanda
            * `Africa/Lubumbashi` - Africa/Lubumbashi
            * `Africa/Lusaka` - Africa/Lusaka
            * `Africa/Malabo` - Africa/Malabo
            * `Africa/Maputo` - Africa/Maputo
            * `Africa/Maseru` - Africa/Maseru
            * `Africa/Mbabane` - Africa/Mbabane
            * `Africa/Mogadishu` - Africa/Mogadishu
            * `Africa/Monrovia` - Africa/Monrovia
            * `Africa/Nairobi` - Africa/Nairobi
            * `Africa/Ndjamena` - Africa/Ndjamena
            * `Africa/Niamey` - Africa/Niamey
            * `Africa/Nouakchott` - Africa/Nouakchott
            * `Africa/Ouagadougou` - Africa/Ouagadougou
            * `Africa/Porto-Novo` - Africa/Porto-Novo
            * `Africa/Sao_Tome` - Africa/Sao_Tome
            * `Africa/Tripoli` - Africa/Tripoli
            * `Africa/Tunis` - Africa/Tunis
            * `Africa/Windhoek` - Africa/Windhoek
            * `America/Adak` - America/Adak
            * `America/Anchorage` - America/Anchorage
            * `America/Anguilla` - America/Anguilla
            * `America/Antigua` - America/Antigua
            * `America/Araguaina` - America/Araguaina
            * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
            * `America/Argentina/Catamarca` - America/Argentina/Catamarca
            * `America/Argentina/Cordoba` - America/Argentina/Cordoba
            * `America/Argentina/Jujuy` - America/Argentina/Jujuy
            * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
            * `America/Argentina/Mendoza` - America/Argentina/Mendoza
            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
            * `America/Argentina/Salta` - America/Argentina/Salta
            * `America/Argentina/San_Juan` - America/Argentina/San_Juan
            * `America/Argentina/San_Luis` - America/Argentina/San_Luis
            * `America/Argentina/Tucuman` - America/Argentina/Tucuman
            * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
            * `America/Aruba` - America/Aruba
            * `America/Asuncion` - America/Asuncion
            * `America/Atikokan` - America/Atikokan
            * `America/Bahia` - America/Bahia
            * `America/Bahia_Banderas` - America/Bahia_Banderas
            * `America/Barbados` - America/Barbados
            * `America/Belem` - America/Belem
            * `America/Belize` - America/Belize
            * `America/Blanc-Sablon` - America/Blanc-Sablon
            * `America/Boa_Vista` - America/Boa_Vista
            * `America/Bogota` - America/Bogota
            * `America/Boise` - America/Boise
            * `America/Cambridge_Bay` - America/Cambridge_Bay
            * `America/Campo_Grande` - America/Campo_Grande
            * `America/Cancun` - America/Cancun
            * `America/Caracas` - America/Caracas
            * `America/Cayenne` - America/Cayenne
            * `America/Cayman` - America/Cayman
            * `America/Chicago` - America/Chicago
            * `America/Chihuahua` - America/Chihuahua
            * `America/Ciudad_Juarez` - America/Ciudad_Juarez
            * `America/Costa_Rica` - America/Costa_Rica
            * `America/Creston` - America/Creston
            * `America/Cuiaba` - America/Cuiaba
            * `America/Curacao` - America/Curacao
            * `America/Danmarkshavn` - America/Danmarkshavn
            * `America/Dawson` - America/Dawson
            * `America/Dawson_Creek` - America/Dawson_Creek
            * `America/Denver` - America/Denver
            * `America/Detroit` - America/Detroit
            * `America/Dominica` - America/Dominica
            * `America/Edmonton` - America/Edmonton
            * `America/Eirunepe` - America/Eirunepe
            * `America/El_Salvador` - America/El_Salvador
            * `America/Fort_Nelson` - America/Fort_Nelson
            * `America/Fortaleza` - America/Fortaleza
            * `America/Glace_Bay` - America/Glace_Bay
            * `America/Goose_Bay` - America/Goose_Bay
            * `America/Grand_Turk` - America/Grand_Turk
            * `America/Grenada` - America/Grenada
            * `America/Guadeloupe` - America/Guadeloupe
            * `America/Guatemala` - America/Guatemala
            * `America/Guayaquil` - America/Guayaquil
            * `America/Guyana` - America/Guyana
            * `America/Halifax` - America/Halifax
            * `America/Havana` - America/Havana
            * `America/Hermosillo` - America/Hermosillo
            * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
            * `America/Indiana/Knox` - America/Indiana/Knox
            * `America/Indiana/Marengo` - America/Indiana/Marengo
            * `America/Indiana/Petersburg` - America/Indiana/Petersburg
            * `America/Indiana/Tell_City` - America/Indiana/Tell_City
            * `America/Indiana/Vevay` - America/Indiana/Vevay
            * `America/Indiana/Vincennes` - America/Indiana/Vincennes
            * `America/Indiana/Winamac` - America/Indiana/Winamac
            * `America/Inuvik` - America/Inuvik
            * `America/Iqaluit` - America/Iqaluit
            * `America/Jamaica` - America/Jamaica
            * `America/Juneau` - America/Juneau
            * `America/Kentucky/Louisville` - America/Kentucky/Louisville
            * `America/Kentucky/Monticello` - America/Kentucky/Monticello
            * `America/Kralendijk` - America/Kralendijk
            * `America/La_Paz` - America/La_Paz
            * `America/Lima` - America/Lima
            * `America/Los_Angeles` - America/Los_Angeles
            * `America/Lower_Princes` - America/Lower_Princes
            * `America/Maceio` - America/Maceio
            * `America/Managua` - America/Managua
            * `America/Manaus` - America/Manaus
            * `America/Marigot` - America/Marigot
            * `America/Martinique` - America/Martinique
            * `America/Matamoros` - America/Matamoros
            * `America/Mazatlan` - America/Mazatlan
            * `America/Menominee` - America/Menominee
            * `America/Merida` - America/Merida
            * `America/Metlakatla` - America/Metlakatla
            * `America/Mexico_City` - America/Mexico_City
            * `America/Miquelon` - America/Miquelon
            * `America/Moncton` - America/Moncton
            * `America/Monterrey` - America/Monterrey
            * `America/Montevideo` - America/Montevideo
            * `America/Montserrat` - America/Montserrat
            * `America/Nassau` - America/Nassau
            * `America/New_York` - America/New_York
            * `America/Nome` - America/Nome
            * `America/Noronha` - America/Noronha
            * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
            * `America/North_Dakota/Center` - America/North_Dakota/Center
            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
            * `America/Nuuk` - America/Nuuk
            * `America/Ojinaga` - America/Ojinaga
            * `America/Panama` - America/Panama
            * `America/Paramaribo` - America/Paramaribo
            * `America/Phoenix` - America/Phoenix
            * `America/Port-au-Prince` - America/Port-au-Prince
            * `America/Port_of_Spain` - America/Port_of_Spain
            * `America/Porto_Velho` - America/Porto_Velho
            * `America/Puerto_Rico` - America/Puerto_Rico
            * `America/Punta_Arenas` - America/Punta_Arenas
            * `America/Rankin_Inlet` - America/Rankin_Inlet
            * `America/Recife` - America/Recife
            * `America/Regina` - America/Regina
            * `America/Resolute` - America/Resolute
            * `America/Rio_Branco` - America/Rio_Branco
            * `America/Santarem` - America/Santarem
            * `America/Santiago` - America/Santiago
            * `America/Santo_Domingo` - America/Santo_Domingo
            * `America/Sao_Paulo` - America/Sao_Paulo
            * `America/Scoresbysund` - America/Scoresbysund
            * `America/Sitka` - America/Sitka
            * `America/St_Barthelemy` - America/St_Barthelemy
            * `America/St_Johns` - America/St_Johns
            * `America/St_Kitts` - America/St_Kitts
            * `America/St_Lucia` - America/St_Lucia
            * `America/St_Thomas` - America/St_Thomas
            * `America/St_Vincent` - America/St_Vincent
            * `America/Swift_Current` - America/Swift_Current
            * `America/Tegucigalpa` - America/Tegucigalpa
            * `America/Thule` - America/Thule
            * `America/Tijuana` - America/Tijuana
            * `America/Toronto` - America/Toronto
            * `America/Tortola` - America/Tortola
            * `America/Vancouver` - America/Vancouver
            * `America/Whitehorse` - America/Whitehorse
            * `America/Winnipeg` - America/Winnipeg
            * `America/Yakutat` - America/Yakutat
            * `Antarctica/Casey` - Antarctica/Casey
            * `Antarctica/Davis` - Antarctica/Davis
            * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
            * `Antarctica/Macquarie` - Antarctica/Macquarie
            * `Antarctica/Mawson` - Antarctica/Mawson
            * `Antarctica/McMurdo` - Antarctica/McMurdo
            * `Antarctica/Palmer` - Antarctica/Palmer
            * `Antarctica/Rothera` - Antarctica/Rothera
            * `Antarctica/Syowa` - Antarctica/Syowa
            * `Antarctica/Troll` - Antarctica/Troll
            * `Antarctica/Vostok` - Antarctica/Vostok
            * `Arctic/Longyearbyen` - Arctic/Longyearbyen
            * `Asia/Aden` - Asia/Aden
            * `Asia/Almaty` - Asia/Almaty
            * `Asia/Amman` - Asia/Amman
            * `Asia/Anadyr` - Asia/Anadyr
            * `Asia/Aqtau` - Asia/Aqtau
            * `Asia/Aqtobe` - Asia/Aqtobe
            * `Asia/Ashgabat` - Asia/Ashgabat
            * `Asia/Atyrau` - Asia/Atyrau
            * `Asia/Baghdad` - Asia/Baghdad
            * `Asia/Bahrain` - Asia/Bahrain
            * `Asia/Baku` - Asia/Baku
            * `Asia/Bangkok` - Asia/Bangkok
            * `Asia/Barnaul` - Asia/Barnaul
            * `Asia/Beirut` - Asia/Beirut
            * `Asia/Bishkek` - Asia/Bishkek
            * `Asia/Brunei` - Asia/Brunei
            * `Asia/Chita` - Asia/Chita
            * `Asia/Choibalsan` - Asia/Choibalsan
            * `Asia/Colombo` - Asia/Colombo
            * `Asia/Damascus` - Asia/Damascus
            * `Asia/Dhaka` - Asia/Dhaka
            * `Asia/Dili` - Asia/Dili
            * `Asia/Dubai` - Asia/Dubai
            * `Asia/Dushanbe` - Asia/Dushanbe
            * `Asia/Famagusta` - Asia/Famagusta
            * `Asia/Gaza` - Asia/Gaza
            * `Asia/Hebron` - Asia/Hebron
            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
            * `Asia/Hong_Kong` - Asia/Hong_Kong
            * `Asia/Hovd` - Asia/Hovd
            * `Asia/Irkutsk` - Asia/Irkutsk
            * `Asia/Jakarta` - Asia/Jakarta
            * `Asia/Jayapura` - Asia/Jayapura
            * `Asia/Jerusalem` - Asia/Jerusalem
            * `Asia/Kabul` - Asia/Kabul
            * `Asia/Kamchatka` - Asia/Kamchatka
            * `Asia/Karachi` - Asia/Karachi
            * `Asia/Kathmandu` - Asia/Kathmandu
            * `Asia/Khandyga` - Asia/Khandyga
            * `Asia/Kolkata` - Asia/Kolkata
            * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
            * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
            * `Asia/Kuching` - Asia/Kuching
            * `Asia/Kuwait` - Asia/Kuwait
            * `Asia/Macau` - Asia/Macau
            * `Asia/Magadan` - Asia/Magadan
            * `Asia/Makassar` - Asia/Makassar
            * `Asia/Manila` - Asia/Manila
            * `Asia/Muscat` - Asia/Muscat
            * `Asia/Nicosia` - Asia/Nicosia
            * `Asia/Novokuznetsk` - Asia/Novokuznetsk
            * `Asia/Novosibirsk` - Asia/Novosibirsk
            * `Asia/Omsk` - Asia/Omsk
            * `Asia/Oral` - Asia/Oral
            * `Asia/Phnom_Penh` - Asia/Phnom_Penh
            * `Asia/Pontianak` - Asia/Pontianak
            * `Asia/Pyongyang` - Asia/Pyongyang
            * `Asia/Qatar` - Asia/Qatar
            * `Asia/Qostanay` - Asia/Qostanay
            * `Asia/Qyzylorda` - Asia/Qyzylorda
            * `Asia/Riyadh` - Asia/Riyadh
            * `Asia/Sakhalin` - Asia/Sakhalin
            * `Asia/Samarkand` - Asia/Samarkand
            * `Asia/Seoul` - Asia/Seoul
            * `Asia/Shanghai` - Asia/Shanghai
            * `Asia/Singapore` - Asia/Singapore
            * `Asia/Srednekolymsk` - Asia/Srednekolymsk
            * `Asia/Taipei` - Asia/Taipei
            * `Asia/Tashkent` - Asia/Tashkent
            * `Asia/Tbilisi` - Asia/Tbilisi
            * `Asia/Tehran` - Asia/Tehran
            * `Asia/Thimphu` - Asia/Thimphu
            * `Asia/Tokyo` - Asia/Tokyo
            * `Asia/Tomsk` - Asia/Tomsk
            * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
            * `Asia/Urumqi` - Asia/Urumqi
            * `Asia/Ust-Nera` - Asia/Ust-Nera
            * `Asia/Vientiane` - Asia/Vientiane
            * `Asia/Vladivostok` - Asia/Vladivostok
            * `Asia/Yakutsk` - Asia/Yakutsk
            * `Asia/Yangon` - Asia/Yangon
            * `Asia/Yekaterinburg` - Asia/Yekaterinburg
            * `Asia/Yerevan` - Asia/Yerevan
            * `Atlantic/Azores` - Atlantic/Azores
            * `Atlantic/Bermuda` - Atlantic/Bermuda
            * `Atlantic/Canary` - Atlantic/Canary
            * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
            * `Atlantic/Faroe` - Atlantic/Faroe
            * `Atlantic/Madeira` - Atlantic/Madeira
            * `Atlantic/Reykjavik` - Atlantic/Reykjavik
            * `Atlantic/South_Georgia` - Atlantic/South_Georgia
            * `Atlantic/St_Helena` - Atlantic/St_Helena
            * `Atlantic/Stanley` - Atlantic/Stanley
            * `Australia/Adelaide` - Australia/Adelaide
            * `Australia/Brisbane` - Australia/Brisbane
            * `Australia/Broken_Hill` - Australia/Broken_Hill
            * `Australia/Darwin` - Australia/Darwin
            * `Australia/Eucla` - Australia/Eucla
            * `Australia/Hobart` - Australia/Hobart
            * `Australia/Lindeman` - Australia/Lindeman
            * `Australia/Lord_Howe` - Australia/Lord_Howe
            * `Australia/Melbourne` - Australia/Melbourne
            * `Australia/Perth` - Australia/Perth
            * `Australia/Sydney` - Australia/Sydney
            * `Canada/Atlantic` - Canada/Atlantic
            * `Canada/Central` - Canada/Central
            * `Canada/Eastern` - Canada/Eastern
            * `Canada/Mountain` - Canada/Mountain
            * `Canada/Newfoundland` - Canada/Newfoundland
            * `Canada/Pacific` - Canada/Pacific
            * `Europe/Amsterdam` - Europe/Amsterdam
            * `Europe/Andorra` - Europe/Andorra
            * `Europe/Astrakhan` - Europe/Astrakhan
            * `Europe/Athens` - Europe/Athens
            * `Europe/Belgrade` - Europe/Belgrade
            * `Europe/Berlin` - Europe/Berlin
            * `Europe/Bratislava` - Europe/Bratislava
            * `Europe/Brussels` - Europe/Brussels
            * `Europe/Bucharest` - Europe/Bucharest
            * `Europe/Budapest` - Europe/Budapest
            * `Europe/Busingen` - Europe/Busingen
            * `Europe/Chisinau` - Europe/Chisinau
            * `Europe/Copenhagen` - Europe/Copenhagen
            * `Europe/Dublin` - Europe/Dublin
            * `Europe/Gibraltar` - Europe/Gibraltar
            * `Europe/Guernsey` - Europe/Guernsey
            * `Europe/Helsinki` - Europe/Helsinki
            * `Europe/Isle_of_Man` - Europe/Isle_of_Man
            * `Europe/Istanbul` - Europe/Istanbul
            * `Europe/Jersey` - Europe/Jersey
            * `Europe/Kaliningrad` - Europe/Kaliningrad
            * `Europe/Kirov` - Europe/Kirov
            * `Europe/Kyiv` - Europe/Kyiv
            * `Europe/Lisbon` - Europe/Lisbon
            * `Europe/Ljubljana` - Europe/Ljubljana
            * `Europe/London` - Europe/London
            * `Europe/Luxembourg` - Europe/Luxembourg
            * `Europe/Madrid` - Europe/Madrid
            * `Europe/Malta` - Europe/Malta
            * `Europe/Mariehamn` - Europe/Mariehamn
            * `Europe/Minsk` - Europe/Minsk
            * `Europe/Monaco` - Europe/Monaco
            * `Europe/Moscow` - Europe/Moscow
            * `Europe/Oslo` - Europe/Oslo
            * `Europe/Paris` - Europe/Paris
            * `Europe/Podgorica` - Europe/Podgorica
            * `Europe/Prague` - Europe/Prague
            * `Europe/Riga` - Europe/Riga
            * `Europe/Rome` - Europe/Rome
            * `Europe/Samara` - Europe/Samara
            * `Europe/San_Marino` - Europe/San_Marino
            * `Europe/Sarajevo` - Europe/Sarajevo
            * `Europe/Saratov` - Europe/Saratov
            * `Europe/Simferopol` - Europe/Simferopol
            * `Europe/Skopje` - Europe/Skopje
            * `Europe/Sofia` - Europe/Sofia
            * `Europe/Stockholm` - Europe/Stockholm
            * `Europe/Tallinn` - Europe/Tallinn
            * `Europe/Tirane` - Europe/Tirane
            * `Europe/Ulyanovsk` - Europe/Ulyanovsk
            * `Europe/Vaduz` - Europe/Vaduz
            * `Europe/Vatican` - Europe/Vatican
            * `Europe/Vienna` - Europe/Vienna
            * `Europe/Vilnius` - Europe/Vilnius
            * `Europe/Volgograd` - Europe/Volgograd
            * `Europe/Warsaw` - Europe/Warsaw
            * `Europe/Zagreb` - Europe/Zagreb
            * `Europe/Zurich` - Europe/Zurich
            * `GMT` - GMT
            * `Indian/Antananarivo` - Indian/Antananarivo
            * `Indian/Chagos` - Indian/Chagos
            * `Indian/Christmas` - Indian/Christmas
            * `Indian/Cocos` - Indian/Cocos
            * `Indian/Comoro` - Indian/Comoro
            * `Indian/Kerguelen` - Indian/Kerguelen
            * `Indian/Mahe` - Indian/Mahe
            * `Indian/Maldives` - Indian/Maldives
            * `Indian/Mauritius` - Indian/Mauritius
            * `Indian/Mayotte` - Indian/Mayotte
            * `Indian/Reunion` - Indian/Reunion
            * `Pacific/Apia` - Pacific/Apia
            * `Pacific/Auckland` - Pacific/Auckland
            * `Pacific/Bougainville` - Pacific/Bougainville
            * `Pacific/Chatham` - Pacific/Chatham
            * `Pacific/Chuuk` - Pacific/Chuuk
            * `Pacific/Easter` - Pacific/Easter
            * `Pacific/Efate` - Pacific/Efate
            * `Pacific/Fakaofo` - Pacific/Fakaofo
            * `Pacific/Fiji` - Pacific/Fiji
            * `Pacific/Funafuti` - Pacific/Funafuti
            * `Pacific/Galapagos` - Pacific/Galapagos
            * `Pacific/Gambier` - Pacific/Gambier
            * `Pacific/Guadalcanal` - Pacific/Guadalcanal
            * `Pacific/Guam` - Pacific/Guam
            * `Pacific/Honolulu` - Pacific/Honolulu
            * `Pacific/Kanton` - Pacific/Kanton
            * `Pacific/Kiritimati` - Pacific/Kiritimati
            * `Pacific/Kosrae` - Pacific/Kosrae
            * `Pacific/Kwajalein` - Pacific/Kwajalein
            * `Pacific/Majuro` - Pacific/Majuro
            * `Pacific/Marquesas` - Pacific/Marquesas
            * `Pacific/Midway` - Pacific/Midway
            * `Pacific/Nauru` - Pacific/Nauru
            * `Pacific/Niue` - Pacific/Niue
            * `Pacific/Norfolk` - Pacific/Norfolk
            * `Pacific/Noumea` - Pacific/Noumea
            * `Pacific/Pago_Pago` - Pacific/Pago_Pago
            * `Pacific/Palau` - Pacific/Palau
            * `Pacific/Pitcairn` - Pacific/Pitcairn
            * `Pacific/Pohnpei` - Pacific/Pohnpei
            * `Pacific/Port_Moresby` - Pacific/Port_Moresby
            * `Pacific/Rarotonga` - Pacific/Rarotonga
            * `Pacific/Saipan` - Pacific/Saipan
            * `Pacific/Tahiti` - Pacific/Tahiti
            * `Pacific/Tarawa` - Pacific/Tarawa
            * `Pacific/Tongatapu` - Pacific/Tongatapu
            * `Pacific/Wake` - Pacific/Wake
            * `Pacific/Wallis` - Pacific/Wallis
            * `US/Alaska` - US/Alaska
            * `US/Arizona` - US/Arizona
            * `US/Central` - US/Central
            * `US/Eastern` - US/Eastern
            * `US/Hawaii` - US/Hawaii
            * `US/Mountain` - US/Mountain
            * `US/Pacific` - US/Pacific
            * `UTC` - UTC
        description:
          type: string
          nullable: true
          description: Description of this schedule
      required:
      - name
    SimpleScheduleRequest:
      type: object
      description: Simple schedule serializer for nested responses
      properties:
        name:
          type: string
          minLength: 1
          description: Name of this schedule
          maxLength: 100
        is_default:
          type: boolean
          description: Whether this is the default schedule
        timezone:
          allOf:
          - $ref: '#/components/schemas/TimezoneEnum'
          description: |-
            Timezone for this schedule

            * `Africa/Abidjan` - Africa/Abidjan
            * `Africa/Accra` - Africa/Accra
            * `Africa/Addis_Ababa` - Africa/Addis_Ababa
            * `Africa/Algiers` - Africa/Algiers
            * `Africa/Asmara` - Africa/Asmara
            * `Africa/Bamako` - Africa/Bamako
            * `Africa/Bangui` - Africa/Bangui
            * `Africa/Banjul` - Africa/Banjul
            * `Africa/Bissau` - Africa/Bissau
            * `Africa/Blantyre` - Africa/Blantyre
            * `Africa/Brazzaville` - Africa/Brazzaville
            * `Africa/Bujumbura` - Africa/Bujumbura
            * `Africa/Cairo` - Africa/Cairo
            * `Africa/Casablanca` - Africa/Casablanca
            * `Africa/Ceuta` - Africa/Ceuta
            * `Africa/Conakry` - Africa/Conakry
            * `Africa/Dakar` - Africa/Dakar
            * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
            * `Africa/Djibouti` - Africa/Djibouti
            * `Africa/Douala` - Africa/Douala
            * `Africa/El_Aaiun` - Africa/El_Aaiun
            * `Africa/Freetown` - Africa/Freetown
            * `Africa/Gaborone` - Africa/Gaborone
            * `Africa/Harare` - Africa/Harare
            * `Africa/Johannesburg` - Africa/Johannesburg
            * `Africa/Juba` - Africa/Juba
            * `Africa/Kampala` - Africa/Kampala
            * `Africa/Khartoum` - Africa/Khartoum
            * `Africa/Kigali` - Africa/Kigali
            * `Africa/Kinshasa` - Africa/Kinshasa
            * `Africa/Lagos` - Africa/Lagos
            * `Africa/Libreville` - Africa/Libreville
            * `Africa/Lome` - Africa/Lome
            * `Africa/Luanda` - Africa/Luanda
            * `Africa/Lubumbashi` - Africa/Lubumbashi
            * `Africa/Lusaka` - Africa/Lusaka
            * `Africa/Malabo` - Africa/Malabo
            * `Africa/Maputo` - Africa/Maputo
            * `Africa/Maseru` - Africa/Maseru
            * `Africa/Mbabane` - Africa/Mbabane
            * `Africa/Mogadishu` - Africa/Mogadishu
            * `Africa/Monrovia` - Africa/Monrovia
            * `Africa/Nairobi` - Africa/Nairobi
            * `Africa/Ndjamena` - Africa/Ndjamena
            * `Africa/Niamey` - Africa/Niamey
            * `Africa/Nouakchott` - Africa/Nouakchott
            * `Africa/Ouagadougou` - Africa/Ouagadougou
            * `Africa/Porto-Novo` - Africa/Porto-Novo
            * `Africa/Sao_Tome` - Africa/Sao_Tome
            * `Africa/Tripoli` - Africa/Tripoli
            * `Africa/Tunis` - Africa/Tunis
            * `Africa/Windhoek` - Africa/Windhoek
            * `America/Adak` - America/Adak
            * `America/Anchorage` - America/Anchorage
            * `America/Anguilla` - America/Anguilla
            * `America/Antigua` - America/Antigua
            * `America/Araguaina` - America/Araguaina
            * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
            * `America/Argentina/Catamarca` - America/Argentina/Catamarca
            * `America/Argentina/Cordoba` - America/Argentina/Cordoba
            * `America/Argentina/Jujuy` - America/Argentina/Jujuy
            * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
            * `America/Argentina/Mendoza` - America/Argentina/Mendoza
            * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
            * `America/Argentina/Salta` - America/Argentina/Salta
            * `America/Argentina/San_Juan` - America/Argentina/San_Juan
            * `America/Argentina/San_Luis` - America/Argentina/San_Luis
            * `America/Argentina/Tucuman` - America/Argentina/Tucuman
            * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
            * `America/Aruba` - America/Aruba
            * `America/Asuncion` - America/Asuncion
            * `America/Atikokan` - America/Atikokan
            * `America/Bahia` - America/Bahia
            * `America/Bahia_Banderas` - America/Bahia_Banderas
            * `America/Barbados` - America/Barbados
            * `America/Belem` - America/Belem
            * `America/Belize` - America/Belize
            * `America/Blanc-Sablon` - America/Blanc-Sablon
            * `America/Boa_Vista` - America/Boa_Vista
            * `America/Bogota` - America/Bogota
            * `America/Boise` - America/Boise
            * `America/Cambridge_Bay` - America/Cambridge_Bay
            * `America/Campo_Grande` - America/Campo_Grande
            * `America/Cancun` - America/Cancun
            * `America/Caracas` - America/Caracas
            * `America/Cayenne` - America/Cayenne
            * `America/Cayman` - America/Cayman
            * `America/Chicago` - America/Chicago
            * `America/Chihuahua` - America/Chihuahua
            * `America/Ciudad_Juarez` - America/Ciudad_Juarez
            * `America/Costa_Rica` - America/Costa_Rica
            * `America/Creston` - America/Creston
            * `America/Cuiaba` - America/Cuiaba
            * `America/Curacao` - America/Curacao
            * `America/Danmarkshavn` - America/Danmarkshavn
            * `America/Dawson` - America/Dawson
            * `America/Dawson_Creek` - America/Dawson_Creek
            * `America/Denver` - America/Denver
            * `America/Detroit` - America/Detroit
            * `America/Dominica` - America/Dominica
            * `America/Edmonton` - America/Edmonton
            * `America/Eirunepe` - America/Eirunepe
            * `America/El_Salvador` - America/El_Salvador
            * `America/Fort_Nelson` - America/Fort_Nelson
            * `America/Fortaleza` - America/Fortaleza
            * `America/Glace_Bay` - America/Glace_Bay
            * `America/Goose_Bay` - America/Goose_Bay
            * `America/Grand_Turk` - America/Grand_Turk
            * `America/Grenada` - America/Grenada
            * `America/Guadeloupe` - America/Guadeloupe
            * `America/Guatemala` - America/Guatemala
            * `America/Guayaquil` - America/Guayaquil
            * `America/Guyana` - America/Guyana
            * `America/Halifax` - America/Halifax
            * `America/Havana` - America/Havana
            * `America/Hermosillo` - America/Hermosillo
            * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
            * `America/Indiana/Knox` - America/Indiana/Knox
            * `America/Indiana/Marengo` - America/Indiana/Marengo
            * `America/Indiana/Petersburg` - America/Indiana/Petersburg
            * `America/Indiana/Tell_City` - America/Indiana/Tell_City
            * `America/Indiana/Vevay` - America/Indiana/Vevay
            * `America/Indiana/Vincennes` - America/Indiana/Vincennes
            * `America/Indiana/Winamac` - America/Indiana/Winamac
            * `America/Inuvik` - America/Inuvik
            * `America/Iqaluit` - America/Iqaluit
            * `America/Jamaica` - America/Jamaica
            * `America/Juneau` - America/Juneau
            * `America/Kentucky/Louisville` - America/Kentucky/Louisville
            * `America/Kentucky/Monticello` - America/Kentucky/Monticello
            * `America/Kralendijk` - America/Kralendijk
            * `America/La_Paz` - America/La_Paz
            * `America/Lima` - America/Lima
            * `America/Los_Angeles` - America/Los_Angeles
            * `America/Lower_Princes` - America/Lower_Princes
            * `America/Maceio` - America/Maceio
            * `America/Managua` - America/Managua
            * `America/Manaus` - America/Manaus
            * `America/Marigot` - America/Marigot
            * `America/Martinique` - America/Martinique
            * `America/Matamoros` - America/Matamoros
            * `America/Mazatlan` - America/Mazatlan
            * `America/Menominee` - America/Menominee
            * `America/Merida` - America/Merida
            * `America/Metlakatla` - America/Metlakatla
            * `America/Mexico_City` - America/Mexico_City
            * `America/Miquelon` - America/Miquelon
            * `America/Moncton` - America/Moncton
            * `America/Monterrey` - America/Monterrey
            * `America/Montevideo` - America/Montevideo
            * `America/Montserrat` - America/Montserrat
            * `America/Nassau` - America/Nassau
            * `America/New_York` - America/New_York
            * `America/Nome` - America/Nome
            * `America/Noronha` - America/Noronha
            * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
            * `America/North_Dakota/Center` - America/North_Dakota/Center
            * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
            * `America/Nuuk` - America/Nuuk
            * `America/Ojinaga` - America/Ojinaga
            * `America/Panama` - America/Panama
            * `America/Paramaribo` - America/Paramaribo
            * `America/Phoenix` - America/Phoenix
            * `America/Port-au-Prince` - America/Port-au-Prince
            * `America/Port_of_Spain` - America/Port_of_Spain
            * `America/Porto_Velho` - America/Porto_Velho
            * `America/Puerto_Rico` - America/Puerto_Rico
            * `America/Punta_Arenas` - America/Punta_Arenas
            * `America/Rankin_Inlet` - America/Rankin_Inlet
            * `America/Recife` - America/Recife
            * `America/Regina` - America/Regina
            * `America/Resolute` - America/Resolute
            * `America/Rio_Branco` - America/Rio_Branco
            * `America/Santarem` - America/Santarem
            * `America/Santiago` - America/Santiago
            * `America/Santo_Domingo` - America/Santo_Domingo
            * `America/Sao_Paulo` - America/Sao_Paulo
            * `America/Scoresbysund` - America/Scoresbysund
            * `America/Sitka` - America/Sitka
            * `America/St_Barthelemy` - America/St_Barthelemy
            * `America/St_Johns` - America/St_Johns
            * `America/St_Kitts` - America/St_Kitts
            * `America/St_Lucia` - America/St_Lucia
            * `America/St_Thomas` - America/St_Thomas
            * `America/St_Vincent` - America/St_Vincent
            * `America/Swift_Current` - America/Swift_Current
            * `America/Tegucigalpa` - America/Tegucigalpa
            * `America/Thule` - America/Thule
            * `America/Tijuana` - America/Tijuana
            * `America/Toronto` - America/Toronto
            * `America/Tortola` - America/Tortola
            * `America/Vancouver` - America/Vancouver
            * `America/Whitehorse` - America/Whitehorse
            * `America/Winnipeg` - America/Winnipeg
            * `America/Yakutat` - America/Yakutat
            * `Antarctica/Casey` - Antarctica/Casey
            * `Antarctica/Davis` - Antarctica/Davis
            * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
            * `Antarctica/Macquarie` - Antarctica/Macquarie
            * `Antarctica/Mawson` - Antarctica/Mawson
            * `Antarctica/McMurdo` - Antarctica/McMurdo
            * `Antarctica/Palmer` - Antarctica/Palmer
            * `Antarctica/Rothera` - Antarctica/Rothera
            * `Antarctica/Syowa` - Antarctica/Syowa
            * `Antarctica/Troll` - Antarctica/Troll
            * `Antarctica/Vostok` - Antarctica/Vostok
            * `Arctic/Longyearbyen` - Arctic/Longyearbyen
            * `Asia/Aden` - Asia/Aden
            * `Asia/Almaty` - Asia/Almaty
            * `Asia/Amman` - Asia/Amman
            * `Asia/Anadyr` - Asia/Anadyr
            * `Asia/Aqtau` - Asia/Aqtau
            * `Asia/Aqtobe` - Asia/Aqtobe
            * `Asia/Ashgabat` - Asia/Ashgabat
            * `Asia/Atyrau` - Asia/Atyrau
            * `Asia/Baghdad` - Asia/Baghdad
            * `Asia/Bahrain` - Asia/Bahrain
            * `Asia/Baku` - Asia/Baku
            * `Asia/Bangkok` - Asia/Bangkok
            * `Asia/Barnaul` - Asia/Barnaul
            * `Asia/Beirut` - Asia/Beirut
            * `Asia/Bishkek` - Asia/Bishkek
            * `Asia/Brunei` - Asia/Brunei
            * `Asia/Chita` - Asia/Chita
            * `Asia/Choibalsan` - Asia/Choibalsan
            * `Asia/Colombo` - Asia/Colombo
            * `Asia/Damascus` - Asia/Damascus
            * `Asia/Dhaka` - Asia/Dhaka
            * `Asia/Dili` - Asia/Dili
            * `Asia/Dubai` - Asia/Dubai
            * `Asia/Dushanbe` - Asia/Dushanbe
            * `Asia/Famagusta` - Asia/Famagusta
            * `Asia/Gaza` - Asia/Gaza
            * `Asia/Hebron` - Asia/Hebron
            * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
            * `Asia/Hong_Kong` - Asia/Hong_Kong
            * `Asia/Hovd` - Asia/Hovd
            * `Asia/Irkutsk` - Asia/Irkutsk
            * `Asia/Jakarta` - Asia/Jakarta
            * `Asia/Jayapura` - Asia/Jayapura
            * `Asia/Jerusalem` - Asia/Jerusalem
            * `Asia/Kabul` - Asia/Kabul
            * `Asia/Kamchatka` - Asia/Kamchatka
            * `Asia/Karachi` - Asia/Karachi
            * `Asia/Kathmandu` - Asia/Kathmandu
            * `Asia/Khandyga` - Asia/Khandyga
            * `Asia/Kolkata` - Asia/Kolkata
            * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
            * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
            * `Asia/Kuching` - Asia/Kuching
            * `Asia/Kuwait` - Asia/Kuwait
            * `Asia/Macau` - Asia/Macau
            * `Asia/Magadan` - Asia/Magadan
            * `Asia/Makassar` - Asia/Makassar
            * `Asia/Manila` - Asia/Manila
            * `Asia/Muscat` - Asia/Muscat
            * `Asia/Nicosia` - Asia/Nicosia
            * `Asia/Novokuznetsk` - Asia/Novokuznetsk
            * `Asia/Novosibirsk` - Asia/Novosibirsk
            * `Asia/Omsk` - Asia/Omsk
            * `Asia/Oral` - Asia/Oral
            * `Asia/Phnom_Penh` - Asia/Phnom_Penh
            * `Asia/Pontianak` - Asia/Pontianak
            * `Asia/Pyongyang` - Asia/Pyongyang
            * `Asia/Qatar` - Asia/Qatar
            * `Asia/Qostanay` - Asia/Qostanay
            * `Asia/Qyzylorda` - Asia/Qyzylorda
            * `Asia/Riyadh` - Asia/Riyadh
            * `Asia/Sakhalin` - Asia/Sakhalin
            * `Asia/Samarkand` - Asia/Samarkand
            * `Asia/Seoul` - Asia/Seoul
            * `Asia/Shanghai` - Asia/Shanghai
            * `Asia/Singapore` - Asia/Singapore
            * `Asia/Srednekolymsk` - Asia/Srednekolymsk
            * `Asia/Taipei` - Asia/Taipei
            * `Asia/Tashkent` - Asia/Tashkent
            * `Asia/Tbilisi` - Asia/Tbilisi
            * `Asia/Tehran` - Asia/Tehran
            * `Asia/Thimphu` - Asia/Thimphu
            * `Asia/Tokyo` - Asia/Tokyo
            * `Asia/Tomsk` - Asia/Tomsk
            * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
            * `Asia/Urumqi` - Asia/Urumqi
            * `Asia/Ust-Nera` - Asia/Ust-Nera
            * `Asia/Vientiane` - Asia/Vientiane
            * `Asia/Vladivostok` - Asia/Vladivostok
            * `Asia/Yakutsk` - Asia/Yakutsk
            * `Asia/Yangon` - Asia/Yangon
            * `Asia/Yekaterinburg` - Asia/Yekaterinburg
            * `Asia/Yerevan` - Asia/Yerevan
            * `Atlantic/Azores` - Atlantic/Azores
            * `Atlantic/Bermuda` - Atlantic/Bermuda
            * `Atlantic/Canary` - Atlantic/Canary
            * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
            * `Atlantic/Faroe` - Atlantic/Faroe
            * `Atlantic/Madeira` - Atlantic/Madeira
            * `Atlantic/Reykjavik` - Atlantic/Reykjavik
            * `Atlantic/South_Georgia` - Atlantic/South_Georgia
            * `Atlantic/St_Helena` - Atlantic/St_Helena
            * `Atlantic/Stanley` - Atlantic/Stanley
            * `Australia/Adelaide` - Australia/Adelaide
            * `Australia/Brisbane` - Australia/Brisbane
            * `Australia/Broken_Hill` - Australia/Broken_Hill
            * `Australia/Darwin` - Australia/Darwin
            * `Australia/Eucla` - Australia/Eucla
            * `Australia/Hobart` - Australia/Hobart
            * `Australia/Lindeman` - Australia/Lindeman
            * `Australia/Lord_Howe` - Australia/Lord_Howe
            * `Australia/Melbourne` - Australia/Melbourne
            * `Australia/Perth` - Australia/Perth
            * `Australia/Sydney` - Australia/Sydney
            * `Canada/Atlantic` - Canada/Atlantic
            * `Canada/Central` - Canada/Central
            * `Canada/Eastern` - Canada/Eastern
            * `Canada/Mountain` - Canada/Mountain
            * `Canada/Newfoundland` - Canada/Newfoundland
            * `Canada/Pacific` - Canada/Pacific
            * `Europe/Amsterdam` - Europe/Amsterdam
            * `Europe/Andorra` - Europe/Andorra
            * `Europe/Astrakhan` - Europe/Astrakhan
            * `Europe/Athens` - Europe/Athens
            * `Europe/Belgrade` - Europe/Belgrade
            * `Europe/Berlin` - Europe/Berlin
            * `Europe/Bratislava` - Europe/Bratislava
            * `Europe/Brussels` - Europe/Brussels
            * `Europe/Bucharest` - Europe/Bucharest
            * `Europe/Budapest` - Europe/Budapest
            * `Europe/Busingen` - Europe/Busingen
            * `Europe/Chisinau` - Europe/Chisinau
            * `Europe/Copenhagen` - Europe/Copenhagen
            * `Europe/Dublin` - Europe/Dublin
            * `Europe/Gibraltar` - Europe/Gibraltar
            * `Europe/Guernsey` - Europe/Guernsey
            * `Europe/Helsinki` - Europe/Helsinki
            * `Europe/Isle_of_Man` - Europe/Isle_of_Man
            * `Europe/Istanbul` - Europe/Istanbul
            * `Europe/Jersey` - Europe/Jersey
            * `Europe/Kaliningrad` - Europe/Kaliningrad
            * `Europe/Kirov` - Europe/Kirov
            * `Europe/Kyiv` - Europe/Kyiv
            * `Europe/Lisbon` - Europe/Lisbon
            * `Europe/Ljubljana` - Europe/Ljubljana
            * `Europe/London` - Europe/London
            * `Europe/Luxembourg` - Europe/Luxembourg
            * `Europe/Madrid` - Europe/Madrid
            * `Europe/Malta` - Europe/Malta
            * `Europe/Mariehamn` - Europe/Mariehamn
            * `Europe/Minsk` - Europe/Minsk
            * `Europe/Monaco` - Europe/Monaco
            * `Europe/Moscow` - Europe/Moscow
            * `Europe/Oslo` - Europe/Oslo
            * `Europe/Paris` - Europe/Paris
            * `Europe/Podgorica` - Europe/Podgorica
            * `Europe/Prague` - Europe/Prague
            * `Europe/Riga` - Europe/Riga
            * `Europe/Rome` - Europe/Rome
            * `Europe/Samara` - Europe/Samara
            * `Europe/San_Marino` - Europe/San_Marino
            * `Europe/Sarajevo` - Europe/Sarajevo
            * `Europe/Saratov` - Europe/Saratov
            * `Europe/Simferopol` - Europe/Simferopol
            * `Europe/Skopje` - Europe/Skopje
            * `Europe/Sofia` - Europe/Sofia
            * `Europe/Stockholm` - Europe/Stockholm
            * `Europe/Tallinn` - Europe/Tallinn
            * `Europe/Tirane` - Europe/Tirane
            * `Europe/Ulyanovsk` - Europe/Ulyanovsk
            * `Europe/Vaduz` - Europe/Vaduz
            * `Europe/Vatican` - Europe/Vatican
            * `Europe/Vienna` - Europe/Vienna
            * `Europe/Vilnius` - Europe/Vilnius
            * `Europe/Volgograd` - Europe/Volgograd
            * `Europe/Warsaw` - Europe/Warsaw
            * `Europe/Zagreb` - Europe/Zagreb
            * `Europe/Zurich` - Europe/Zurich
            * `GMT` - GMT
            * `Indian/Antananarivo` - Indian/Antananarivo
            * `Indian/Chagos` - Indian/Chagos
            * `Indian/Christmas` - Indian/Christmas
            * `Indian/Cocos` - Indian/Cocos
            * `Indian/Comoro` - Indian/Comoro
            * `Indian/Kerguelen` - Indian/Kerguelen
            * `Indian/Mahe` - Indian/Mahe
            * `Indian/Maldives` - Indian/Maldives
            * `Indian/Mauritius` - Indian/Mauritius
            * `Indian/Mayotte` - Indian/Mayotte
            * `Indian/Reunion` - Indian/Reunion
            * `Pacific/Apia` - Pacific/Apia
            * `Pacific/Auckland` - Pacific/Auckland
            * `Pacific/Bougainville` - Pacific/Bougainville
            * `Pacific/Chatham` - Pacific/Chatham
            * `Pacific/Chuuk` - Pacific/Chuuk
            * `Pacific/Easter` - Pacific/Easter
            * `Pacific/Efate` - Pacific/Efate
            * `Pacific/Fakaofo` - Pacific/Fakaofo
            * `Pacific/Fiji` - Pacific/Fiji
            * `Pacific/Funafuti` - Pacific/Funafuti
            * `Pacific/Galapagos` - Pacific/Galapagos
            * `Pacific/Gambier` - Pacific/Gambier
            * `Pacific/Guadalcanal` - Pacific/Guadalcanal
            * `Pacific/Guam` - Pacific/Guam
            * `Pacific/Honolulu` - Pacific/Honolulu
            * `Pacific/Kanton` - Pacific/Kanton
            * `Pacific/Kiritimati` - Pacific/Kiritimati
            * `Pacific/Kosrae` - Pacific/Kosrae
            * `Pacific/Kwajalein` - Pacific/Kwajalein
            * `Pacific/Majuro` - Pacific/Majuro
            * `Pacific/Marquesas` - Pacific/Marquesas
            * `Pacific/Midway` - Pacific/Midway
            * `Pacific/Nauru` - Pacific/Nauru
            * `Pacific/Niue` - Pacific/Niue
            * `Pacific/Norfolk` - Pacific/Norfolk
            * `Pacific/Noumea` - Pacific/Noumea
            * `Pacific/Pago_Pago` - Pacific/Pago_Pago
            * `Pacific/Palau` - Pacific/Palau
            * `Pacific/Pitcairn` - Pacific/Pitcairn
            * `Pacific/Pohnpei` - Pacific/Pohnpei
            * `Pacific/Port_Moresby` - Pacific/Port_Moresby
            * `Pacific/Rarotonga` - Pacific/Rarotonga
            * `Pacific/Saipan` - Pacific/Saipan
            * `Pacific/Tahiti` - Pacific/Tahiti
            * `Pacific/Tarawa` - Pacific/Tarawa
            * `Pacific/Tongatapu` - Pacific/Tongatapu
            * `Pacific/Wake` - Pacific/Wake
            * `Pacific/Wallis` - Pacific/Wallis
            * `US/Alaska` - US/Alaska
            * `US/Arizona` - US/Arizona
            * `US/Central` - US/Central
            * `US/Eastern` - US/Eastern
            * `US/Hawaii` - US/Hawaii
            * `US/Mountain` - US/Mountain
            * `US/Pacific` - US/Pacific
            * `UTC` - UTC
        description:
          type: string
          nullable: true
          description: Description of this schedule
      required:
      - name
    Specialization:
      type: object
      description: Serializer for practitioner specializations
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
    SpecializationRequest:
      type: object
      description: Serializer for practitioner specializations
      properties:
        content:
          type: string
          nullable: true
    State:
      type: object
      description: Serializer for State/Province model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        code:
          type: string
          description: State/province code (e.g., 'CA', 'ON', 'NSW')
          maxLength: 10
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        country:
          type: integer
        country_name:
          type: string
          readOnly: true
        country_code:
          type: string
          readOnly: true
        is_active:
          type: boolean
        meta_title:
          type: string
          nullable: true
          maxLength: 200
        meta_description:
          type: string
          nullable: true
      required:
      - code
      - country
      - name
    Status8faEnum:
      enum:
      - draft
      - pending_payment
      - confirmed
      - in_progress
      - completed
      - canceled
      - no_show
      type: string
      description: |-
        * `draft` - Draft
        * `pending_payment` - Pending Payment
        * `confirmed` - Confirmed
        * `in_progress` - In Progress
        * `completed` - Completed
        * `canceled` - Canceled
        * `no_show` - No Show
    StatusBa5Enum:
      enum:
      - draft
      - active
      - inactive
      - archived
      type: string
      description: |-
        * `draft` - Draft
        * `active` - Active
        * `inactive` - Inactive
        * `archived` - Archived
    Stream:
      type: object
      description: Serializer for content streams.
      properties:
        id:
          type: integer
          readOnly: true
        public_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Public UUID for API exposure
        practitioner:
          type: integer
          readOnly: true
        practitioner_id:
          type: integer
          readOnly: true
        practitioner_name:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        tagline:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
        about:
          type: string
          nullable: true
          description: Detailed about section
        cover_image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        profile_image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        intro_video_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        categories:
          type: array
          items:
            $ref: '#/components/schemas/StreamCategory'
          readOnly: true
        tags: {}
        free_tier_name:
          type: string
          maxLength: 50
        entry_tier_name:
          type: string
          maxLength: 50
        premium_tier_name:
          type: string
          maxLength: 50
        entry_tier_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 100
          description: Monthly price in cents for entry tier
        premium_tier_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 100
          description: Monthly price in cents for premium tier
        free_tier_description:
          type: string
          nullable: true
        entry_tier_description:
          type: string
          nullable: true
        premium_tier_description:
          type: string
          nullable: true
        free_tier_perks: {}
        entry_tier_perks: {}
        premium_tier_perks: {}
        is_active:
          type: boolean
        is_featured:
          type: boolean
        allow_comments:
          type: boolean
        allow_dms:
          type: boolean
        allow_tips:
          type: boolean
        preview_post_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Number of posts non-subscribers can preview
        watermark_media:
          type: boolean
          description: Add watermark to media for lower tiers
        subscriber_count:
          type: integer
          readOnly: true
        free_subscriber_count:
          type: integer
          readOnly: true
        paid_subscriber_count:
          type: integer
          readOnly: true
        post_count:
          type: integer
          readOnly: true
        total_revenue_cents:
          type: integer
          readOnly: true
        commission_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Platform commission percentage
        launched_at:
          type: string
          format: date-time
          nullable: true
        is_launched:
          type: string
          readOnly: true
        is_subscribed:
          type: string
          readOnly: true
        subscription_tier:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - description
      - entry_tier_price_cents
      - premium_tier_price_cents
      - title
    StreamCategory:
      type: object
      description: Serializer for stream categories.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          maxLength: 50
        is_active:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - slug
    StreamCategoryRequest:
      type: object
      description: Serializer for stream categories.
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        slug:
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
          maxLength: 50
        is_active:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - name
      - slug
    StreamRequest:
      type: object
      description: Serializer for content streams.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        tagline:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          minLength: 1
        about:
          type: string
          nullable: true
          description: Detailed about section
        cover_image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        profile_image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        intro_video_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        category_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        tags: {}
        free_tier_name:
          type: string
          minLength: 1
          maxLength: 50
        entry_tier_name:
          type: string
          minLength: 1
          maxLength: 50
        premium_tier_name:
          type: string
          minLength: 1
          maxLength: 50
        entry_tier_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 100
          description: Monthly price in cents for entry tier
        premium_tier_price_cents:
          type: integer
          maximum: 2147483647
          minimum: 100
          description: Monthly price in cents for premium tier
        free_tier_description:
          type: string
          nullable: true
        entry_tier_description:
          type: string
          nullable: true
        premium_tier_description:
          type: string
          nullable: true
        free_tier_perks: {}
        entry_tier_perks: {}
        premium_tier_perks: {}
        is_active:
          type: boolean
        is_featured:
          type: boolean
        allow_comments:
          type: boolean
        allow_dms:
          type: boolean
        allow_tips:
          type: boolean
        preview_post_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Number of posts non-subscribers can preview
        watermark_media:
          type: boolean
          description: Add watermark to media for lower tiers
        commission_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          description: Platform commission percentage
        launched_at:
          type: string
          format: date-time
          nullable: true
      required:
      - description
      - entry_tier_price_cents
      - premium_tier_price_cents
      - title
    StreamSchedule:
      type: object
      description: Serializer for stream schedules.
      properties:
        id:
          type: integer
          readOnly: true
        stream:
          type: integer
        stream_title:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        recurrence_rule:
          type: string
          description: RRULE format for recurrence
          maxLength: 500
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        tier_level:
          $ref: '#/components/schemas/TierLevelEnum'
        is_active:
          type: boolean
        auto_create_days_ahead:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Days ahead to auto-create scheduled streams
        next_occurrence:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        upcoming_streams:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - recurrence_rule
      - stream
      - title
    StreamScheduleRequest:
      type: object
      description: Serializer for stream schedules.
      properties:
        stream:
          type: integer
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        recurrence_rule:
          type: string
          minLength: 1
          description: RRULE format for recurrence
          maxLength: 500
        duration_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        tier_level:
          $ref: '#/components/schemas/TierLevelEnum'
        is_active:
          type: boolean
        auto_create_days_ahead:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Days ahead to auto-create scheduled streams
      required:
      - recurrence_rule
      - stream
      - title
    Style:
      type: object
      description: Serializer for practitioner styles
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
    StyleRequest:
      type: object
      description: Serializer for practitioner styles
      properties:
        content:
          type: string
          nullable: true
    SubscriptionCreate:
      type: object
      description: Serializer for creating subscriptions
      properties:
        tier_id:
          type: string
          format: uuid
        is_annual:
          type: boolean
          default: false
        payment_method_id:
          type: string
      required:
      - tier_id
    SubscriptionCreateRequest:
      type: object
      description: Serializer for creating subscriptions
      properties:
        tier_id:
          type: string
          format: uuid
        is_annual:
          type: boolean
          default: false
        payment_method_id:
          type: string
          minLength: 1
      required:
      - tier_id
    SubscriptionTierRequest:
      type: object
      description: Serializer for subscription tiers
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
        monthly_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        annual_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        features: {}
        is_active:
          type: boolean
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        stripe_product_id:
          type: string
          nullable: true
          description: Stripe Product ID
          maxLength: 255
        stripe_monthly_price_id:
          type: string
          nullable: true
          description: Stripe Price ID for monthly billing
          maxLength: 255
        stripe_annual_price_id:
          type: string
          nullable: true
          description: Stripe Price ID for annual billing
          maxLength: 255
      required:
      - monthly_price
      - name
    TierLevelEnum:
      enum:
      - free
      - entry
      - premium
      type: string
      description: |-
        * `free` - Free
        * `entry` - Entry
        * `premium` - Premium
    TimezoneEnum:
      enum:
      - Africa/Abidjan
      - Africa/Accra
      - Africa/Addis_Ababa
      - Africa/Algiers
      - Africa/Asmara
      - Africa/Bamako
      - Africa/Bangui
      - Africa/Banjul
      - Africa/Bissau
      - Africa/Blantyre
      - Africa/Brazzaville
      - Africa/Bujumbura
      - Africa/Cairo
      - Africa/Casablanca
      - Africa/Ceuta
      - Africa/Conakry
      - Africa/Dakar
      - Africa/Dar_es_Salaam
      - Africa/Djibouti
      - Africa/Douala
      - Africa/El_Aaiun
      - Africa/Freetown
      - Africa/Gaborone
      - Africa/Harare
      - Africa/Johannesburg
      - Africa/Juba
      - Africa/Kampala
      - Africa/Khartoum
      - Africa/Kigali
      - Africa/Kinshasa
      - Africa/Lagos
      - Africa/Libreville
      - Africa/Lome
      - Africa/Luanda
      - Africa/Lubumbashi
      - Africa/Lusaka
      - Africa/Malabo
      - Africa/Maputo
      - Africa/Maseru
      - Africa/Mbabane
      - Africa/Mogadishu
      - Africa/Monrovia
      - Africa/Nairobi
      - Africa/Ndjamena
      - Africa/Niamey
      - Africa/Nouakchott
      - Africa/Ouagadougou
      - Africa/Porto-Novo
      - Africa/Sao_Tome
      - Africa/Tripoli
      - Africa/Tunis
      - Africa/Windhoek
      - America/Adak
      - America/Anchorage
      - America/Anguilla
      - America/Antigua
      - America/Araguaina
      - America/Argentina/Buenos_Aires
      - America/Argentina/Catamarca
      - America/Argentina/Cordoba
      - America/Argentina/Jujuy
      - America/Argentina/La_Rioja
      - America/Argentina/Mendoza
      - America/Argentina/Rio_Gallegos
      - America/Argentina/Salta
      - America/Argentina/San_Juan
      - America/Argentina/San_Luis
      - America/Argentina/Tucuman
      - America/Argentina/Ushuaia
      - America/Aruba
      - America/Asuncion
      - America/Atikokan
      - America/Bahia
      - America/Bahia_Banderas
      - America/Barbados
      - America/Belem
      - America/Belize
      - America/Blanc-Sablon
      - America/Boa_Vista
      - America/Bogota
      - America/Boise
      - America/Cambridge_Bay
      - America/Campo_Grande
      - America/Cancun
      - America/Caracas
      - America/Cayenne
      - America/Cayman
      - America/Chicago
      - America/Chihuahua
      - America/Ciudad_Juarez
      - America/Costa_Rica
      - America/Creston
      - America/Cuiaba
      - America/Curacao
      - America/Danmarkshavn
      - America/Dawson
      - America/Dawson_Creek
      - America/Denver
      - America/Detroit
      - America/Dominica
      - America/Edmonton
      - America/Eirunepe
      - America/El_Salvador
      - America/Fort_Nelson
      - America/Fortaleza
      - America/Glace_Bay
      - America/Goose_Bay
      - America/Grand_Turk
      - America/Grenada
      - America/Guadeloupe
      - America/Guatemala
      - America/Guayaquil
      - America/Guyana
      - America/Halifax
      - America/Havana
      - America/Hermosillo
      - America/Indiana/Indianapolis
      - America/Indiana/Knox
      - America/Indiana/Marengo
      - America/Indiana/Petersburg
      - America/Indiana/Tell_City
      - America/Indiana/Vevay
      - America/Indiana/Vincennes
      - America/Indiana/Winamac
      - America/Inuvik
      - America/Iqaluit
      - America/Jamaica
      - America/Juneau
      - America/Kentucky/Louisville
      - America/Kentucky/Monticello
      - America/Kralendijk
      - America/La_Paz
      - America/Lima
      - America/Los_Angeles
      - America/Lower_Princes
      - America/Maceio
      - America/Managua
      - America/Manaus
      - America/Marigot
      - America/Martinique
      - America/Matamoros
      - America/Mazatlan
      - America/Menominee
      - America/Merida
      - America/Metlakatla
      - America/Mexico_City
      - America/Miquelon
      - America/Moncton
      - America/Monterrey
      - America/Montevideo
      - America/Montserrat
      - America/Nassau
      - America/New_York
      - America/Nome
      - America/Noronha
      - America/North_Dakota/Beulah
      - America/North_Dakota/Center
      - America/North_Dakota/New_Salem
      - America/Nuuk
      - America/Ojinaga
      - America/Panama
      - America/Paramaribo
      - America/Phoenix
      - America/Port-au-Prince
      - America/Port_of_Spain
      - America/Porto_Velho
      - America/Puerto_Rico
      - America/Punta_Arenas
      - America/Rankin_Inlet
      - America/Recife
      - America/Regina
      - America/Resolute
      - America/Rio_Branco
      - America/Santarem
      - America/Santiago
      - America/Santo_Domingo
      - America/Sao_Paulo
      - America/Scoresbysund
      - America/Sitka
      - America/St_Barthelemy
      - America/St_Johns
      - America/St_Kitts
      - America/St_Lucia
      - America/St_Thomas
      - America/St_Vincent
      - America/Swift_Current
      - America/Tegucigalpa
      - America/Thule
      - America/Tijuana
      - America/Toronto
      - America/Tortola
      - America/Vancouver
      - America/Whitehorse
      - America/Winnipeg
      - America/Yakutat
      - Antarctica/Casey
      - Antarctica/Davis
      - Antarctica/DumontDUrville
      - Antarctica/Macquarie
      - Antarctica/Mawson
      - Antarctica/McMurdo
      - Antarctica/Palmer
      - Antarctica/Rothera
      - Antarctica/Syowa
      - Antarctica/Troll
      - Antarctica/Vostok
      - Arctic/Longyearbyen
      - Asia/Aden
      - Asia/Almaty
      - Asia/Amman
      - Asia/Anadyr
      - Asia/Aqtau
      - Asia/Aqtobe
      - Asia/Ashgabat
      - Asia/Atyrau
      - Asia/Baghdad
      - Asia/Bahrain
      - Asia/Baku
      - Asia/Bangkok
      - Asia/Barnaul
      - Asia/Beirut
      - Asia/Bishkek
      - Asia/Brunei
      - Asia/Chita
      - Asia/Choibalsan
      - Asia/Colombo
      - Asia/Damascus
      - Asia/Dhaka
      - Asia/Dili
      - Asia/Dubai
      - Asia/Dushanbe
      - Asia/Famagusta
      - Asia/Gaza
      - Asia/Hebron
      - Asia/Ho_Chi_Minh
      - Asia/Hong_Kong
      - Asia/Hovd
      - Asia/Irkutsk
      - Asia/Jakarta
      - Asia/Jayapura
      - Asia/Jerusalem
      - Asia/Kabul
      - Asia/Kamchatka
      - Asia/Karachi
      - Asia/Kathmandu
      - Asia/Khandyga
      - Asia/Kolkata
      - Asia/Krasnoyarsk
      - Asia/Kuala_Lumpur
      - Asia/Kuching
      - Asia/Kuwait
      - Asia/Macau
      - Asia/Magadan
      - Asia/Makassar
      - Asia/Manila
      - Asia/Muscat
      - Asia/Nicosia
      - Asia/Novokuznetsk
      - Asia/Novosibirsk
      - Asia/Omsk
      - Asia/Oral
      - Asia/Phnom_Penh
      - Asia/Pontianak
      - Asia/Pyongyang
      - Asia/Qatar
      - Asia/Qostanay
      - Asia/Qyzylorda
      - Asia/Riyadh
      - Asia/Sakhalin
      - Asia/Samarkand
      - Asia/Seoul
      - Asia/Shanghai
      - Asia/Singapore
      - Asia/Srednekolymsk
      - Asia/Taipei
      - Asia/Tashkent
      - Asia/Tbilisi
      - Asia/Tehran
      - Asia/Thimphu
      - Asia/Tokyo
      - Asia/Tomsk
      - Asia/Ulaanbaatar
      - Asia/Urumqi
      - Asia/Ust-Nera
      - Asia/Vientiane
      - Asia/Vladivostok
      - Asia/Yakutsk
      - Asia/Yangon
      - Asia/Yekaterinburg
      - Asia/Yerevan
      - Atlantic/Azores
      - Atlantic/Bermuda
      - Atlantic/Canary
      - Atlantic/Cape_Verde
      - Atlantic/Faroe
      - Atlantic/Madeira
      - Atlantic/Reykjavik
      - Atlantic/South_Georgia
      - Atlantic/St_Helena
      - Atlantic/Stanley
      - Australia/Adelaide
      - Australia/Brisbane
      - Australia/Broken_Hill
      - Australia/Darwin
      - Australia/Eucla
      - Australia/Hobart
      - Australia/Lindeman
      - Australia/Lord_Howe
      - Australia/Melbourne
      - Australia/Perth
      - Australia/Sydney
      - Canada/Atlantic
      - Canada/Central
      - Canada/Eastern
      - Canada/Mountain
      - Canada/Newfoundland
      - Canada/Pacific
      - Europe/Amsterdam
      - Europe/Andorra
      - Europe/Astrakhan
      - Europe/Athens
      - Europe/Belgrade
      - Europe/Berlin
      - Europe/Bratislava
      - Europe/Brussels
      - Europe/Bucharest
      - Europe/Budapest
      - Europe/Busingen
      - Europe/Chisinau
      - Europe/Copenhagen
      - Europe/Dublin
      - Europe/Gibraltar
      - Europe/Guernsey
      - Europe/Helsinki
      - Europe/Isle_of_Man
      - Europe/Istanbul
      - Europe/Jersey
      - Europe/Kaliningrad
      - Europe/Kirov
      - Europe/Kyiv
      - Europe/Lisbon
      - Europe/Ljubljana
      - Europe/London
      - Europe/Luxembourg
      - Europe/Madrid
      - Europe/Malta
      - Europe/Mariehamn
      - Europe/Minsk
      - Europe/Monaco
      - Europe/Moscow
      - Europe/Oslo
      - Europe/Paris
      - Europe/Podgorica
      - Europe/Prague
      - Europe/Riga
      - Europe/Rome
      - Europe/Samara
      - Europe/San_Marino
      - Europe/Sarajevo
      - Europe/Saratov
      - Europe/Simferopol
      - Europe/Skopje
      - Europe/Sofia
      - Europe/Stockholm
      - Europe/Tallinn
      - Europe/Tirane
      - Europe/Ulyanovsk
      - Europe/Vaduz
      - Europe/Vatican
      - Europe/Vienna
      - Europe/Vilnius
      - Europe/Volgograd
      - Europe/Warsaw
      - Europe/Zagreb
      - Europe/Zurich
      - GMT
      - Indian/Antananarivo
      - Indian/Chagos
      - Indian/Christmas
      - Indian/Cocos
      - Indian/Comoro
      - Indian/Kerguelen
      - Indian/Mahe
      - Indian/Maldives
      - Indian/Mauritius
      - Indian/Mayotte
      - Indian/Reunion
      - Pacific/Apia
      - Pacific/Auckland
      - Pacific/Bougainville
      - Pacific/Chatham
      - Pacific/Chuuk
      - Pacific/Easter
      - Pacific/Efate
      - Pacific/Fakaofo
      - Pacific/Fiji
      - Pacific/Funafuti
      - Pacific/Galapagos
      - Pacific/Gambier
      - Pacific/Guadalcanal
      - Pacific/Guam
      - Pacific/Honolulu
      - Pacific/Kanton
      - Pacific/Kiritimati
      - Pacific/Kosrae
      - Pacific/Kwajalein
      - Pacific/Majuro
      - Pacific/Marquesas
      - Pacific/Midway
      - Pacific/Nauru
      - Pacific/Niue
      - Pacific/Norfolk
      - Pacific/Noumea
      - Pacific/Pago_Pago
      - Pacific/Palau
      - Pacific/Pitcairn
      - Pacific/Pohnpei
      - Pacific/Port_Moresby
      - Pacific/Rarotonga
      - Pacific/Saipan
      - Pacific/Tahiti
      - Pacific/Tarawa
      - Pacific/Tongatapu
      - Pacific/Wake
      - Pacific/Wallis
      - US/Alaska
      - US/Arizona
      - US/Central
      - US/Eastern
      - US/Hawaii
      - US/Mountain
      - US/Pacific
      - UTC
      type: string
      description: |-
        * `Africa/Abidjan` - Africa/Abidjan
        * `Africa/Accra` - Africa/Accra
        * `Africa/Addis_Ababa` - Africa/Addis_Ababa
        * `Africa/Algiers` - Africa/Algiers
        * `Africa/Asmara` - Africa/Asmara
        * `Africa/Bamako` - Africa/Bamako
        * `Africa/Bangui` - Africa/Bangui
        * `Africa/Banjul` - Africa/Banjul
        * `Africa/Bissau` - Africa/Bissau
        * `Africa/Blantyre` - Africa/Blantyre
        * `Africa/Brazzaville` - Africa/Brazzaville
        * `Africa/Bujumbura` - Africa/Bujumbura
        * `Africa/Cairo` - Africa/Cairo
        * `Africa/Casablanca` - Africa/Casablanca
        * `Africa/Ceuta` - Africa/Ceuta
        * `Africa/Conakry` - Africa/Conakry
        * `Africa/Dakar` - Africa/Dakar
        * `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam
        * `Africa/Djibouti` - Africa/Djibouti
        * `Africa/Douala` - Africa/Douala
        * `Africa/El_Aaiun` - Africa/El_Aaiun
        * `Africa/Freetown` - Africa/Freetown
        * `Africa/Gaborone` - Africa/Gaborone
        * `Africa/Harare` - Africa/Harare
        * `Africa/Johannesburg` - Africa/Johannesburg
        * `Africa/Juba` - Africa/Juba
        * `Africa/Kampala` - Africa/Kampala
        * `Africa/Khartoum` - Africa/Khartoum
        * `Africa/Kigali` - Africa/Kigali
        * `Africa/Kinshasa` - Africa/Kinshasa
        * `Africa/Lagos` - Africa/Lagos
        * `Africa/Libreville` - Africa/Libreville
        * `Africa/Lome` - Africa/Lome
        * `Africa/Luanda` - Africa/Luanda
        * `Africa/Lubumbashi` - Africa/Lubumbashi
        * `Africa/Lusaka` - Africa/Lusaka
        * `Africa/Malabo` - Africa/Malabo
        * `Africa/Maputo` - Africa/Maputo
        * `Africa/Maseru` - Africa/Maseru
        * `Africa/Mbabane` - Africa/Mbabane
        * `Africa/Mogadishu` - Africa/Mogadishu
        * `Africa/Monrovia` - Africa/Monrovia
        * `Africa/Nairobi` - Africa/Nairobi
        * `Africa/Ndjamena` - Africa/Ndjamena
        * `Africa/Niamey` - Africa/Niamey
        * `Africa/Nouakchott` - Africa/Nouakchott
        * `Africa/Ouagadougou` - Africa/Ouagadougou
        * `Africa/Porto-Novo` - Africa/Porto-Novo
        * `Africa/Sao_Tome` - Africa/Sao_Tome
        * `Africa/Tripoli` - Africa/Tripoli
        * `Africa/Tunis` - Africa/Tunis
        * `Africa/Windhoek` - Africa/Windhoek
        * `America/Adak` - America/Adak
        * `America/Anchorage` - America/Anchorage
        * `America/Anguilla` - America/Anguilla
        * `America/Antigua` - America/Antigua
        * `America/Araguaina` - America/Araguaina
        * `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires
        * `America/Argentina/Catamarca` - America/Argentina/Catamarca
        * `America/Argentina/Cordoba` - America/Argentina/Cordoba
        * `America/Argentina/Jujuy` - America/Argentina/Jujuy
        * `America/Argentina/La_Rioja` - America/Argentina/La_Rioja
        * `America/Argentina/Mendoza` - America/Argentina/Mendoza
        * `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos
        * `America/Argentina/Salta` - America/Argentina/Salta
        * `America/Argentina/San_Juan` - America/Argentina/San_Juan
        * `America/Argentina/San_Luis` - America/Argentina/San_Luis
        * `America/Argentina/Tucuman` - America/Argentina/Tucuman
        * `America/Argentina/Ushuaia` - America/Argentina/Ushuaia
        * `America/Aruba` - America/Aruba
        * `America/Asuncion` - America/Asuncion
        * `America/Atikokan` - America/Atikokan
        * `America/Bahia` - America/Bahia
        * `America/Bahia_Banderas` - America/Bahia_Banderas
        * `America/Barbados` - America/Barbados
        * `America/Belem` - America/Belem
        * `America/Belize` - America/Belize
        * `America/Blanc-Sablon` - America/Blanc-Sablon
        * `America/Boa_Vista` - America/Boa_Vista
        * `America/Bogota` - America/Bogota
        * `America/Boise` - America/Boise
        * `America/Cambridge_Bay` - America/Cambridge_Bay
        * `America/Campo_Grande` - America/Campo_Grande
        * `America/Cancun` - America/Cancun
        * `America/Caracas` - America/Caracas
        * `America/Cayenne` - America/Cayenne
        * `America/Cayman` - America/Cayman
        * `America/Chicago` - America/Chicago
        * `America/Chihuahua` - America/Chihuahua
        * `America/Ciudad_Juarez` - America/Ciudad_Juarez
        * `America/Costa_Rica` - America/Costa_Rica
        * `America/Creston` - America/Creston
        * `America/Cuiaba` - America/Cuiaba
        * `America/Curacao` - America/Curacao
        * `America/Danmarkshavn` - America/Danmarkshavn
        * `America/Dawson` - America/Dawson
        * `America/Dawson_Creek` - America/Dawson_Creek
        * `America/Denver` - America/Denver
        * `America/Detroit` - America/Detroit
        * `America/Dominica` - America/Dominica
        * `America/Edmonton` - America/Edmonton
        * `America/Eirunepe` - America/Eirunepe
        * `America/El_Salvador` - America/El_Salvador
        * `America/Fort_Nelson` - America/Fort_Nelson
        * `America/Fortaleza` - America/Fortaleza
        * `America/Glace_Bay` - America/Glace_Bay
        * `America/Goose_Bay` - America/Goose_Bay
        * `America/Grand_Turk` - America/Grand_Turk
        * `America/Grenada` - America/Grenada
        * `America/Guadeloupe` - America/Guadeloupe
        * `America/Guatemala` - America/Guatemala
        * `America/Guayaquil` - America/Guayaquil
        * `America/Guyana` - America/Guyana
        * `America/Halifax` - America/Halifax
        * `America/Havana` - America/Havana
        * `America/Hermosillo` - America/Hermosillo
        * `America/Indiana/Indianapolis` - America/Indiana/Indianapolis
        * `America/Indiana/Knox` - America/Indiana/Knox
        * `America/Indiana/Marengo` - America/Indiana/Marengo
        * `America/Indiana/Petersburg` - America/Indiana/Petersburg
        * `America/Indiana/Tell_City` - America/Indiana/Tell_City
        * `America/Indiana/Vevay` - America/Indiana/Vevay
        * `America/Indiana/Vincennes` - America/Indiana/Vincennes
        * `America/Indiana/Winamac` - America/Indiana/Winamac
        * `America/Inuvik` - America/Inuvik
        * `America/Iqaluit` - America/Iqaluit
        * `America/Jamaica` - America/Jamaica
        * `America/Juneau` - America/Juneau
        * `America/Kentucky/Louisville` - America/Kentucky/Louisville
        * `America/Kentucky/Monticello` - America/Kentucky/Monticello
        * `America/Kralendijk` - America/Kralendijk
        * `America/La_Paz` - America/La_Paz
        * `America/Lima` - America/Lima
        * `America/Los_Angeles` - America/Los_Angeles
        * `America/Lower_Princes` - America/Lower_Princes
        * `America/Maceio` - America/Maceio
        * `America/Managua` - America/Managua
        * `America/Manaus` - America/Manaus
        * `America/Marigot` - America/Marigot
        * `America/Martinique` - America/Martinique
        * `America/Matamoros` - America/Matamoros
        * `America/Mazatlan` - America/Mazatlan
        * `America/Menominee` - America/Menominee
        * `America/Merida` - America/Merida
        * `America/Metlakatla` - America/Metlakatla
        * `America/Mexico_City` - America/Mexico_City
        * `America/Miquelon` - America/Miquelon
        * `America/Moncton` - America/Moncton
        * `America/Monterrey` - America/Monterrey
        * `America/Montevideo` - America/Montevideo
        * `America/Montserrat` - America/Montserrat
        * `America/Nassau` - America/Nassau
        * `America/New_York` - America/New_York
        * `America/Nome` - America/Nome
        * `America/Noronha` - America/Noronha
        * `America/North_Dakota/Beulah` - America/North_Dakota/Beulah
        * `America/North_Dakota/Center` - America/North_Dakota/Center
        * `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem
        * `America/Nuuk` - America/Nuuk
        * `America/Ojinaga` - America/Ojinaga
        * `America/Panama` - America/Panama
        * `America/Paramaribo` - America/Paramaribo
        * `America/Phoenix` - America/Phoenix
        * `America/Port-au-Prince` - America/Port-au-Prince
        * `America/Port_of_Spain` - America/Port_of_Spain
        * `America/Porto_Velho` - America/Porto_Velho
        * `America/Puerto_Rico` - America/Puerto_Rico
        * `America/Punta_Arenas` - America/Punta_Arenas
        * `America/Rankin_Inlet` - America/Rankin_Inlet
        * `America/Recife` - America/Recife
        * `America/Regina` - America/Regina
        * `America/Resolute` - America/Resolute
        * `America/Rio_Branco` - America/Rio_Branco
        * `America/Santarem` - America/Santarem
        * `America/Santiago` - America/Santiago
        * `America/Santo_Domingo` - America/Santo_Domingo
        * `America/Sao_Paulo` - America/Sao_Paulo
        * `America/Scoresbysund` - America/Scoresbysund
        * `America/Sitka` - America/Sitka
        * `America/St_Barthelemy` - America/St_Barthelemy
        * `America/St_Johns` - America/St_Johns
        * `America/St_Kitts` - America/St_Kitts
        * `America/St_Lucia` - America/St_Lucia
        * `America/St_Thomas` - America/St_Thomas
        * `America/St_Vincent` - America/St_Vincent
        * `America/Swift_Current` - America/Swift_Current
        * `America/Tegucigalpa` - America/Tegucigalpa
        * `America/Thule` - America/Thule
        * `America/Tijuana` - America/Tijuana
        * `America/Toronto` - America/Toronto
        * `America/Tortola` - America/Tortola
        * `America/Vancouver` - America/Vancouver
        * `America/Whitehorse` - America/Whitehorse
        * `America/Winnipeg` - America/Winnipeg
        * `America/Yakutat` - America/Yakutat
        * `Antarctica/Casey` - Antarctica/Casey
        * `Antarctica/Davis` - Antarctica/Davis
        * `Antarctica/DumontDUrville` - Antarctica/DumontDUrville
        * `Antarctica/Macquarie` - Antarctica/Macquarie
        * `Antarctica/Mawson` - Antarctica/Mawson
        * `Antarctica/McMurdo` - Antarctica/McMurdo
        * `Antarctica/Palmer` - Antarctica/Palmer
        * `Antarctica/Rothera` - Antarctica/Rothera
        * `Antarctica/Syowa` - Antarctica/Syowa
        * `Antarctica/Troll` - Antarctica/Troll
        * `Antarctica/Vostok` - Antarctica/Vostok
        * `Arctic/Longyearbyen` - Arctic/Longyearbyen
        * `Asia/Aden` - Asia/Aden
        * `Asia/Almaty` - Asia/Almaty
        * `Asia/Amman` - Asia/Amman
        * `Asia/Anadyr` - Asia/Anadyr
        * `Asia/Aqtau` - Asia/Aqtau
        * `Asia/Aqtobe` - Asia/Aqtobe
        * `Asia/Ashgabat` - Asia/Ashgabat
        * `Asia/Atyrau` - Asia/Atyrau
        * `Asia/Baghdad` - Asia/Baghdad
        * `Asia/Bahrain` - Asia/Bahrain
        * `Asia/Baku` - Asia/Baku
        * `Asia/Bangkok` - Asia/Bangkok
        * `Asia/Barnaul` - Asia/Barnaul
        * `Asia/Beirut` - Asia/Beirut
        * `Asia/Bishkek` - Asia/Bishkek
        * `Asia/Brunei` - Asia/Brunei
        * `Asia/Chita` - Asia/Chita
        * `Asia/Choibalsan` - Asia/Choibalsan
        * `Asia/Colombo` - Asia/Colombo
        * `Asia/Damascus` - Asia/Damascus
        * `Asia/Dhaka` - Asia/Dhaka
        * `Asia/Dili` - Asia/Dili
        * `Asia/Dubai` - Asia/Dubai
        * `Asia/Dushanbe` - Asia/Dushanbe
        * `Asia/Famagusta` - Asia/Famagusta
        * `Asia/Gaza` - Asia/Gaza
        * `Asia/Hebron` - Asia/Hebron
        * `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh
        * `Asia/Hong_Kong` - Asia/Hong_Kong
        * `Asia/Hovd` - Asia/Hovd
        * `Asia/Irkutsk` - Asia/Irkutsk
        * `Asia/Jakarta` - Asia/Jakarta
        * `Asia/Jayapura` - Asia/Jayapura
        * `Asia/Jerusalem` - Asia/Jerusalem
        * `Asia/Kabul` - Asia/Kabul
        * `Asia/Kamchatka` - Asia/Kamchatka
        * `Asia/Karachi` - Asia/Karachi
        * `Asia/Kathmandu` - Asia/Kathmandu
        * `Asia/Khandyga` - Asia/Khandyga
        * `Asia/Kolkata` - Asia/Kolkata
        * `Asia/Krasnoyarsk` - Asia/Krasnoyarsk
        * `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur
        * `Asia/Kuching` - Asia/Kuching
        * `Asia/Kuwait` - Asia/Kuwait
        * `Asia/Macau` - Asia/Macau
        * `Asia/Magadan` - Asia/Magadan
        * `Asia/Makassar` - Asia/Makassar
        * `Asia/Manila` - Asia/Manila
        * `Asia/Muscat` - Asia/Muscat
        * `Asia/Nicosia` - Asia/Nicosia
        * `Asia/Novokuznetsk` - Asia/Novokuznetsk
        * `Asia/Novosibirsk` - Asia/Novosibirsk
        * `Asia/Omsk` - Asia/Omsk
        * `Asia/Oral` - Asia/Oral
        * `Asia/Phnom_Penh` - Asia/Phnom_Penh
        * `Asia/Pontianak` - Asia/Pontianak
        * `Asia/Pyongyang` - Asia/Pyongyang
        * `Asia/Qatar` - Asia/Qatar
        * `Asia/Qostanay` - Asia/Qostanay
        * `Asia/Qyzylorda` - Asia/Qyzylorda
        * `Asia/Riyadh` - Asia/Riyadh
        * `Asia/Sakhalin` - Asia/Sakhalin
        * `Asia/Samarkand` - Asia/Samarkand
        * `Asia/Seoul` - Asia/Seoul
        * `Asia/Shanghai` - Asia/Shanghai
        * `Asia/Singapore` - Asia/Singapore
        * `Asia/Srednekolymsk` - Asia/Srednekolymsk
        * `Asia/Taipei` - Asia/Taipei
        * `Asia/Tashkent` - Asia/Tashkent
        * `Asia/Tbilisi` - Asia/Tbilisi
        * `Asia/Tehran` - Asia/Tehran
        * `Asia/Thimphu` - Asia/Thimphu
        * `Asia/Tokyo` - Asia/Tokyo
        * `Asia/Tomsk` - Asia/Tomsk
        * `Asia/Ulaanbaatar` - Asia/Ulaanbaatar
        * `Asia/Urumqi` - Asia/Urumqi
        * `Asia/Ust-Nera` - Asia/Ust-Nera
        * `Asia/Vientiane` - Asia/Vientiane
        * `Asia/Vladivostok` - Asia/Vladivostok
        * `Asia/Yakutsk` - Asia/Yakutsk
        * `Asia/Yangon` - Asia/Yangon
        * `Asia/Yekaterinburg` - Asia/Yekaterinburg
        * `Asia/Yerevan` - Asia/Yerevan
        * `Atlantic/Azores` - Atlantic/Azores
        * `Atlantic/Bermuda` - Atlantic/Bermuda
        * `Atlantic/Canary` - Atlantic/Canary
        * `Atlantic/Cape_Verde` - Atlantic/Cape_Verde
        * `Atlantic/Faroe` - Atlantic/Faroe
        * `Atlantic/Madeira` - Atlantic/Madeira
        * `Atlantic/Reykjavik` - Atlantic/Reykjavik
        * `Atlantic/South_Georgia` - Atlantic/South_Georgia
        * `Atlantic/St_Helena` - Atlantic/St_Helena
        * `Atlantic/Stanley` - Atlantic/Stanley
        * `Australia/Adelaide` - Australia/Adelaide
        * `Australia/Brisbane` - Australia/Brisbane
        * `Australia/Broken_Hill` - Australia/Broken_Hill
        * `Australia/Darwin` - Australia/Darwin
        * `Australia/Eucla` - Australia/Eucla
        * `Australia/Hobart` - Australia/Hobart
        * `Australia/Lindeman` - Australia/Lindeman
        * `Australia/Lord_Howe` - Australia/Lord_Howe
        * `Australia/Melbourne` - Australia/Melbourne
        * `Australia/Perth` - Australia/Perth
        * `Australia/Sydney` - Australia/Sydney
        * `Canada/Atlantic` - Canada/Atlantic
        * `Canada/Central` - Canada/Central
        * `Canada/Eastern` - Canada/Eastern
        * `Canada/Mountain` - Canada/Mountain
        * `Canada/Newfoundland` - Canada/Newfoundland
        * `Canada/Pacific` - Canada/Pacific
        * `Europe/Amsterdam` - Europe/Amsterdam
        * `Europe/Andorra` - Europe/Andorra
        * `Europe/Astrakhan` - Europe/Astrakhan
        * `Europe/Athens` - Europe/Athens
        * `Europe/Belgrade` - Europe/Belgrade
        * `Europe/Berlin` - Europe/Berlin
        * `Europe/Bratislava` - Europe/Bratislava
        * `Europe/Brussels` - Europe/Brussels
        * `Europe/Bucharest` - Europe/Bucharest
        * `Europe/Budapest` - Europe/Budapest
        * `Europe/Busingen` - Europe/Busingen
        * `Europe/Chisinau` - Europe/Chisinau
        * `Europe/Copenhagen` - Europe/Copenhagen
        * `Europe/Dublin` - Europe/Dublin
        * `Europe/Gibraltar` - Europe/Gibraltar
        * `Europe/Guernsey` - Europe/Guernsey
        * `Europe/Helsinki` - Europe/Helsinki
        * `Europe/Isle_of_Man` - Europe/Isle_of_Man
        * `Europe/Istanbul` - Europe/Istanbul
        * `Europe/Jersey` - Europe/Jersey
        * `Europe/Kaliningrad` - Europe/Kaliningrad
        * `Europe/Kirov` - Europe/Kirov
        * `Europe/Kyiv` - Europe/Kyiv
        * `Europe/Lisbon` - Europe/Lisbon
        * `Europe/Ljubljana` - Europe/Ljubljana
        * `Europe/London` - Europe/London
        * `Europe/Luxembourg` - Europe/Luxembourg
        * `Europe/Madrid` - Europe/Madrid
        * `Europe/Malta` - Europe/Malta
        * `Europe/Mariehamn` - Europe/Mariehamn
        * `Europe/Minsk` - Europe/Minsk
        * `Europe/Monaco` - Europe/Monaco
        * `Europe/Moscow` - Europe/Moscow
        * `Europe/Oslo` - Europe/Oslo
        * `Europe/Paris` - Europe/Paris
        * `Europe/Podgorica` - Europe/Podgorica
        * `Europe/Prague` - Europe/Prague
        * `Europe/Riga` - Europe/Riga
        * `Europe/Rome` - Europe/Rome
        * `Europe/Samara` - Europe/Samara
        * `Europe/San_Marino` - Europe/San_Marino
        * `Europe/Sarajevo` - Europe/Sarajevo
        * `Europe/Saratov` - Europe/Saratov
        * `Europe/Simferopol` - Europe/Simferopol
        * `Europe/Skopje` - Europe/Skopje
        * `Europe/Sofia` - Europe/Sofia
        * `Europe/Stockholm` - Europe/Stockholm
        * `Europe/Tallinn` - Europe/Tallinn
        * `Europe/Tirane` - Europe/Tirane
        * `Europe/Ulyanovsk` - Europe/Ulyanovsk
        * `Europe/Vaduz` - Europe/Vaduz
        * `Europe/Vatican` - Europe/Vatican
        * `Europe/Vienna` - Europe/Vienna
        * `Europe/Vilnius` - Europe/Vilnius
        * `Europe/Volgograd` - Europe/Volgograd
        * `Europe/Warsaw` - Europe/Warsaw
        * `Europe/Zagreb` - Europe/Zagreb
        * `Europe/Zurich` - Europe/Zurich
        * `GMT` - GMT
        * `Indian/Antananarivo` - Indian/Antananarivo
        * `Indian/Chagos` - Indian/Chagos
        * `Indian/Christmas` - Indian/Christmas
        * `Indian/Cocos` - Indian/Cocos
        * `Indian/Comoro` - Indian/Comoro
        * `Indian/Kerguelen` - Indian/Kerguelen
        * `Indian/Mahe` - Indian/Mahe
        * `Indian/Maldives` - Indian/Maldives
        * `Indian/Mauritius` - Indian/Mauritius
        * `Indian/Mayotte` - Indian/Mayotte
        * `Indian/Reunion` - Indian/Reunion
        * `Pacific/Apia` - Pacific/Apia
        * `Pacific/Auckland` - Pacific/Auckland
        * `Pacific/Bougainville` - Pacific/Bougainville
        * `Pacific/Chatham` - Pacific/Chatham
        * `Pacific/Chuuk` - Pacific/Chuuk
        * `Pacific/Easter` - Pacific/Easter
        * `Pacific/Efate` - Pacific/Efate
        * `Pacific/Fakaofo` - Pacific/Fakaofo
        * `Pacific/Fiji` - Pacific/Fiji
        * `Pacific/Funafuti` - Pacific/Funafuti
        * `Pacific/Galapagos` - Pacific/Galapagos
        * `Pacific/Gambier` - Pacific/Gambier
        * `Pacific/Guadalcanal` - Pacific/Guadalcanal
        * `Pacific/Guam` - Pacific/Guam
        * `Pacific/Honolulu` - Pacific/Honolulu
        * `Pacific/Kanton` - Pacific/Kanton
        * `Pacific/Kiritimati` - Pacific/Kiritimati
        * `Pacific/Kosrae` - Pacific/Kosrae
        * `Pacific/Kwajalein` - Pacific/Kwajalein
        * `Pacific/Majuro` - Pacific/Majuro
        * `Pacific/Marquesas` - Pacific/Marquesas
        * `Pacific/Midway` - Pacific/Midway
        * `Pacific/Nauru` - Pacific/Nauru
        * `Pacific/Niue` - Pacific/Niue
        * `Pacific/Norfolk` - Pacific/Norfolk
        * `Pacific/Noumea` - Pacific/Noumea
        * `Pacific/Pago_Pago` - Pacific/Pago_Pago
        * `Pacific/Palau` - Pacific/Palau
        * `Pacific/Pitcairn` - Pacific/Pitcairn
        * `Pacific/Pohnpei` - Pacific/Pohnpei
        * `Pacific/Port_Moresby` - Pacific/Port_Moresby
        * `Pacific/Rarotonga` - Pacific/Rarotonga
        * `Pacific/Saipan` - Pacific/Saipan
        * `Pacific/Tahiti` - Pacific/Tahiti
        * `Pacific/Tarawa` - Pacific/Tarawa
        * `Pacific/Tongatapu` - Pacific/Tongatapu
        * `Pacific/Wake` - Pacific/Wake
        * `Pacific/Wallis` - Pacific/Wallis
        * `US/Alaska` - US/Alaska
        * `US/Arizona` - US/Arizona
        * `US/Central` - US/Central
        * `US/Eastern` - US/Eastern
        * `US/Hawaii` - US/Hawaii
        * `US/Mountain` - US/Mountain
        * `US/Pacific` - US/Pacific
        * `UTC` - UTC
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    TokenResponse:
      type: object
      description: Token response serializer matching FastAPI format
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
          default: bearer
        expires_in:
          type: integer
          default: 1800
        user:
          $ref: '#/components/schemas/UserProfile'
      required:
      - access_token
      - refresh_token
      - user
    Topic:
      type: object
      description: Serializer for practitioner topics
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
    TopicRequest:
      type: object
      description: Serializer for practitioner topics
      properties:
        content:
          type: string
          nullable: true
    UserLoginRequest:
      type: object
      description: User login serializer
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
      - email
      - password
    UserProfile:
      type: object
      description: User profile serializer
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        phone_number:
          type: string
          nullable: true
          description: Phone number in international format
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        phone_number_verified:
          type: boolean
          readOnly: true
        timezone:
          type: string
          description: User's preferred timezone (e.g., "America/New_York", "Europe/London")
          maxLength: 50
        is_practitioner:
          type: boolean
          readOnly: true
        practitioner_public_id:
          type: string
          readOnly: true
        practitioner_id:
          type: string
          readOnly: true
        account_status:
          allOf:
          - $ref: '#/components/schemas/AccountStatusEnum'
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_staff:
          type: boolean
          readOnly: true
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_superuser:
          type: boolean
          readOnly: true
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
    UserProfileRequest:
      type: object
      description: User profile serializer
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          description: Phone number in international format
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        timezone:
          type: string
          minLength: 1
          description: User's preferred timezone (e.g., "America/New_York", "Europe/London")
          maxLength: 50
    UserRegistration:
      type: object
      description: User registration serializer
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          description: Phone number in international format
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
      required:
      - email
      - first_name
      - last_name
    UserRegistrationRequest:
      type: object
      description: User registration serializer
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 8
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
        first_name:
          type: string
          minLength: 1
          maxLength: 150
        last_name:
          type: string
          minLength: 1
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          description: Phone number in international format
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
      required:
      - email
      - first_name
      - last_name
      - password
      - password_confirm
    ZipCode:
      type: object
      description: Serializer for postal/zip codes.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 20
        city:
          type: integer
          nullable: true
        city_name:
          type: string
          readOnly: true
        state_code:
          type: string
          readOnly: true
        country:
          type: integer
        country_code:
          type: string
          readOnly: true
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          nullable: true
      required:
      - code
      - country
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
tags:
- name: Auth
  description: Authentication and authorization endpoints
- name: Users
  description: User profile and account management
- name: Practitioners
  description: Practitioner profiles, services, and availability
- name: Services
  description: Service catalog including sessions, workshops, and courses
- name: Bookings
  description: Booking creation, management, and scheduling
- name: Availability
  description: Practitioner availability and time slot management
- name: Payments
  description: Payment processing, credits, and transactions
- name: Subscriptions
  description: Practitioner subscription management
- name: Reviews
  description: Reviews and ratings for practitioners and services
- name: Locations
  description: Service locations and venue management
- name: Media
  description: Media upload and management
- name: Messaging
  description: Real-time messaging between users
- name: Notifications
  description: Push notifications and alerts
- name: Streams
  description: Live streaming and video content
- name: Rooms
  description: Video room management for sessions
- name: Community
  description: Community features and interactions
- name: Analytics
  description: Analytics and reporting endpoints
- name: Search
  description: Search practitioners and services
- name: Referrals
  description: Referral program management
externalDocs:
  description: Find more info here
  url: https://docs.estuary.com
