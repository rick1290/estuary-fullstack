version: '3.1'

volumes:
  postgres-data:

services:
  postgres:
    image: pgautoupgrade/pgautoupgrade:latest
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: postgres

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'

  admin:
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend:latest
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: uvicorn estuary.asgi:application --host 0.0.0.0 --reload
    depends_on:
      - postgres
      - redis

  api:
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend:latest
    ports:
      - '8001:8000'
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    command: uvicorn api.main:app --host 0.0.0.0 --reload
    depends_on:
      - postgres

  frontend:
    build:
      context: frontend
    image: frontend:latest
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
    command: yarn dev
    depends_on:
      - api

  frontend-2:
    build:
      context: frontend-2
      dockerfile: Dockerfile.dev
    image: frontend-2:dev
    ports:
      - '3001:3001'
    volumes:
      - ./frontend-2:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - INTERNAL_API_URL=http://admin:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
      - NEXT_PUBLIC_SITE_URL=http://localhost:3001
      - NEXTAUTH_URL=http://localhost:3001
      - PORT=3001
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_51RYVT4I79x8ltrHuOxx5PkP7sQf42FQAtUPmJyaREnFwPwgU8WPdQxqM2P6Ll8q5cI5uYBc0EpW9OpVApVcubE5Z004JjhTdrq
    depends_on:
      - admin

  celery-worker:
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend:latest
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A estuary worker --loglevel=info --concurrency=4
    depends_on:
      - postgres
      - redis
      - admin

  celery-beat:
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend:latest
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: celery -A estuary beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - postgres
      - redis
      - celery-worker

  flower:
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend:latest
    ports:
      - '5555:5555'
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_PORT=5555
    command: celery -A estuary flower --port=5555 --basic_auth=${FLOWER_BASIC_AUTH:-admin:admin}
    depends_on:
      - redis
      - celery-worker

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - admin
      - api
